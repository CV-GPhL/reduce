!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABANDONED_RC	reduce_src/bkup/new_reduce.cpp	53;"	d	file:
ABANDONED_RC	reduce_src/bkup/reduce.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/bkup/sym_add.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/bkup/sym_print.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/new_reduce.cpp	53;"	d	file:
ABANDONED_RC	reduce_src/print_neighbors.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/reduce.cpp	73;"	d	file:
ABANDONED_RC	reduce_src/sym_add.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/sym_print.cpp	84;"	d	file:
ABANDONED_RC	reduce_src/test_reduce.cpp	84;"	d	file:
ACCEPTOR_ATOM	reduce_src/ElementInfo.h	35;"	d
ACCEPTOR_ATOM	reduce_src/bkup/ElementInfo.h	35;"	d
AGGRGT	libpdb/pdb++.h	/^		CMPONT, TRNSFM, AGRDES, AGGRGT,$/;"	e	enum:PDB::RecordType
AGRDES	libpdb/pdb++.h	/^		CMPONT, TRNSFM, AGRDES, AGGRGT,$/;"	e	enum:PDB::RecordType
ANISOU	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
AName	libpdb/pdb++.h	/^	typedef char	AName[5];		\/\/ atom name - NO2*$/;"	t	class:PDB
AROMATICFLAG	reduce_src/AtomConn.h	37;"	d
AROMATICFLAG	reduce_src/bkup/AtomConn.h	37;"	d
ATOM	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
ATOMCONN_H	reduce_src/AtomConn.h	17;"	d
ATOMCONN_H	reduce_src/bkup/AtomConn.h	17;"	d
ATOMPOSITIONS_H	reduce_src/AtomPositions.h	17;"	d
ATOMPOSITIONS_H	reduce_src/bkup/AtomPositions.h	17;"	d
AUTHOR	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
Aggrgt	libpdb/pdb++.h	/^	struct Aggrgt {$/;"	s	class:PDB
Agrdes	libpdb/pdb++.h	/^	struct Agrdes {$/;"	s	class:PDB
Anisou	libpdb/pdb++.h	/^	struct Anisou {$/;"	s	class:PDB
Atom	libpdb/pdb++.h	/^	struct Atom {$/;"	s	class:PDB
AtomConn	reduce_src/AtomConn.h	/^	AtomConn(const std::string& name, int ord) : _name(name), _order(ord) {_emptyString = "";}$/;"	f	class:AtomConn
AtomConn	reduce_src/AtomConn.h	/^   AtomConn(const AtomConn& a)$/;"	f	class:AtomConn
AtomConn	reduce_src/AtomConn.h	/^class AtomConn {$/;"	c
AtomConn	reduce_src/bkup/AtomConn.h	/^	AtomConn(const std::string& name, int ord) : _name(name), _order(ord) {_emptyString = "";}$/;"	f	class:AtomConn
AtomConn	reduce_src/bkup/AtomConn.h	/^   AtomConn(const AtomConn& a)$/;"	f	class:AtomConn
AtomConn	reduce_src/bkup/AtomConn.h	/^class AtomConn {$/;"	c
AtomDescr	reduce_src/AtomDescr.h	/^	AtomDescr($/;"	f	class:AtomDescr
AtomDescr	reduce_src/AtomDescr.h	/^	AtomDescr() : _atomPos(0,0,0), _atomResNo(0), _atRadius(0), _atRadiusSqr(0), _originalAtom( 0 ) {};$/;"	f	class:AtomDescr
AtomDescr	reduce_src/AtomDescr.h	/^	AtomDescr(const AtomDescr& rhs) {$/;"	f	class:AtomDescr
AtomDescr	reduce_src/AtomDescr.h	/^class AtomDescr$/;"	c
AtomDescr	reduce_src/bkup/AtomDescr.h	/^	AtomDescr($/;"	f	class:AtomDescr
AtomDescr	reduce_src/bkup/AtomDescr.h	/^	AtomDescr() : _atomPos(0,0,0), _atomResNo(0), _atRadius(0), _atRadiusSqr(0), _originalAtom( 0 ) {};$/;"	f	class:AtomDescr
AtomDescr	reduce_src/bkup/AtomDescr.h	/^	AtomDescr(const AtomDescr& rhs) {$/;"	f	class:AtomDescr
AtomDescr	reduce_src/bkup/AtomDescr.h	/^class AtomDescr$/;"	c
AtomPositions	reduce_src/AtomPositions.h	/^   AtomPositions(int nblocks, bool onlyA, bool xplor, bool old, bool bbmodel, int nbCutoff,$/;"	f	class:AtomPositions
AtomPositions	reduce_src/AtomPositions.h	/^class AtomPositions {$/;"	c
AtomPositions	reduce_src/bkup/AtomPositions.h	/^   AtomPositions(int nblocks, bool onlyA, bool xplor, bool old, bool bbmodel, int nbCutoff,$/;"	f	class:AtomPositions
AtomPositions	reduce_src/bkup/AtomPositions.h	/^class AtomPositions {$/;"	c
Author	libpdb/pdb++.h	/^	struct Author {$/;"	s	class:PDB
BACKBONEMODEL	reduce_src/AtomConn.h	60;"	d
BACKBONEMODEL	reduce_src/bkup/AtomConn.h	60;"	d
BEST_HBOND_OVERLAP	reduce_src/AtomPositions.cpp	1388;"	d	file:
BEST_HBOND_OVERLAP	reduce_src/bkup/AtomPositions.cpp	1388;"	d	file:
BONDBUMPFLAG	reduce_src/AtomConn.h	29;"	d
BONDBUMPFLAG	reduce_src/bkup/AtomConn.h	29;"	d
BOOSTHOME	reduce_src/Makefile	/^BOOSTHOME   =${CRYSTAL_CODE_DIR}\/boost$/;"	m
BUMPERPOINT_H	reduce_src/BumperPoint.h	17;"	d
BUMPERPOINT_H	reduce_src/bkup/BumperPoint.h	17;"	d
BackBoneModel	reduce_src/bkup/new_reduce.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/bkup/reduce.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/bkup/sym_add.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/bkup/sym_print.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/new_reduce.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/print_neighbors.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/reduce.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/sym_add.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/sym_print.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BackBoneModel	reduce_src/test_reduce.cpp	/^bool BackBoneModel	      = FALSE; $/;"	v
BadBumpGapCut	reduce_src/bkup/new_reduce.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/bkup/reduce.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/bkup/sym_add.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/bkup/sym_print.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/new_reduce.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/print_neighbors.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/reduce.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/sym_add.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/sym_print.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BadBumpGapCut	reduce_src/test_reduce.cpp	/^float BadBumpGapCut   = 0.4; \/\/ bump is bad if >= than this$/;"	v
BeNotifiedOfEliminatedNode	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::BeNotifiedOfEliminatedNode(int indexContractedNode) $/;"	f	class:NodeAndEdgeManager
BeNotifiedOfEliminatedNode	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::BeNotifiedOfEliminatedNode(int indexContractedNode) $/;"	f	class:NodeAndEdgeManager
BondLimits_t	reduce_src/FlipMemo.h	/^struct BondLimits_t {$/;"	s
BondLimits_t	reduce_src/bkup/FlipMemo.h	/^struct BondLimits_t {$/;"	s
BufLen	libpdb/pdb++.h	/^	enum { BufLen = 101, PDBRUNVersion = 6 };$/;"	e	enum:PDB::__anon1
BuildHisHydrogens	reduce_src/bkup/new_reduce.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/bkup/reduce.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/bkup/sym_add.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/bkup/sym_print.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/new_reduce.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/print_neighbors.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/reduce.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/sym_add.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/sym_print.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BuildHisHydrogens	reduce_src/test_reduce.cpp	/^bool BuildHisHydrogens        = FALSE;$/;"	v
BumperPoint	reduce_src/BumperPoint.h	/^   BumperPoint(const Point3d& p, int rn, int an, float rad) {$/;"	f	class:BumperPoint
BumperPoint	reduce_src/BumperPoint.h	/^class BumperPoint {$/;"	c
BumperPoint	reduce_src/bkup/BumperPoint.h	/^   BumperPoint(const Point3d& p, int rn, int an, float rad) {$/;"	f	class:BumperPoint
BumperPoint	reduce_src/bkup/BumperPoint.h	/^class BumperPoint {$/;"	c
BumperPointRep	reduce_src/BumperPoint.h	/^   struct BumperPointRep {$/;"	s	class:BumperPoint
BumperPointRep	reduce_src/bkup/BumperPoint.h	/^   struct BumperPointRep {$/;"	s	class:BumperPoint
CCTBXHOME	reduce_src/Makefile	/^CCTBXHOME   =${CRYSTAL_CODE_DIR}\/cctbx_project\/$/;"	m
CFLAGS	libpdb/Makefile	/^CFLAGS		= $(OPT) $(DEBUG) -DBOOLPREDEFINED -DHASSSCANFEXTERN$/;"	m
CFLAGS	reduce_src/Makefile	/^CFLAGS = $(OPTS) $(DEBUG) $(PROG_FLGS) $(DICT_LOC)\\$/;"	m
CFLAGS	toolclasses/Makefile	/^CFLAGS		= $(OPT) $(DEBUG) \\$/;"	m
CLIQUELIST_H	reduce_src/CliqueList.h	18;"	d
CLIQUELIST_H	reduce_src/bkup/CliqueList.h	18;"	d
CMPDES	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
CMPONT	libpdb/pdb++.h	/^		CMPONT, TRNSFM, AGRDES, AGGRGT,$/;"	e	enum:PDB::RecordType
COMPND	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
CONECT	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
CONNECTED_RES	reduce_src/bkup/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/bkup/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/bkup/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/bkup/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/print_neighbors.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CONNECTED_RES	reduce_src/test_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
CRYST1	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
CRYSTAL_CODE_DIR	reduce_src/Makefile	/^CRYSTAL_CODE_DIR=\/home\/verma\/work$/;"	m
CTAB_H	reduce_src/CTab.h	21;"	d
CTAB_H	reduce_src/bkup/CTab.h	21;"	d
CTab	reduce_src/CTab.cpp	/^CTab::CTab(const std::string& dbfile, int sz) {$/;"	f	class:CTab
CTab	reduce_src/CTab.h	/^class CTab {$/;"	c
CTab	reduce_src/bkup/CTab.cpp	/^CTab::CTab(const std::string& dbfile, int sz) {$/;"	f	class:CTab
CTab	reduce_src/bkup/CTab.h	/^class CTab {$/;"	c
CXX	libpdb/Makefile	/^CXX		= g++$/;"	m
CXX	reduce_src/Makefile	/^CXX		= g++$/;"	m
CXX	toolclasses/Makefile	/^CXX		= g++$/;"	m
CliqueList	reduce_src/CliqueList.h	/^   CliqueList() {}$/;"	f	class:CliqueList
CliqueList	reduce_src/CliqueList.h	/^   CliqueList(const CliqueList& cl) : _cliques(cl._cliques),$/;"	f	class:CliqueList
CliqueList	reduce_src/CliqueList.h	/^class CliqueList {$/;"	c
CliqueList	reduce_src/bkup/CliqueList.h	/^   CliqueList() {}$/;"	f	class:CliqueList
CliqueList	reduce_src/bkup/CliqueList.h	/^   CliqueList(const CliqueList& cl) : _cliques(cl._cliques),$/;"	f	class:CliqueList
CliqueList	reduce_src/bkup/CliqueList.h	/^class CliqueList {$/;"	c
Cmpdes	libpdb/pdb++.h	/^	typedef Agrdes	Cmpdes;$/;"	t	class:PDB
Cmpont	libpdb/pdb++.h	/^	struct Cmpont {$/;"	s	class:PDB
Compnd	libpdb/pdb++.h	/^	typedef Author	Compnd;$/;"	t	class:PDB
Conect	libpdb/pdb++.h	/^	struct Conect {$/;"	s	class:PDB
ConnType	reduce_src/bkup/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/bkup/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/bkup/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/bkup/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/print_neighbors.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
ConnType	reduce_src/test_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	g	file:
Coord	toolclasses/Point3d.h	/^typedef double Coord;$/;"	t
Cryst1	libpdb/pdb++.h	/^	struct Cryst1 {$/;"	s	class:PDB
Cryst1	reduce_src/bkup/new_reduce.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/bkup/reduce.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/bkup/sym_add.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/bkup/sym_print.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/new_reduce.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/print_neighbors.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/sym_add.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/sym_print.cpp	/^struct Cryst1 {$/;"	s	file:
Cryst1	reduce_src/test_reduce.cpp	/^struct Cryst1 {$/;"	s	file:
DBbufsz	reduce_src/CTab.cpp	/^const int CTab::DBbufsz = 500;$/;"	m	class:CTab	file:
DBbufsz	reduce_src/CTab.h	/^   static const int DBbufsz;$/;"	m	class:CTab
DBbufsz	reduce_src/bkup/CTab.cpp	/^const int CTab::DBbufsz = 500;$/;"	m	class:CTab	file:
DBbufsz	reduce_src/bkup/CTab.h	/^   static const int DBbufsz;$/;"	m	class:CTab
DEBUG	libpdb/Makefile	/^DEBUG		= $(CXXDEBUGFLAGS)$/;"	m
DEBUG	reduce_src/Makefile	/^DEBUG           = $(CXXDEBUGFLAGS)$/;"	m
DEBUG	toolclasses/Makefile	/^DEBUG		= $(CXXDEBUGFLAGS)$/;"	m
DEG2RAD	toolclasses/Point3d.h	/^const Coord DEG2RAD=0.017453; \/\/ convert degrees to radians$/;"	v
DICT_H	toolclasses/Dict.h	28;"	d
DICT_HOME	reduce_src/Makefile	/^DICT_HOME   =\/usr\/local\/reduce_wwPDB_het_dict.txt$/;"	m
DICT_LOC	reduce_src/Makefile	/^DICT_LOC    = -DHET_DICTIONARY='"$(DICT_HOME)"'$/;"	m
DIRECTORY_SEP_CHAR	reduce_src/bkup/new_reduce.cpp	50;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/bkup/reduce.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/bkup/sym_add.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/bkup/sym_print.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/new_reduce.cpp	50;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/print_neighbors.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/reduce.cpp	70;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/sym_add.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/sym_print.cpp	81;"	d	file:
DIRECTORY_SEP_CHAR	reduce_src/test_reduce.cpp	81;"	d	file:
DISJOINTSETS_H	toolclasses/DisjointSets.h	9;"	d
DONOR_ATOM	reduce_src/ElementInfo.h	34;"	d
DONOR_ATOM	reduce_src/bkup/ElementInfo.h	34;"	d
DOTSPH_H	reduce_src/DotSph.h	22;"	d
DOTSPH_H	reduce_src/bkup/DotSph.h	22;"	d
Date	libpdb/pdb++.h	/^	typedef char	Date[10];$/;"	t	class:PDB
DblLnkLstNode	toolclasses/List.h	/^   DblLnkLstNode() : _data(), _prev(NULL), _next(NULL) {}$/;"	f	class:DblLnkLstNode
DblLnkLstNode	toolclasses/List.h	/^   DblLnkLstNode(const T& d,$/;"	f	class:DblLnkLstNode
DblLnkLstNode	toolclasses/List.h	/^class DblLnkLstNode {$/;"	c
DeepCopy	reduce_src/MoveableNode.cpp	/^void EdgeScoreMatrix::DeepCopy(const EdgeScoreMatrix& toBeCopied)$/;"	f	class:EdgeScoreMatrix
DeepCopy	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::DeepCopy(const OptimizedNodeStateMatrix& toBeCopied)$/;"	f	class:OptimizedNodeStateMatrix
DeepCopy	reduce_src/bkup/MoveableNode.cpp	/^void EdgeScoreMatrix::DeepCopy(const EdgeScoreMatrix& toBeCopied)$/;"	f	class:EdgeScoreMatrix
DeepCopy	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::DeepCopy(const OptimizedNodeStateMatrix& toBeCopied)$/;"	f	class:OptimizedNodeStateMatrix
Degree3Hyperedge	reduce_src/MoveableNode.cpp	/^Degree3Hyperedge::Degree3Hyperedge( int vert1, int vert2, int vert3 )$/;"	f	class:Degree3Hyperedge
Degree3Hyperedge	reduce_src/MoveableNode.h	/^class Degree3Hyperedge$/;"	c
Degree3Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^Degree3Hyperedge::Degree3Hyperedge( int vert1, int vert2, int vert3 )$/;"	f	class:Degree3Hyperedge
Degree3Hyperedge	reduce_src/bkup/MoveableNode.h	/^class Degree3Hyperedge$/;"	c
Degree4Hyperedge	reduce_src/MoveableNode.cpp	/^Degree4Hyperedge::Degree4Hyperedge( int vert1, int vert2, int vert3, int vert4 )$/;"	f	class:Degree4Hyperedge
Degree4Hyperedge	reduce_src/MoveableNode.h	/^class Degree4Hyperedge$/;"	c
Degree4Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^Degree4Hyperedge::Degree4Hyperedge( int vert1, int vert2, int vert3, int vert4 )$/;"	f	class:Degree4Hyperedge
Degree4Hyperedge	reduce_src/bkup/MoveableNode.h	/^class Degree4Hyperedge$/;"	c
DegreeFourEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::DegreeFourEdge_ths($/;"	f	class:DegreeFourEdge_ths
DegreeFourEdge_ths	reduce_src/GraphToHoldScores.h	/^class DegreeFourEdge_ths$/;"	c
DegreeFourEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::DegreeFourEdge_ths($/;"	f	class:DegreeFourEdge_ths
DegreeFourEdge_ths	reduce_src/bkup/GraphToHoldScores.h	/^class DegreeFourEdge_ths$/;"	c
DegreeThreeEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::DegreeThreeEdge_ths($/;"	f	class:DegreeThreeEdge_ths
DegreeThreeEdge_ths	reduce_src/GraphToHoldScores.h	/^class DegreeThreeEdge_ths$/;"	c
DegreeThreeEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::DegreeThreeEdge_ths($/;"	f	class:DegreeThreeEdge_ths
DegreeThreeEdge_ths	reduce_src/bkup/GraphToHoldScores.h	/^class DegreeThreeEdge_ths$/;"	c
DegreeTwoEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::DegreeTwoEdge_ths($/;"	f	class:DegreeTwoEdge_ths
DegreeTwoEdge_ths	reduce_src/GraphToHoldScores.h	/^class DegreeTwoEdge_ths$/;"	c
DegreeTwoEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::DegreeTwoEdge_ths($/;"	f	class:DegreeTwoEdge_ths
DegreeTwoEdge_ths	reduce_src/bkup/GraphToHoldScores.h	/^class DegreeTwoEdge_ths$/;"	c
DeleteObject	toolclasses/utility.h	/^struct DeleteObject {$/;"	s
DemandFlipAllHNQs	reduce_src/bkup/new_reduce.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/bkup/reduce.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/bkup/sym_add.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/bkup/sym_print.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/new_reduce.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/print_neighbors.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/reduce.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/sym_add.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/sym_print.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandFlipAllHNQs	reduce_src/test_reduce.cpp	/^bool DemandFlipAllHNQs        = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/bkup/new_reduce.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/bkup/reduce.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/bkup/sym_add.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/bkup/sym_print.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/new_reduce.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/print_neighbors.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/reduce.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/sym_add.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/sym_print.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotAllMethyls	reduce_src/test_reduce.cpp	/^bool DemandRotAllMethyls      = FALSE;$/;"	v
DemandRotExisting	reduce_src/bkup/new_reduce.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/bkup/reduce.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/bkup/sym_add.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/bkup/sym_print.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/new_reduce.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/print_neighbors.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/reduce.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/sym_add.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/sym_print.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotExisting	reduce_src/test_reduce.cpp	/^bool DemandRotExisting        = FALSE;$/;"	v
DemandRotNH3	reduce_src/bkup/new_reduce.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/bkup/reduce.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/bkup/sym_add.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/bkup/sym_print.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/new_reduce.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/print_neighbors.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/reduce.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/sym_add.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/sym_print.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
DemandRotNH3	reduce_src/test_reduce.cpp	/^bool DemandRotNH3             = TRUE;$/;"	v
Dict	toolclasses/Dict.cpp	/^Dict<K,T>::Dict(const unsigned long sz) {$/;"	f	class:Dict
Dict	toolclasses/Dict.h	/^template <class K, class T> class Dict {$/;"	c
DictIterator	toolclasses/Dict.h	/^   DictIterator(const Dict<K,T> &d) : _dict(d), _i(0), _p(NULL) {}$/;"	f	class:DictIterator
DictIterator	toolclasses/Dict.h	/^template <class K, class T> class DictIterator {$/;"	c
DictLink	toolclasses/Dict.h	/^   DictLink()                  : _next(NULL), _value(NULL) {}$/;"	f	class:DictLink
DictLink	toolclasses/Dict.h	/^   DictLink(const K& k, T* vp) : _next(NULL), _key(k), _value(vp) {}$/;"	f	class:DictLink
DictLink	toolclasses/Dict.h	/^   DictLink(const K& k, const T& v)$/;"	f	class:DictLink
DictLink	toolclasses/Dict.h	/^template <class K, class T> class DictLink {$/;"	c
DisjointSets	toolclasses/DisjointSets.cpp	/^DisjointSets::DisjointSets(const DisjointSets& ds) {$/;"	f	class:DisjointSets
DisjointSets	toolclasses/DisjointSets.cpp	/^DisjointSets::DisjointSets(int sz) {$/;"	f	class:DisjointSets
DisjointSets	toolclasses/DisjointSets.h	/^class DisjointSets {$/;"	c
DoOnlyAltA	reduce_src/bkup/new_reduce.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/bkup/reduce.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/bkup/sym_add.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/bkup/sym_print.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/new_reduce.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/print_neighbors.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/reduce.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/sym_add.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/sym_print.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DoOnlyAltA	reduce_src/test_reduce.cpp	/^bool DoOnlyAltA               = TRUE;$/;"	v
DotSph	reduce_src/DotSph.h	/^	DotSph() { _rep = NULL; }$/;"	f	class:DotSph
DotSph	reduce_src/DotSph.h	/^	DotSph(float rad, float dens) { build(rad, dens); }$/;"	f	class:DotSph
DotSph	reduce_src/DotSph.h	/^class DotSph {$/;"	c
DotSph	reduce_src/bkup/DotSph.h	/^	DotSph() { _rep = NULL; }$/;"	f	class:DotSph
DotSph	reduce_src/bkup/DotSph.h	/^	DotSph(float rad, float dens) { build(rad, dens); }$/;"	f	class:DotSph
DotSph	reduce_src/bkup/DotSph.h	/^class DotSph {$/;"	c
DotSphManager	reduce_src/DotSph.cpp	/^DotSphManager::DotSphManager(const DotSphManager& m):$/;"	f	class:DotSphManager
DotSphManager	reduce_src/DotSph.h	/^   DotSphManager(): _dens(16.0), _radFuzz(0.001), _densFuzz(0.1) {}$/;"	f	class:DotSphManager
DotSphManager	reduce_src/DotSph.h	/^   DotSphManager(float d): _dens(d), _radFuzz(0.001), _densFuzz(0.1) {}$/;"	f	class:DotSphManager
DotSphManager	reduce_src/DotSph.h	/^class DotSphManager {$/;"	c
DotSphManager	reduce_src/bkup/DotSph.cpp	/^DotSphManager::DotSphManager(const DotSphManager& m):$/;"	f	class:DotSphManager
DotSphManager	reduce_src/bkup/DotSph.h	/^   DotSphManager(): _dens(16.0), _radFuzz(0.001), _densFuzz(0.1) {}$/;"	f	class:DotSphManager
DotSphManager	reduce_src/bkup/DotSph.h	/^   DotSphManager(float d): _dens(d), _radFuzz(0.001), _densFuzz(0.1) {}$/;"	f	class:DotSphManager
DotSphManager	reduce_src/bkup/DotSph.h	/^class DotSphManager {$/;"	c
DotSphRep	reduce_src/DotSph.cpp	/^DotSphRep::DotSphRep(float rad, float dens): _n(0), _p(0),$/;"	f	class:DotSphRep
DotSphRep	reduce_src/DotSph.h	/^   DotSphRep(): _n(0), _p(0), _rad(0), _dens(0) {}$/;"	f	class:DotSphRep
DotSphRep	reduce_src/DotSph.h	/^class DotSphRep {$/;"	c
DotSphRep	reduce_src/bkup/DotSph.cpp	/^DotSphRep::DotSphRep(float rad, float dens): _n(0), _p(0),$/;"	f	class:DotSphRep
DotSphRep	reduce_src/bkup/DotSph.h	/^   DotSphRep(): _n(0), _p(0), _rad(0), _dens(0) {}$/;"	f	class:DotSphRep
DotSphRep	reduce_src/bkup/DotSph.h	/^class DotSphRep {$/;"	c
DotsForAtom	reduce_src/GraphToHoldScores.cpp	/^DotsForAtom::DotsForAtom( DotsForAtom const & rhs ) :$/;"	f	class:DotsForAtom
DotsForAtom	reduce_src/GraphToHoldScores.cpp	/^DotsForAtom::DotsForAtom() : $/;"	f	class:DotsForAtom
DotsForAtom	reduce_src/GraphToHoldScores.h	/^class DotsForAtom$/;"	c
DotsForAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^DotsForAtom::DotsForAtom( DotsForAtom const & rhs ) :$/;"	f	class:DotsForAtom
DotsForAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^DotsForAtom::DotsForAtom() : $/;"	f	class:DotsForAtom
DotsForAtom	reduce_src/bkup/GraphToHoldScores.h	/^class DotsForAtom$/;"	c
DummyNetworkDescriptorClass	reduce_src/MoveableNode.h	/^class DummyNetworkDescriptorClass$/;"	c
DummyNetworkDescriptorClass	reduce_src/bkup/MoveableNode.h	/^class DummyNetworkDescriptorClass$/;"	c
DumpSEGIDtoChainMap	reduce_src/PDBrec.cpp	/^void PDBrec::DumpSEGIDtoChainMap(std::ostream& s, const char *t) {$/;"	f	class:PDBrec
DumpSEGIDtoChainMap	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::DumpSEGIDtoChainMap(std::ostream& s, const char *t) {$/;"	f	class:PDBrec
DumpSEGIDtoChainMap	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::DumpSEGIDtoChainMap(std::ostream& s, const char *t) {$/;"	f	class:PDBrec
DumpSEGIDtoChainMap	reduce_src/test_PDBrec.cpp	/^void PDBrec::DumpSEGIDtoChainMap(std::ostream& s, const char *t) {$/;"	f	class:PDBrec
ELEMENTINFO_H	reduce_src/ElementInfo.h	20;"	d
ELEMENTINFO_H	reduce_src/bkup/ElementInfo.h	20;"	d
END	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
END	toolclasses/List.h	/^   enum { START = 0, END = INT_MAX };$/;"	e	enum:List::__anon6
ENDMDL	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
EXPDTA	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
EdgeBetweenMoveableNodes	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::EdgeBetweenMoveableNodes(NodeState totStatesFirstNode, NodeState totStatesSecondNode) :$/;"	f	class:EdgeBetweenMoveableNodes
EdgeBetweenMoveableNodes	reduce_src/MoveableNode.h	/^class EdgeBetweenMoveableNodes $/;"	c
EdgeBetweenMoveableNodes	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::EdgeBetweenMoveableNodes(NodeState totStatesFirstNode, NodeState totStatesSecondNode) :$/;"	f	class:EdgeBetweenMoveableNodes
EdgeBetweenMoveableNodes	reduce_src/bkup/MoveableNode.h	/^class EdgeBetweenMoveableNodes $/;"	c
EdgeScoreMatrix	reduce_src/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix() : _theEScrMatrix(NULL), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix(NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeMaxStates(firstNodeMaxStates),$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix(const EdgeScoreMatrix& rhs)$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/MoveableNode.h	/^class EdgeScoreMatrix$/;"	c
EdgeScoreMatrix	reduce_src/bkup/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix() : _theEScrMatrix(NULL), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/bkup/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix(NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeMaxStates(firstNodeMaxStates),$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/bkup/MoveableNode.cpp	/^EdgeScoreMatrix::EdgeScoreMatrix(const EdgeScoreMatrix& rhs)$/;"	f	class:EdgeScoreMatrix
EdgeScoreMatrix	reduce_src/bkup/MoveableNode.h	/^class EdgeScoreMatrix$/;"	c
ElementInfo	reduce_src/ElementInfo.h	/^   ElementInfo() {$/;"	f	class:ElementInfo
ElementInfo	reduce_src/ElementInfo.h	/^   ElementInfo(const ElementInfo& a) { _rep = a._rep; _rep->_count++; }$/;"	f	class:ElementInfo
ElementInfo	reduce_src/ElementInfo.h	/^   ElementInfo(int atno,$/;"	f	class:ElementInfo
ElementInfo	reduce_src/ElementInfo.h	/^class ElementInfo {$/;"	c
ElementInfo	reduce_src/bkup/ElementInfo.h	/^   ElementInfo() {$/;"	f	class:ElementInfo
ElementInfo	reduce_src/bkup/ElementInfo.h	/^   ElementInfo(const ElementInfo& a) { _rep = a._rep; _rep->_count++; }$/;"	f	class:ElementInfo
ElementInfo	reduce_src/bkup/ElementInfo.h	/^   ElementInfo(int atno,$/;"	f	class:ElementInfo
ElementInfo	reduce_src/bkup/ElementInfo.h	/^class ElementInfo {$/;"	c
ElementInfoRep	reduce_src/ElementInfo.cpp	/^ElementInfo::ElementInfoRep::ElementInfoRep(int atno,$/;"	f	class:ElementInfo::ElementInfoRep
ElementInfoRep	reduce_src/ElementInfo.h	/^   class ElementInfoRep {$/;"	c	class:ElementInfo
ElementInfoRep	reduce_src/bkup/ElementInfo.cpp	/^ElementInfo::ElementInfoRep::ElementInfoRep(int atno,$/;"	f	class:ElementInfo::ElementInfoRep
ElementInfoRep	reduce_src/bkup/ElementInfo.h	/^   class ElementInfoRep {$/;"	c	class:ElementInfo
ElementTable	reduce_src/ElementInfo.h	/^         ElementTable() {}$/;"	f	class:ElementTable
ElementTable	reduce_src/ElementInfo.h	/^class ElementTable {$/;"	c
ElementTable	reduce_src/bkup/ElementInfo.h	/^         ElementTable() {}$/;"	f	class:ElementTable
ElementTable	reduce_src/bkup/ElementInfo.h	/^class ElementTable {$/;"	c
End	libpdb/pdb++.h	/^	struct End {$/;"	s	class:PDB
Endmdl	libpdb/pdb++.h	/^	struct Endmdl {$/;"	s	class:PDB
ExhaustiveLimit	reduce_src/bkup/new_reduce.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/bkup/reduce.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/bkup/sym_add.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/bkup/sym_print.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/new_reduce.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/print_neighbors.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/reduce.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/sym_add.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/sym_print.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
ExhaustiveLimit	reduce_src/test_reduce.cpp	/^int ExhaustiveLimit   = 600;  \/\/time limit, in seconds, to spend in brute force enumeration for a single clique$/;"	v
Expdta	libpdb/pdb++.h	/^	typedef Author	Expdta;$/;"	t	class:PDB
FALSE	toolclasses/utility.h	/^const bool FALSE = 0;$/;"	v
FINE_STEP	reduce_src/RotDonor.cpp	37;"	d	file:
FINE_STEP	reduce_src/RotMethyl.cpp	40;"	d	file:
FINE_STEP	reduce_src/bkup/RotDonor.cpp	37;"	d	file:
FINE_STEP	reduce_src/bkup/RotMethyl.cpp	40;"	d	file:
FLIP	reduce_src/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
FLIP	reduce_src/bkup/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
FLIPMEMO_H	reduce_src/FlipMemo.h	21;"	d
FLIPMEMO_H	reduce_src/bkup/FlipMemo.h	21;"	d
FMmaxAtomSlots	reduce_src/FlipMemo.h	/^const int FMmaxAtomSlots     =20;$/;"	v
FMmaxAtomSlots	reduce_src/bkup/FlipMemo.h	/^const int FMmaxAtomSlots     =20;$/;"	v
FMmaxBondedAtoms	reduce_src/FlipMemo.h	/^const int FMmaxBondedAtoms   =16;$/;"	v
FMmaxBondedAtoms	reduce_src/bkup/FlipMemo.h	/^const int FMmaxBondedAtoms   =16;$/;"	v
FMnumFlipOrient	reduce_src/FlipMemo.h	/^const int FMnumFlipOrient    =10;$/;"	v
FMnumFlipOrient	reduce_src/bkup/FlipMemo.h	/^const int FMnumFlipOrient    =10;$/;"	v
FMnumFlipRes	reduce_src/FlipMemo.h	/^const int FMnumFlipRes       = 8;$/;"	v
FMnumFlipRes	reduce_src/bkup/FlipMemo.h	/^const int FMnumFlipRes       = 8;$/;"	v
FMnumNewLocs	reduce_src/FlipMemo.h	/^const int FMnumNewLocs       = 8;$/;"	v
FMnumNewLocs	reduce_src/bkup/FlipMemo.h	/^const int FMnumNewLocs       = 8;$/;"	v
FORMUL	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
FRAGMENT_RES	reduce_src/bkup/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/bkup/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/bkup/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/bkup/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/print_neighbors.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FRAGMENT_RES	reduce_src/test_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
FTNOTE	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
FileLoc	reduce_src/CTab.h	/^   FileLoc(FILE *stream, int xtra) : _value(xtra) {$/;"	f	class:FileLoc
FileLoc	reduce_src/CTab.h	/^class FileLoc {$/;"	c
FileLoc	reduce_src/bkup/CTab.h	/^   FileLoc(FILE *stream, int xtra) : _value(xtra) {$/;"	f	class:FileLoc
FileLoc	reduce_src/bkup/CTab.h	/^class FileLoc {$/;"	c
FlipMemo	reduce_src/FlipMemo.cpp	/^FlipMemo::FlipMemo(const char *resname, bool useXplorNames, bool useOldNames, bool bbModel) {$/;"	f	class:FlipMemo
FlipMemo	reduce_src/FlipMemo.h	/^class FlipMemo: public Mover {$/;"	c
FlipMemo	reduce_src/bkup/FlipMemo.cpp	/^FlipMemo::FlipMemo(const char *resname, bool useXplorNames, bool useOldNames, bool bbModel) {$/;"	f	class:FlipMemo
FlipMemo	reduce_src/bkup/FlipMemo.h	/^class FlipMemo: public Mover {$/;"	c
FnumScoreableAtoms	reduce_src/FlipMemo.h	/^const int FnumScoreableAtoms =19;$/;"	v
FnumScoreableAtoms	reduce_src/bkup/FlipMemo.h	/^const int FnumScoreableAtoms =19;$/;"	v
FormatSegToChainKey	reduce_src/PDBrec.cpp	/^std::string PDBrec::FormatSegToChainKey(const char *seg) {$/;"	f	class:PDBrec
FormatSegToChainKey	reduce_src/bkup/PDBrec.cpp	/^std::string PDBrec::FormatSegToChainKey(const char *seg) {$/;"	f	class:PDBrec
FormatSegToChainKey	reduce_src/bkup/test_PDBrec.cpp	/^std::string PDBrec::FormatSegToChainKey(const char *seg) {$/;"	f	class:PDBrec
FormatSegToChainKey	reduce_src/test_PDBrec.cpp	/^std::string PDBrec::FormatSegToChainKey(const char *seg) {$/;"	f	class:PDBrec
Formul	libpdb/pdb++.h	/^	struct Formul {$/;"	s	class:PDB
Ftnote	libpdb/pdb++.h	/^	typedef Agrdes	Ftnote;$/;"	t	class:PDB
GENFILES	reduce_src/Makefile	/^GENFILES    =${CRYSTAL_CODE_DIR}\/scons\/include$/;"	m
GFX_LINES	libpdb/pdb++.h	/^		GFX_UNKNOWN, GFX_POINTS, GFX_MARKERS, GFX_LINES,$/;"	e	enum:PDB::GfxType
GFX_LINE_LOOP	libpdb/pdb++.h	/^		GFX_LINE_STRIP, GFX_LINE_LOOP, GFX_TRIANGLES,$/;"	e	enum:PDB::GfxType
GFX_LINE_STRIP	libpdb/pdb++.h	/^		GFX_LINE_STRIP, GFX_LINE_LOOP, GFX_TRIANGLES,$/;"	e	enum:PDB::GfxType
GFX_MARKERS	libpdb/pdb++.h	/^		GFX_UNKNOWN, GFX_POINTS, GFX_MARKERS, GFX_LINES,$/;"	e	enum:PDB::GfxType
GFX_POINTS	libpdb/pdb++.h	/^		GFX_UNKNOWN, GFX_POINTS, GFX_MARKERS, GFX_LINES,$/;"	e	enum:PDB::GfxType
GFX_POLYGON	libpdb/pdb++.h	/^		GFX_QUAD_STRIP, GFX_POLYGON$/;"	e	enum:PDB::GfxType
GFX_QUADS	libpdb/pdb++.h	/^		GFX_TRIANGLE_STRIP, GFX_TRIANGLE_FAN, GFX_QUADS,$/;"	e	enum:PDB::GfxType
GFX_QUAD_STRIP	libpdb/pdb++.h	/^		GFX_QUAD_STRIP, GFX_POLYGON$/;"	e	enum:PDB::GfxType
GFX_TRIANGLES	libpdb/pdb++.h	/^		GFX_LINE_STRIP, GFX_LINE_LOOP, GFX_TRIANGLES,$/;"	e	enum:PDB::GfxType
GFX_TRIANGLE_FAN	libpdb/pdb++.h	/^		GFX_TRIANGLE_STRIP, GFX_TRIANGLE_FAN, GFX_QUADS,$/;"	e	enum:PDB::GfxType
GFX_TRIANGLE_STRIP	libpdb/pdb++.h	/^		GFX_TRIANGLE_STRIP, GFX_TRIANGLE_FAN, GFX_QUADS,$/;"	e	enum:PDB::GfxType
GFX_UNKNOWN	libpdb/pdb++.h	/^		GFX_UNKNOWN, GFX_POINTS, GFX_MARKERS, GFX_LINES,$/;"	e	enum:PDB::GfxType
GRAPH_TO_HOLD_SCORES_H	reduce_src/GraphToHoldScores.h	2;"	d
GRAPH_TO_HOLD_SCORES_H	reduce_src/bkup/GraphToHoldScores.h	2;"	d
GapWidth	reduce_src/bkup/new_reduce.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/bkup/reduce.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/bkup/sym_add.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/bkup/sym_print.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/new_reduce.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/print_neighbors.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/reduce.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/sym_add.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/sym_print.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GapWidth	reduce_src/test_reduce.cpp	/^float GapWidth        = 0.3; \/\/ half width for detecting chain breaks between residues $/;"	v
GfxType	libpdb/pdb++.h	/^	enum GfxType {$/;"	g	class:PDB
GraphToHoldScores	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::GraphToHoldScores( $/;"	f	class:GraphToHoldScores
GraphToHoldScores	reduce_src/GraphToHoldScores.h	/^class GraphToHoldScores$/;"	c
GraphToHoldScores	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::GraphToHoldScores( $/;"	f	class:GraphToHoldScores
GraphToHoldScores	reduce_src/bkup/GraphToHoldScores.h	/^class GraphToHoldScores$/;"	c
HASH_H	toolclasses/Hash.h	18;"	d
HBACCEPTORFLAG	reduce_src/AtomConn.h	38;"	d
HBACCEPTORFLAG	reduce_src/bkup/AtomConn.h	38;"	d
HBDONORFLAG	reduce_src/AtomConn.h	39;"	d
HBDONORFLAG	reduce_src/bkup/AtomConn.h	39;"	d
HB_ONLY_DUMMY	reduce_src/ElementInfo.h	36;"	d
HB_ONLY_DUMMY	reduce_src/bkup/ElementInfo.h	36;"	d
HDL_H	toolclasses/Hdl.h	8;"	d
HEADER	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
HELIX	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
HET	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
HETATM	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
HET_DICTIONARY	reduce_src/bkup/new_reduce.cpp	116;"	d	file:
HET_DICTIONARY	reduce_src/bkup/reduce.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/bkup/sym_add.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/bkup/sym_print.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/new_reduce.cpp	116;"	d	file:
HET_DICTIONARY	reduce_src/print_neighbors.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/reduce.cpp	126;"	d	file:
HET_DICTIONARY	reduce_src/sym_add.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/sym_print.cpp	137;"	d	file:
HET_DICTIONARY	reduce_src/test_reduce.cpp	137;"	d	file:
HET_DICTOLD	reduce_src/bkup/new_reduce.cpp	119;"	d	file:
HET_DICTOLD	reduce_src/bkup/reduce.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/bkup/sym_add.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/bkup/sym_print.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/new_reduce.cpp	119;"	d	file:
HET_DICTOLD	reduce_src/print_neighbors.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/reduce.cpp	129;"	d	file:
HET_DICTOLD	reduce_src/sym_add.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/sym_print.cpp	140;"	d	file:
HET_DICTOLD	reduce_src/test_reduce.cpp	140;"	d	file:
HE_RESNAMES	reduce_src/ElementInfo.h	39;"	d
HE_RESNAMES	reduce_src/bkup/ElementInfo.h	39;"	d
HF_RESNAMES	reduce_src/ElementInfo.h	42;"	d
HF_RESNAMES	reduce_src/bkup/ElementInfo.h	42;"	d
HG_RESNAMES	reduce_src/ElementInfo.h	45;"	d
HG_RESNAMES	reduce_src/bkup/ElementInfo.h	45;"	d
HIGH_RES	reduce_src/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	e	enum:Mover::SearchStrategy
HIGH_RES	reduce_src/bkup/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	e	enum:Mover::SearchStrategy
HO_RESNAMES	reduce_src/ElementInfo.h	48;"	d
HO_RESNAMES	reduce_src/bkup/ElementInfo.h	48;"	d
HS_RESNAMES	reduce_src/ElementInfo.h	51;"	d
HS_RESNAMES	reduce_src/bkup/ElementInfo.h	51;"	d
Hdl	toolclasses/Hdl.h	/^   Hdl(): _p(new T) { }$/;"	f	class:Hdl
Hdl	toolclasses/Hdl.h	/^   Hdl(T* t): _p(t) { }$/;"	f	class:Hdl
Hdl	toolclasses/Hdl.h	/^   Hdl(const Hdl& h): _u(h._u), _p(h._p) { }$/;"	f	class:Hdl
Hdl	toolclasses/Hdl.h	/^   Hdl(const T& t): _p(new T(t)) { }$/;"	f	class:Hdl
Hdl	toolclasses/Hdl.h	/^template <class T> class Hdl {$/;"	c
Header	libpdb/pdb++.h	/^	struct Header {$/;"	s	class:PDB
Helix	libpdb/pdb++.h	/^	struct Helix {$/;"	s	class:PDB
Het	libpdb/pdb++.h	/^	struct Het {$/;"	s	class:PDB
Hetatm	libpdb/pdb++.h	/^	typedef Atom	Hetatm;$/;"	t	class:PDB
Hy36Num	libpdb/pdb++.h	/^        typedef char    Hy36Num[6];             \/\/ hybrid 36 atom number$/;"	t	class:PDB
Hy36Num	reduce_src/PDBrec.h	/^   const char* Hy36Num()  const { return _rep->_r.atom.serialNum;          }$/;"	f	class:PDBrec
Hy36Num	reduce_src/PDBrec.h	/^   void Hy36Num(int n)         { $/;"	f	class:PDBrec
Hy36Num	reduce_src/bkup/PDBrec.h	/^   const char* Hy36Num()  const { return _rep->_r.atom.serialNum;          }$/;"	f	class:PDBrec
Hy36Num	reduce_src/bkup/PDBrec.h	/^   void Hy36Num(int n)         { $/;"	f	class:PDBrec
Hy36resno	reduce_src/PDBrec.h	/^   const char* Hy36resno()const { return _rep->_r.atom.residue.seqNum;     }$/;"	f	class:PDBrec
Hy36resno	reduce_src/bkup/PDBrec.h	/^   const char* Hy36resno()const { return _rep->_r.atom.residue.seqNum;     }$/;"	f	class:PDBrec
Hy36seqNum	libpdb/pdb++.h	/^        typedef char    Hy36seqNum[5];          \/\/ hybrid 36 residue number$/;"	t	class:PDB
HydPlanTbl	reduce_src/StdResH.cpp	/^const HydrogenPlanTable& StdResH::HydPlanTbl()  {$/;"	f	class:StdResH
HydPlanTbl	reduce_src/bkup/StdResH.cpp	/^const HydrogenPlanTable& StdResH::HydPlanTbl()  {$/;"	f	class:StdResH
HydrogenPlanTable	reduce_src/StdResH.cpp	/^HydrogenPlanTable::HydrogenPlanTable() {$/;"	f	class:HydrogenPlanTable
HydrogenPlanTable	reduce_src/StdResH.h	/^class HydrogenPlanTable {$/;"	c
HydrogenPlanTable	reduce_src/bkup/StdResH.cpp	/^HydrogenPlanTable::HydrogenPlanTable() {$/;"	f	class:HydrogenPlanTable
HydrogenPlanTable	reduce_src/bkup/StdResH.h	/^class HydrogenPlanTable {$/;"	c
IFNOPO4	reduce_src/AtomConn.h	40;"	d
IFNOPO4	reduce_src/bkup/AtomConn.h	40;"	d
IGNORE	reduce_src/ElementInfo.h	37;"	d
IGNORE	reduce_src/bkup/ElementInfo.h	37;"	d
INSTALLHOME	reduce_src/Makefile	/^INSTALLHOME =..$/;"	m
IOTBX_PDB_HYBRID_36_C_H	reduce_src/bkup/hybrid_36_c.h	6;"	d
IOTBX_PDB_HYBRID_36_C_H	reduce_src/hybrid_36_c.h	6;"	d
ISACOFLAG	reduce_src/AtomConn.h	42;"	d
ISACOFLAG	reduce_src/bkup/AtomConn.h	42;"	d
IS_A_CRYSTAL	reduce_src/bkup/new_reduce.cpp	/^bool IS_A_CRYSTAL=false; \/\/ Vishal: If true, use CCTBX$/;"	v
IS_A_CRYSTAL	reduce_src/new_reduce.cpp	/^bool IS_A_CRYSTAL=false; \/\/ Vishal: If true, use CCTBX$/;"	v
ITER_H	toolclasses/Iter.h	10;"	d
Id	libpdb/pdb++.h	/^	typedef char	Id[4];			\/\/ generic short id field$/;"	t	class:PDB
InitializeNetwork	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::InitializeNetwork(GraphToHoldScores & gths)$/;"	f	class:NodeAndEdgeManager
InitializeNetwork	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::InitializeNetwork(GraphToHoldScores & gths)$/;"	f	class:NodeAndEdgeManager
InstallMapOfSEGIDstoChains	reduce_src/PDBrec.cpp	/^int PDBrec::InstallMapOfSEGIDstoChains(const std::string map) {$/;"	f	class:PDBrec
InstallMapOfSEGIDstoChains	reduce_src/bkup/PDBrec.cpp	/^int PDBrec::InstallMapOfSEGIDstoChains(const std::string map) {$/;"	f	class:PDBrec
InstallMapOfSEGIDstoChains	reduce_src/bkup/test_PDBrec.cpp	/^int PDBrec::InstallMapOfSEGIDstoChains(const std::string map) {$/;"	f	class:PDBrec
InstallMapOfSEGIDstoChains	reduce_src/test_PDBrec.cpp	/^int PDBrec::InstallMapOfSEGIDstoChains(const std::string map) {$/;"	f	class:PDBrec
Iterator	toolclasses/Iter.h	/^class Iterator {$/;"	c
JRNL	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
Jrnl	libpdb/pdb++.h	/^	typedef Author	Jrnl;$/;"	t	class:PDB
KeepConnections	reduce_src/bkup/new_reduce.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/bkup/reduce.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/bkup/sym_add.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/bkup/sym_print.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/new_reduce.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/print_neighbors.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/reduce.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/sym_add.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/sym_print.cpp	/^bool KeepConnections          = TRUE;$/;"	v
KeepConnections	reduce_src/test_reduce.cpp	/^bool KeepConnections          = TRUE;$/;"	v
LFLAGS	reduce_src/Makefile	/^LFLAGS = -L$(PDBHOME) -lpdb++ -L$(TOOLHOME) -ltoolclasses -lm -L$(LIBCCTBX) -lcctbx -lcctbx_sgtbx_asu$/;"	m
LIBARCH	libpdb/Makefile	/^LIBARCH		= lib$(LIBRARY).a$/;"	m
LIBARCH	toolclasses/Makefile	/^LIBARCH		= lib$(LIBRARY).a$/;"	m
LIBCCTBX	reduce_src/Makefile	/^LIBCCTBX    =${CRYSTAL_CODE_DIR}\/scons\/lib $/;"	m
LIBRARY	libpdb/Makefile	/^LIBRARY		= pdb++$/;"	m
LIBRARY	toolclasses/Makefile	/^LIBRARY		= toolclasses$/;"	m
LISTITER_H	toolclasses/ListIter.h	10;"	d
LIST_H	toolclasses/List.h	10;"	d
LOCBLK_H	reduce_src/LocBlk.h	17;"	d
LOCBLK_H	reduce_src/bkup/LocBlk.h	17;"	d
LOW_RES	reduce_src/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	e	enum:Mover::SearchStrategy
LOW_RES	reduce_src/bkup/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	e	enum:Mover::SearchStrategy
LayoutTable	reduce_src/ElementInfo.cpp	/^void StandardElementTable::LayoutTable() {$/;"	f	class:StandardElementTable
LayoutTable	reduce_src/bkup/ElementInfo.cpp	/^void StandardElementTable::LayoutTable() {$/;"	f	class:StandardElementTable
List	toolclasses/List.h	/^   List() : _num_elem(0), _first(NULL), _last(NULL) {}$/;"	f	class:List
List	toolclasses/List.h	/^   List(const List& l) { dupList(l); }$/;"	f	class:List
List	toolclasses/List.h	/^class List {$/;"	c
ListIter	toolclasses/ListIter.h	/^   ListIter(const List<T>& l) : _node(l._first), _list(l) {}$/;"	f	class:ListIter
ListIter	toolclasses/ListIter.h	/^   ListIter(const ListIter<T>& li)$/;"	f	class:ListIter
ListIter	toolclasses/ListIter.h	/^class ListIter : public Iterator<T> {$/;"	c
LocBlk	reduce_src/LocBlk.h	/^   LocBlk() {}$/;"	f	class:LocBlk
LocBlk	reduce_src/LocBlk.h	/^   LocBlk(Coord x0, Coord y0, Coord z0) { chunk(_rep, Point3d(x0, y0, z0)); }$/;"	f	class:LocBlk
LocBlk	reduce_src/LocBlk.h	/^   LocBlk(const LocBlk& b): _rep(b._rep) {}$/;"	f	class:LocBlk
LocBlk	reduce_src/LocBlk.h	/^   LocBlk(const Point3d& p) { chunk(_rep, p); }$/;"	f	class:LocBlk
LocBlk	reduce_src/LocBlk.h	/^class LocBlk {$/;"	c
LocBlk	reduce_src/bkup/LocBlk.h	/^   LocBlk() {}$/;"	f	class:LocBlk
LocBlk	reduce_src/bkup/LocBlk.h	/^   LocBlk(Coord x0, Coord y0, Coord z0) { chunk(_rep, Point3d(x0, y0, z0)); }$/;"	f	class:LocBlk
LocBlk	reduce_src/bkup/LocBlk.h	/^   LocBlk(const LocBlk& b): _rep(b._rep) {}$/;"	f	class:LocBlk
LocBlk	reduce_src/bkup/LocBlk.h	/^   LocBlk(const Point3d& p) { chunk(_rep, p); }$/;"	f	class:LocBlk
LocBlk	reduce_src/bkup/LocBlk.h	/^class LocBlk {$/;"	c
LocBlkGrain	reduce_src/LocBlk.h	/^const Coord LocBlkGrain     = 0.3125;    \/\/ i.e. 3.2x3.2 Angstrom blocks$/;"	v
LocBlkGrain	reduce_src/bkup/LocBlk.h	/^const Coord LocBlkGrain     = 0.3125;    \/\/ i.e. 3.2x3.2 Angstrom blocks$/;"	v
LocBlkTolerance	reduce_src/LocBlk.h	/^const Coord LocBlkTolerance = 0.00001;$/;"	v
LocBlkTolerance	reduce_src/bkup/LocBlk.h	/^const Coord LocBlkTolerance = 0.00001;$/;"	v
LowestMoverScore	reduce_src/Mover.h	/^const double LowestMoverScore = -9.9E99;$/;"	v
LowestMoverScore	reduce_src/bkup/Mover.h	/^const double LowestMoverScore = -9.9E99;$/;"	v
MASTER	libpdb/pdb++.h	/^		END, FORMUL, FTNOTE, HEADER, HELIX, HET, HETATM, JRNL, MASTER,$/;"	e	enum:PDB::RecordType
MAXFIELDSIZE	libpdb/pdb_sscanf.cpp	55;"	d	file:
MAXFIELDSIZE	toolclasses/column_sscanf.cpp	40;"	d	file:
METALIC_ATOM	reduce_src/ElementInfo.h	33;"	d
METALIC_ATOM	reduce_src/bkup/ElementInfo.h	33;"	d
MODEL	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
MOVER_H	reduce_src/Mover.h	22;"	d
MOVER_H	reduce_src/bkup/Mover.h	22;"	d
MTRIX	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
MTXDES	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
MULTIDICT_H	toolclasses/MultiDict.h	28;"	d
MapSEGIDtoChain	reduce_src/PDBrec.cpp	/^void PDBrec::MapSEGIDtoChain() {$/;"	f	class:PDBrec
MapSEGIDtoChain	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::MapSEGIDtoChain() {$/;"	f	class:PDBrec
MapSEGIDtoChain	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::MapSEGIDtoChain() {$/;"	f	class:PDBrec
MapSEGIDtoChain	reduce_src/test_PDBrec.cpp	/^void PDBrec::MapSEGIDtoChain() {$/;"	f	class:PDBrec
MappingSEGIDtoChains	reduce_src/PDBrec.h	/^   static bool MappingSEGIDtoChains() { return _MappingSEGIDtoChains; }$/;"	f	class:PDBrec
MappingSEGIDtoChains	reduce_src/bkup/PDBrec.h	/^   static bool MappingSEGIDtoChains() { return _MappingSEGIDtoChains; }$/;"	f	class:PDBrec
Master	libpdb/pdb++.h	/^	struct Master {$/;"	s	class:PDB
Matrix4d	toolclasses/Point3d.cpp	/^Matrix4d::Matrix4d(Coord s) { \/\/ uniform scale matrix$/;"	f	class:Matrix4d
Matrix4d	toolclasses/Point3d.cpp	/^Matrix4d::Matrix4d(Coord sx, Coord sy, Coord sz) { \/\/ scale matrix$/;"	f	class:Matrix4d
Matrix4d	toolclasses/Point3d.cpp	/^Matrix4d::Matrix4d(const Point3d& p) { \/\/ translation matrix$/;"	f	class:Matrix4d
Matrix4d	toolclasses/Point3d.cpp	/^Matrix4d::Matrix4d(const Vector3d& v, double theta) {$/;"	f	class:Matrix4d
Matrix4d	toolclasses/Point3d.h	/^   Matrix4d() { makeIdentity(); }               \/\/ identity matrix$/;"	f	class:Matrix4d
Matrix4d	toolclasses/Point3d.h	/^class Matrix4d { \/\/ homogenous coordinates transformation matrix$/;"	c
MemoType	reduce_src/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	g	class:Mover
MemoType	reduce_src/bkup/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	g	class:Mover
MetalBumpBias	reduce_src/bkup/new_reduce.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/bkup/reduce.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/bkup/sym_add.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/bkup/sym_print.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/new_reduce.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/print_neighbors.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/reduce.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/sym_add.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/sym_print.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MetalBumpBias	reduce_src/test_reduce.cpp	/^float MetalBumpBias   = 0.865;\/\/ ditto, for metals$/;"	v
MinChargedHBgap	reduce_src/bkup/new_reduce.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/bkup/reduce.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/bkup/sym_add.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/bkup/sym_print.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/new_reduce.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/print_neighbors.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/reduce.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/sym_add.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/sym_print.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinChargedHBgap	reduce_src/test_reduce.cpp	/^float MinChargedHBgap = 0.8; \/\/ charged Hbonds start to bump at this point$/;"	v
MinNTermResNo	reduce_src/bkup/new_reduce.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/bkup/reduce.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/bkup/sym_add.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/bkup/sym_print.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/new_reduce.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/print_neighbors.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/reduce.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/sym_add.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/sym_print.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinNTermResNo	reduce_src/test_reduce.cpp	/^int MinNTermResNo     = 1;   \/\/ how high can a resno be for n-term?$/;"	v
MinRegHBgap	reduce_src/bkup/new_reduce.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/bkup/reduce.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/bkup/sym_add.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/bkup/sym_print.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/new_reduce.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/print_neighbors.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/reduce.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/sym_add.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/sym_print.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
MinRegHBgap	reduce_src/test_reduce.cpp	/^float MinRegHBgap     = 0.6; \/\/ Hbonds with greater gaps start to bump$/;"	v
Model	libpdb/pdb++.h	/^	struct Model {$/;"	s	class:PDB
ModelActive	reduce_src/bkup/new_reduce.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/bkup/reduce.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/bkup/sym_add.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/bkup/sym_print.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/new_reduce.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/print_neighbors.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/reduce.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/sym_add.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/sym_print.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelActive	reduce_src/test_reduce.cpp	/^int ModelActive       = 0;   \/\/ found the next model and working on it  041113$/;"	v
ModelNext	reduce_src/bkup/new_reduce.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/bkup/reduce.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/bkup/sym_add.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/bkup/sym_print.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/new_reduce.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/print_neighbors.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/reduce.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/sym_add.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/sym_print.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelNext	reduce_src/test_reduce.cpp	/^int ModelNext         = 0;   \/\/ next model to process  041113$/;"	v
ModelSpecified	reduce_src/bkup/new_reduce.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/bkup/reduce.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/bkup/sym_add.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/bkup/sym_print.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/new_reduce.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/print_neighbors.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/reduce.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/sym_add.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/sym_print.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelSpecified	reduce_src/test_reduce.cpp	/^int ModelSpecified    = 0;   \/\/ commandline model specified  041113$/;"	v
ModelToProcess	reduce_src/bkup/new_reduce.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/bkup/reduce.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/bkup/sym_add.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/bkup/sym_print.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/new_reduce.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/print_neighbors.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/reduce.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/sym_add.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/sym_print.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
ModelToProcess	reduce_src/test_reduce.cpp	/^int ModelToProcess    = 1;   \/\/ which model to work on, $/;"	v
MoveableNode	reduce_src/MoveableNode.cpp	/^MoveableNode::MoveableNode() : _index(-1), _maxNodeStates((NodeState) -1), _theNodeScoreVect(NULL),$/;"	f	class:MoveableNode
MoveableNode	reduce_src/MoveableNode.cpp	/^MoveableNode::MoveableNode(NodeState maxStates) : $/;"	f	class:MoveableNode
MoveableNode	reduce_src/MoveableNode.h	/^class MoveableNode$/;"	c
MoveableNode	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::MoveableNode() : _index(-1), _maxNodeStates((NodeState) -1), _theNodeScoreVect(NULL),$/;"	f	class:MoveableNode
MoveableNode	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::MoveableNode(NodeState maxStates) : $/;"	f	class:MoveableNode
MoveableNode	reduce_src/bkup/MoveableNode.h	/^class MoveableNode$/;"	c
MoveableNode_h	reduce_src/MoveableNode.h	18;"	d
MoveableNode_h	reduce_src/bkup/MoveableNode.h	18;"	d
Mover	reduce_src/Mover.h	/^   Mover() :  _bestScore(LowestMoverScore),$/;"	f	class:Mover
Mover	reduce_src/Mover.h	/^class Mover {$/;"	c
Mover	reduce_src/bkup/Mover.h	/^   Mover() :  _bestScore(LowestMoverScore),$/;"	f	class:Mover
Mover	reduce_src/bkup/Mover.h	/^class Mover {$/;"	c
MoverPtr	reduce_src/CliqueList.h	/^typedef Mover* MoverPtr;$/;"	t
MoverPtr	reduce_src/Mover.h	/^typedef Mover* MoverPtr;$/;"	t
MoverPtr	reduce_src/bkup/CliqueList.h	/^typedef Mover* MoverPtr;$/;"	t
MoverPtr	reduce_src/bkup/Mover.h	/^typedef Mover* MoverPtr;$/;"	t
Mtrix	libpdb/pdb++.h	/^	struct Mtrix {$/;"	s	class:PDB
Mtxdes	libpdb/pdb++.h	/^	typedef Agrdes	Mtxdes;$/;"	t	class:PDB
MultiDict	toolclasses/MultiDict.cpp	/^MultiDict<K,T>::MultiDict(const unsigned long sz) {$/;"	f	class:MultiDict
MultiDict	toolclasses/MultiDict.h	/^template <class K, class T> class MultiDict {$/;"	c
MultiDictIterator	toolclasses/MultiDict.h	/^   MultiDictIterator(const MultiDict<K,T> &d)$/;"	f	class:MultiDictIterator
MultiDictIterator	toolclasses/MultiDict.h	/^template <class K, class T> class MultiDictIterator {$/;"	c
MultiLink	toolclasses/MultiDict.h	/^   MultiLink()           : _next(NULL)          {}$/;"	f	class:MultiLink
MultiLink	toolclasses/MultiDict.h	/^   MultiLink(const K& k) : _next(NULL), _key(k) {}$/;"	f	class:MultiLink
MultiLink	toolclasses/MultiDict.h	/^template <class K, class T> class MultiLink {$/;"	c
NBondCutoff	reduce_src/bkup/new_reduce.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/bkup/reduce.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/bkup/sym_add.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/bkup/sym_print.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/new_reduce.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/print_neighbors.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/reduce.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/sym_add.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/sym_print.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NBondCutoff	reduce_src/test_reduce.cpp	/^int NBondCutoff       = 3;   \/\/ how many bonds away do we drop?$/;"	v
NEEDSTRCASECMP	libpdb/pdb_type.cpp	35;"	d	file:
NEEDSTRCASECMP	toolclasses/utility.h	88;"	d
NEGCHARGEFLAG	reduce_src/AtomConn.h	44;"	d
NEGCHARGEFLAG	reduce_src/bkup/AtomConn.h	44;"	d
NEIGHBORLIST_H	reduce_src/bkup/neighborList.h	11;"	d
NEIGHBORLIST_H	reduce_src/neighborList.h	11;"	d
NEIGHBORS_H	reduce_src/bkup/neighbors.h	17;"	d
NEIGHBORS_H	reduce_src/neighbors.h	17;"	d
NH3FLAG	reduce_src/AtomConn.h	41;"	d
NH3FLAG	reduce_src/bkup/AtomConn.h	41;"	d
NOO2PRIMEFLAG	reduce_src/AtomConn.h	32;"	d
NOO2PRIMEFLAG	reduce_src/bkup/AtomConn.h	32;"	d
NOTBBMODEL	reduce_src/AtomConn.h	59;"	d
NOTBBMODEL	reduce_src/bkup/AtomConn.h	59;"	d
NOTXPLORNAME	reduce_src/AtomConn.h	50;"	d
NOTXPLORNAME	reduce_src/bkup/AtomConn.h	50;"	d
NTERM_RES	reduce_src/bkup/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/bkup/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/bkup/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/bkup/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/new_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/print_neighbors.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/sym_add.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/sym_print.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NTERM_RES	reduce_src/test_reduce.cpp	/^enum ConnType {NTERM_RES, CONNECTED_RES, FRAGMENT_RES};$/;"	e	enum:ConnType	file:
NULL	libpdb/pdb_read.cpp	31;"	d	file:
NUM_TYPES	libpdb/pdb++.h	/^	enum { NUM_TYPES = AGGRGT + 1,$/;"	e	enum:PDB::__anon4
NUM_TYPES	libpdb/pdb++.h	/^	static const int	NUM_TYPES = AGGRGT + 1;$/;"	m	class:PDB
NUM_USER	libpdb/pdb++.h	/^		NUM_USER = USER_GFX_POINT - USER_PDBRUN + 1 };$/;"	e	enum:PDB::__anon4
NUM_USER	libpdb/pdb++.h	/^	static const int	NUM_USER = USER_GFX_POINT - USER_PDBRUN + 1;$/;"	m	class:PDB
NameModifiedFlag	reduce_src/PDBrec.h	/^const int   NameModifiedFlag = (1 << 1);$/;"	v
NameModifiedFlag	reduce_src/bkup/PDBrec.h	/^const int   NameModifiedFlag = (1 << 1);$/;"	v
NegativeChargeFlag	reduce_src/PDBrec.h	/^const int NegativeChargeFlag = (1 << 2);$/;"	v
NegativeChargeFlag	reduce_src/bkup/PDBrec.h	/^const int NegativeChargeFlag = (1 << 2);$/;"	v
NeighborList	reduce_src/bkup/neighborList.h	/^	NeighborList(){$/;"	f	class:NeighborList
NeighborList	reduce_src/bkup/neighborList.h	/^	NeighborList(Coord max_range){$/;"	f	class:NeighborList
NeighborList	reduce_src/bkup/neighborList.h	/^	NeighborList(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff){$/;"	f	class:NeighborList
NeighborList	reduce_src/bkup/neighborList.h	/^class NeighborList{$/;"	c
NeighborList	reduce_src/bkup/old_neighborList.cpp	/^NeighborList::NeighborList(){_init=false;}$/;"	f	class:NeighborList
NeighborList	reduce_src/bkup/old_neighborList.cpp	/^NeighborList::NeighborList(Coord max_range){$/;"	f	class:NeighborList
NeighborList	reduce_src/bkup/old_neighborList.h	/^class NeighborList{$/;"	c
NeighborList	reduce_src/neighborList.h	/^	NeighborList(){$/;"	f	class:NeighborList
NeighborList	reduce_src/neighborList.h	/^	NeighborList(Coord max_range){$/;"	f	class:NeighborList
NeighborList	reduce_src/neighborList.h	/^	NeighborList(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff){$/;"	f	class:NeighborList
NeighborList	reduce_src/neighborList.h	/^class NeighborList{$/;"	c
NeighborList	reduce_src/old_neighborList.cpp	/^NeighborList::NeighborList(){_init=false;}$/;"	f	class:NeighborList
NeighborList	reduce_src/old_neighborList.cpp	/^NeighborList::NeighborList(Coord max_range){$/;"	f	class:NeighborList
NeighborList	reduce_src/old_neighborList.h	/^class NeighborList{$/;"	c
NeutralTermini	reduce_src/bkup/new_reduce.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/bkup/reduce.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/bkup/sym_add.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/bkup/sym_print.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/new_reduce.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/print_neighbors.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/reduce.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/sym_add.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/sym_print.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NeutralTermini	reduce_src/test_reduce.cpp	/^bool NeutralTermini           = FALSE;$/;"	v
NodeAndEdgeManager	reduce_src/MoveableNode.cpp	/^NodeAndEdgeManager::NodeAndEdgeManager() $/;"	f	class:NodeAndEdgeManager
NodeAndEdgeManager	reduce_src/MoveableNode.h	/^class NodeAndEdgeManager$/;"	c
NodeAndEdgeManager	reduce_src/bkup/MoveableNode.cpp	/^NodeAndEdgeManager::NodeAndEdgeManager() $/;"	f	class:NodeAndEdgeManager
NodeAndEdgeManager	reduce_src/bkup/MoveableNode.h	/^class NodeAndEdgeManager$/;"	c
NodeAndStatePair	reduce_src/MoveableNode.cpp	/^NodeAndStatePair::NodeAndStatePair() : _nodeIndex(-1), _nodeState((NodeState) -1) {}$/;"	f	class:NodeAndStatePair
NodeAndStatePair	reduce_src/MoveableNode.cpp	/^NodeAndStatePair::NodeAndStatePair(int index, NodeState state) : _nodeIndex(index), _nodeState(state) {}$/;"	f	class:NodeAndStatePair
NodeAndStatePair	reduce_src/MoveableNode.h	/^class NodeAndStatePair$/;"	c
NodeAndStatePair	reduce_src/bkup/MoveableNode.cpp	/^NodeAndStatePair::NodeAndStatePair() : _nodeIndex(-1), _nodeState((NodeState) -1) {}$/;"	f	class:NodeAndStatePair
NodeAndStatePair	reduce_src/bkup/MoveableNode.cpp	/^NodeAndStatePair::NodeAndStatePair(int index, NodeState state) : _nodeIndex(index), _nodeState(state) {}$/;"	f	class:NodeAndStatePair
NodeAndStatePair	reduce_src/bkup/MoveableNode.h	/^class NodeAndStatePair$/;"	c
NodeScoreVector	reduce_src/MoveableNode.cpp	/^NodeScoreVector::NodeScoreVector() : _theNScrVect(0) {}$/;"	f	class:NodeScoreVector
NodeScoreVector	reduce_src/MoveableNode.cpp	/^NodeScoreVector::NodeScoreVector(NodeState ownerMaxStates) {_theNScrVect.assign((std::vector<double>::size_type)ownerMaxStates, 0.);}$/;"	f	class:NodeScoreVector
NodeScoreVector	reduce_src/MoveableNode.h	/^class NodeScoreVector$/;"	c
NodeScoreVector	reduce_src/bkup/MoveableNode.cpp	/^NodeScoreVector::NodeScoreVector() : _theNScrVect(0) {}$/;"	f	class:NodeScoreVector
NodeScoreVector	reduce_src/bkup/MoveableNode.cpp	/^NodeScoreVector::NodeScoreVector(NodeState ownerMaxStates) {_theNScrVect.assign((std::vector<double>::size_type)ownerMaxStates, 0.);}$/;"	f	class:NodeScoreVector
NodeScoreVector	reduce_src/bkup/MoveableNode.h	/^class NodeScoreVector$/;"	c
NodeState	reduce_src/MoveableNode.h	/^typedef int NodeState;$/;"	t
NodeState	reduce_src/bkup/MoveableNode.h	/^typedef int NodeState;$/;"	t
NonConstListIter	toolclasses/ListIter.h	/^   NonConstListIter(List<T>& l) : ListIter<T>(l), _NClist(l) {}$/;"	f	class:NonConstListIter
NonConstListIter	toolclasses/ListIter.h	/^   NonConstListIter(const NonConstListIter<T>& li)$/;"	f	class:NonConstListIter
NonConstListIter	toolclasses/ListIter.h	/^class NonConstListIter : public ListIter<T> {$/;"	c
NonConstVectIter	toolclasses/VectIter.h	/^   NonConstVectIter(Vector<T>& v) : VectIter<T>(v), _NCvec(v) {}$/;"	f	class:NonConstVectIter
NonConstVectIter	toolclasses/VectIter.h	/^   NonConstVectIter(const NonConstVectIter<T>& vi)$/;"	f	class:NonConstVectIter
NonConstVectIter	toolclasses/VectIter.h	/^class NonConstVectIter : public VectIter<T> {$/;"	c
NonMetalBumpBias	reduce_src/bkup/new_reduce.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/bkup/reduce.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/bkup/sym_add.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/bkup/sym_print.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/new_reduce.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/print_neighbors.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/reduce.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/sym_add.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/sym_print.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NonMetalBumpBias	reduce_src/test_reduce.cpp	/^float NonMetalBumpBias= 0.125;\/\/bumps if H closer than atom radius, plus this$/;"	v
NumBufMaxLen	toolclasses/Stringclass.cpp	/^const int NumBufMaxLen = 20;$/;"	v
O2PRIMEFLAG	reduce_src/AtomConn.h	31;"	d
O2PRIMEFLAG	reduce_src/bkup/AtomConn.h	31;"	d
OBJLIST	reduce_src/Makefile	/^OBJLIST = GraphToHoldScores.o CTab.o ElementInfo.o StdResH.o ResBlk.o AtomConn.o \\$/;"	m
OBJS	libpdb/Makefile	/^OBJS		= pdb_read.o pdb_sprntf.o pdb_sscanf.o pdb_chars.o \\$/;"	m
OBJS	toolclasses/Makefile	/^OBJS		= UseCount.o Point3d.o Stringclass.o Hash.o utility.o \\$/;"	m
OBSLTE	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
OFile	reduce_src/bkup/new_reduce.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/bkup/reduce.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/bkup/sym_add.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/bkup/sym_print.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/new_reduce.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/print_neighbors.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/reduce.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/sym_add.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/sym_print.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OFile	reduce_src/test_reduce.cpp	/^std::string OFile; \/\/ if file exists, given orientations forced$/;"	v
OKProcessMetMe	reduce_src/bkup/new_reduce.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/bkup/reduce.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/bkup/sym_add.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/bkup/sym_print.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/new_reduce.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/print_neighbors.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/reduce.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/sym_add.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/sym_print.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKProcessMetMe	reduce_src/test_reduce.cpp	/^bool OKProcessMetMe           = TRUE;$/;"	v
OKtoAdjust	reduce_src/bkup/new_reduce.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/bkup/reduce.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/bkup/sym_add.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/bkup/sym_print.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/new_reduce.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/print_neighbors.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/reduce.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/sym_add.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/sym_print.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OKtoAdjust	reduce_src/test_reduce.cpp	/^bool OKtoAdjust               = TRUE;$/;"	v
OPT	libpdb/Makefile	/^OPT		= -O$/;"	m
OPT	reduce_src/Makefile	/^OPT             = -O3$/;"	m
OPT	toolclasses/Makefile	/^OPT		= -O$/;"	m
ORIGX	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
OUT	adjust_het_dict.pl	/^format OUT = $/;"	f
OVERFLOW_CHAR	libpdb/pdb_sprntf.cpp	37;"	d	file:
OVERFLOW_CHAR	toolclasses/column_sprintf.cpp	26;"	d	file:
OVERLAPCUTOFF_1	reduce_src/RotDonor.cpp	39;"	d	file:
OVERLAPCUTOFF_1	reduce_src/bkup/RotDonor.cpp	39;"	d	file:
OVERLAPCUTOFF_3	reduce_src/RotDonor.cpp	40;"	d	file:
OVERLAPCUTOFF_3	reduce_src/bkup/RotDonor.cpp	40;"	d	file:
OVERLAPCUTOFF_5	reduce_src/RotDonor.cpp	41;"	d	file:
OVERLAPCUTOFF_5	reduce_src/bkup/RotDonor.cpp	41;"	d	file:
Obslte	libpdb/pdb++.h	/^	struct Obslte {$/;"	s	class:PDB
OccupancyCutoff	reduce_src/bkup/new_reduce.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/bkup/reduce.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/bkup/sym_add.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/bkup/sym_print.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/new_reduce.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/print_neighbors.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/reduce.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/sym_add.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/sym_print.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OccupancyCutoff	reduce_src/test_reduce.cpp	/^float OccupancyCutoff = 0.01;\/\/ lowest occupancy considered when determining score$/;"	v
OptimizedNodeStateMatrix	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix() : _theNSMatrix(NULL), _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates(firstNodeMaxStates), _2ndNodeMaxStates(secondNodeMaxStates)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(const OptimizedNodeStateMatrix& rhs)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(int firstNodeIndex, int secondNodeIndex, NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeIndex(firstNodeIndex), _2ndNodeIndex(secondNodeIndex), _1stNodeMaxStates(firstNodeMaxStates), _2ndNodeMaxStates(secondNodeMaxStates)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/MoveableNode.h	/^class OptimizedNodeStateMatrix$/;"	c
OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix() : _theNSMatrix(NULL), _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates(firstNodeMaxStates), _2ndNodeMaxStates(secondNodeMaxStates)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(const OptimizedNodeStateMatrix& rhs)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix::OptimizedNodeStateMatrix(int firstNodeIndex, int secondNodeIndex, NodeState firstNodeMaxStates, NodeState secondNodeMaxStates) : _1stNodeIndex(firstNodeIndex), _2ndNodeIndex(secondNodeIndex), _1stNodeMaxStates(firstNodeMaxStates), _2ndNodeMaxStates(secondNodeMaxStates)$/;"	f	class:OptimizedNodeStateMatrix
OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.h	/^class OptimizedNodeStateMatrix$/;"	c
OptimizedNodeStateMatrix3	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::OptimizedNodeStateMatrix3($/;"	f	class:OptimizedNodeStateMatrix3
OptimizedNodeStateMatrix3	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::OptimizedNodeStateMatrix3() : _theNSMatrix(NULL), _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:OptimizedNodeStateMatrix3
OptimizedNodeStateMatrix3	reduce_src/MoveableNode.h	/^class OptimizedNodeStateMatrix3$/;"	c
OptimizedNodeStateMatrix3	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::OptimizedNodeStateMatrix3($/;"	f	class:OptimizedNodeStateMatrix3
OptimizedNodeStateMatrix3	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::OptimizedNodeStateMatrix3() : _theNSMatrix(NULL), _1stNodeIndex(-1), _2ndNodeIndex(-1), _1stNodeMaxStates((NodeState) -1), _2ndNodeMaxStates((NodeState) -1) {}$/;"	f	class:OptimizedNodeStateMatrix3
OptimizedNodeStateMatrix3	reduce_src/bkup/MoveableNode.h	/^class OptimizedNodeStateMatrix3$/;"	c
OptimizedNodeStateVector	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector() { _dependentNodeIndex = -1;}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(NodeState maxNodeStates) {_dependentNodeIndex = -1; _theNSVector.assign((int) maxNodeStates, (NodeState) - 1);}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(const OptimizedNodeStateVector& rhs) {_theNSVector = rhs._theNSVector; _dependentNodeIndex = rhs._dependentNodeIndex;}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(int depNodeIndex, NodeState maxNodeStates) : _dependentNodeIndex(depNodeIndex) {_theNSVector.assign((int) maxNodeStates, (NodeState) -1);}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/MoveableNode.h	/^class OptimizedNodeStateVector$/;"	c
OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector() { _dependentNodeIndex = -1;}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(NodeState maxNodeStates) {_dependentNodeIndex = -1; _theNSVector.assign((int) maxNodeStates, (NodeState) - 1);}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(const OptimizedNodeStateVector& rhs) {_theNSVector = rhs._theNSVector; _dependentNodeIndex = rhs._dependentNodeIndex;}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateVector::OptimizedNodeStateVector(int depNodeIndex, NodeState maxNodeStates) : _dependentNodeIndex(depNodeIndex) {_theNSVector.assign((int) maxNodeStates, (NodeState) -1);}$/;"	f	class:OptimizedNodeStateVector
OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.h	/^class OptimizedNodeStateVector$/;"	c
Origx	libpdb/pdb++.h	/^	struct Origx {$/;"	s	class:PDB
PARM_TYPE_T	toolclasses/Hdl.h	15;"	d
PARM_TYPE_T	toolclasses/Hdl.h	17;"	d
PARM_TYPE_T	toolclasses/List.h	25;"	d
PARM_TYPE_T	toolclasses/List.h	27;"	d
PARM_TYPE_T	toolclasses/Seq.h	20;"	d
PARM_TYPE_T	toolclasses/Seq.h	22;"	d
PARM_TYPE_T	toolclasses/Vector.h	20;"	d
PARM_TYPE_T	toolclasses/Vector.h	22;"	d
PDB	libpdb/pdb++.cpp	/^PDB::PDB()$/;"	f	class:PDB
PDB	libpdb/pdb++.cpp	/^PDB::PDB(RecordType t)$/;"	f	class:PDB
PDB	libpdb/pdb++.h	/^class PDB {$/;"	c
PDB	libpdb/pdb_read.cpp	/^PDB::PDB(const char *buf)$/;"	f	class:PDB
PDBHOME	reduce_src/Makefile	/^PDBHOME     =..\/libpdb$/;"	m
PDBREC_H	reduce_src/PDBrec.h	23;"	d
PDBREC_H	reduce_src/bkup/PDBrec.h	23;"	d
PDBRUNVersion	libpdb/pdb++.h	/^	enum { BufLen = 101, PDBRUNVersion = 6 };$/;"	e	enum:PDB::__anon1
PDB_H	libpdb/pdb++.h	24;"	d
PDB_WORKAROUND	libpdb/pdb++.h	28;"	d
PDBrec	reduce_src/PDBrec.h	/^	PDBrec() : _rep(new PDBrecRep()), _i(new int(1)) {$/;"	f	class:PDBrec
PDBrec	reduce_src/PDBrec.h	/^   PDBrec(const PDB& r) : _rep(new PDBrecRep()), _i(new int(1)) { $/;"	f	class:PDBrec
PDBrec	reduce_src/PDBrec.h	/^   PDBrec(const PDBrec& a): _rep(a._rep), _i(a._i) {$/;"	f	class:PDBrec
PDBrec	reduce_src/PDBrec.h	/^class PDBrec {$/;"	c
PDBrec	reduce_src/bkup/PDBrec.h	/^	PDBrec() : _rep(new PDBrecRep()), _i(new int(1)) {$/;"	f	class:PDBrec
PDBrec	reduce_src/bkup/PDBrec.h	/^   PDBrec(const PDB& r) : _rep(new PDBrecRep()), _i(new int(1)) { $/;"	f	class:PDBrec
PDBrec	reduce_src/bkup/PDBrec.h	/^   PDBrec(const PDBrec& a): _rep(a._rep), _i(a._i) {$/;"	f	class:PDBrec
PDBrec	reduce_src/bkup/PDBrec.h	/^class PDBrec {$/;"	c
PDBrecRep	reduce_src/PDBrec.h	/^   struct PDBrecRep {$/;"	s	class:PDBrec
PDBrecRep	reduce_src/bkup/PDBrec.h	/^   struct PDBrecRep {$/;"	s	class:PDBrec
PI	toolclasses/utility.h	/^const double PI = 3.14159265358979323846264;$/;"	v
PName	libpdb/pdb++.h	/^	typedef char	PName[5];		\/\/ pdb name - 9lyz$/;"	t	class:PDB
POINT3D_H	toolclasses/Point3d.h	17;"	d
POSCHARGEFLAG	reduce_src/AtomConn.h	45;"	d
POSCHARGEFLAG	reduce_src/bkup/AtomConn.h	45;"	d
PROG_FLGS	reduce_src/Makefile	/^PROG_FLGS   = -DAROMATICS_ACCEPT_HBONDS \\$/;"	m
PdbrunInputVersion	libpdb/pdb++.h	/^	static int	PdbrunInputVersion() { return pdbrunInputVersion; }$/;"	f	class:PDB
PdbrunInputVersion	libpdb/pdb++.h	/^	static void	PdbrunInputVersion(int v) { pdbrunInputVersion = v; }$/;"	f	class:PDB
PdbrunOutputVersion	libpdb/pdb++.h	/^	static int	PdbrunOutputVersion() { return pdbrunOutputVersion; }$/;"	f	class:PDB
PdbrunOutputVersion	libpdb/pdb++.h	/^	static void	PdbrunOutputVersion(int v) { pdbrunOutputVersion = v; }$/;"	f	class:PDB
PenaltyMagnitude	reduce_src/bkup/new_reduce.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/bkup/reduce.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/bkup/sym_add.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/bkup/sym_print.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/new_reduce.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/print_neighbors.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/reduce.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/sym_add.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/sym_print.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
PenaltyMagnitude	reduce_src/test_reduce.cpp	/^float PenaltyMagnitude= 1.00;\/\/ score bias towards original orientation (changed from 0.0 in 2.13.0)$/;"	v
Point3d	toolclasses/Point3d.h	/^   Point3d(): _x(0.0), _y(0.0), _z(0.0) { } \/\/ constructors$/;"	f	class:Point3d
Point3d	toolclasses/Point3d.h	/^   Point3d(Coord x0, Coord y0, Coord z0): _x(x0),_y(y0),_z(z0){}$/;"	f	class:Point3d
Point3d	toolclasses/Point3d.h	/^   Point3d(const Point3d& p): _x(p._x), _y(p._y), _z(p._z) { }$/;"	f	class:Point3d
Point3d	toolclasses/Point3d.h	/^class Point3d { \/\/ point in R3$/;"	c
PositiveChargeFlag	reduce_src/PDBrec.h	/^const int PositiveChargeFlag = (1 << 3);$/;"	v
PositiveChargeFlag	reduce_src/bkup/PDBrec.h	/^const int PositiveChargeFlag = (1 << 3);$/;"	v
ProbeRadius	reduce_src/bkup/new_reduce.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/bkup/reduce.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/bkup/sym_add.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/bkup/sym_print.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/new_reduce.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/print_neighbors.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/reduce.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/sym_add.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/sym_print.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProbeRadius	reduce_src/test_reduce.cpp	/^float ProbeRadius     = 0.0; \/\/ how big is the probe in VDW calculations?$/;"	v
ProcessConnHydOnHets	reduce_src/bkup/new_reduce.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/bkup/reduce.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/bkup/sym_add.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/bkup/sym_print.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/new_reduce.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/print_neighbors.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/reduce.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/sym_add.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/sym_print.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProcessConnHydOnHets	reduce_src/test_reduce.cpp	/^bool ProcessConnHydOnHets     = TRUE;$/;"	v
ProtonLoc_t	reduce_src/FlipMemo.h	/^struct ProtonLoc_t {$/;"	s
ProtonLoc_t	reduce_src/bkup/FlipMemo.h	/^struct ProtonLoc_t {$/;"	s
QUEUE_H	toolclasses/Queue.h	10;"	d
Queue	toolclasses/Queue.h	/^   Queue() : List<T>() {}$/;"	f	class:Queue
Queue	toolclasses/Queue.h	/^   Queue(const Queue& q) : List<T>(q) {}$/;"	f	class:Queue
Queue	toolclasses/Queue.h	/^class Queue : protected List<T> {$/;"	c
QueueOfToBeEliminatedNodes	reduce_src/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes::QueueOfToBeEliminatedNodes()  {}$/;"	f	class:QueueOfToBeEliminatedNodes
QueueOfToBeEliminatedNodes	reduce_src/MoveableNode.h	/^class QueueOfToBeEliminatedNodes$/;"	c
QueueOfToBeEliminatedNodes	reduce_src/bkup/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes::QueueOfToBeEliminatedNodes()  {}$/;"	f	class:QueueOfToBeEliminatedNodes
QueueOfToBeEliminatedNodes	reduce_src/bkup/MoveableNode.h	/^class QueueOfToBeEliminatedNodes$/;"	c
RAD2DEG	toolclasses/Point3d.h	/^const Coord RAD2DEG=57.29578; \/\/ convert radians to degrees$/;"	v
RANLIB	libpdb/Makefile	/^RANLIB		= :$/;"	m
RANLIB	toolclasses/Makefile	/^RANLIB		= :$/;"	m
REMARK	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
RESBLK_H	reduce_src/ResBlk.h	17;"	d
RESBLK_H	reduce_src/bkup/ResBlk.h	17;"	d
REVDAT	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
RName	libpdb/pdb++.h	/^	typedef char	RName[5];		\/\/ residue name - ALA$/;"	t	class:PDB
ROTATEFLAG	reduce_src/AtomConn.h	35;"	d
ROTATEFLAG	reduce_src/bkup/AtomConn.h	35;"	d
ROTATEONDEMAND	reduce_src/AtomConn.h	36;"	d
ROTATEONDEMAND	reduce_src/bkup/AtomConn.h	36;"	d
ROTATE_DONOR	reduce_src/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
ROTATE_DONOR	reduce_src/bkup/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
ROTATE_METHYL	reduce_src/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
ROTATE_METHYL	reduce_src/bkup/Mover.h	/^   enum MemoType { ROTATE_METHYL, ROTATE_DONOR, FLIP };$/;"	e	enum:Mover::MemoType
ROTDONOR_H	reduce_src/RotDonor.h	17;"	d
ROTDONOR_H	reduce_src/bkup/RotDonor.h	17;"	d
ROTMETHYL_H	reduce_src/RotMethyl.h	17;"	d
ROTMETHYL_H	reduce_src/bkup/RotMethyl.h	17;"	d
ROUGH_STEP	reduce_src/RotDonor.cpp	36;"	d	file:
ROUGH_STEP	reduce_src/RotMethyl.cpp	39;"	d	file:
ROUGH_STEP	reduce_src/bkup/RotDonor.cpp	36;"	d	file:
ROUGH_STEP	reduce_src/bkup/RotMethyl.cpp	39;"	d	file:
Real	libpdb/pdb++.h	/^	typedef double	Real;			\/\/ size of floating point$/;"	t	class:PDB
RecordType	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	g	class:PDB
Remark	libpdb/pdb++.h	/^	typedef Ftnote	Remark;$/;"	t	class:PDB
RemoveHydrogens	reduce_src/bkup/new_reduce.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/bkup/reduce.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/bkup/sym_add.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/bkup/sym_print.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/new_reduce.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/print_neighbors.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/reduce.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/sym_add.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/sym_print.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
RemoveHydrogens	reduce_src/test_reduce.cpp	/^bool RemoveHydrogens          = FALSE;$/;"	v
ResBlk	reduce_src/ResBlk.cpp	/^ResBlk::ResBlk(std::list<PDBrec*>& rlst, std::list<PDBrec*>::iterator& lit) {$/;"	f	class:ResBlk
ResBlk	reduce_src/ResBlk.h	/^class ResBlk {$/;"	c
ResBlk	reduce_src/bkup/ResBlk.cpp	/^ResBlk::ResBlk(std::list<PDBrec*>& rlst, std::list<PDBrec*>::iterator& lit) {$/;"	f	class:ResBlk
ResBlk	reduce_src/bkup/ResBlk.h	/^class ResBlk {$/;"	c
ResConn	reduce_src/CTab.h	/^	ResConn(const char* resname, int sz_est) {}$/;"	f	class:ResConn
ResConn	reduce_src/CTab.h	/^class ResConn {$/;"	c
ResConn	reduce_src/bkup/CTab.h	/^	ResConn(const char* resname, int sz_est) {}$/;"	f	class:ResConn
ResConn	reduce_src/bkup/CTab.h	/^class ResConn {$/;"	c
ResFlipInfo_t	reduce_src/FlipMemo.h	/^struct ResFlipInfo_t {$/;"	s
ResFlipInfo_t	reduce_src/bkup/FlipMemo.h	/^struct ResFlipInfo_t {$/;"	s
ResXtraInfo	reduce_src/StdResH.cpp	/^const StdResXtraInfo& StdResH::ResXtraInfo() {$/;"	f	class:StdResH
ResXtraInfo	reduce_src/bkup/StdResH.cpp	/^const StdResXtraInfo& StdResH::ResXtraInfo() {$/;"	f	class:StdResH
Residue	libpdb/pdb++.h	/^	struct Residue {			\/\/ residue info$/;"	s	class:PDB
ReturnCodeGlobal	reduce_src/bkup/new_reduce.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/bkup/reduce.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/bkup/sym_add.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/bkup/sym_print.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/new_reduce.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/print_neighbors.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/reduce.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/sym_add.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/sym_print.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
ReturnCodeGlobal	reduce_src/test_reduce.cpp	/^int ReturnCodeGlobal = 0;$/;"	v
Revdat	libpdb/pdb++.h	/^	struct Revdat {$/;"	s	class:PDB
RotDonor	reduce_src/RotDonor.cpp	/^RotDonor::RotDonor(const Point3d& a, const Point3d& b,$/;"	f	class:RotDonor
RotDonor	reduce_src/RotDonor.h	/^class RotDonor: public Mover {$/;"	c
RotDonor	reduce_src/bkup/RotDonor.cpp	/^RotDonor::RotDonor(const Point3d& a, const Point3d& b,$/;"	f	class:RotDonor
RotDonor	reduce_src/bkup/RotDonor.h	/^class RotDonor: public Mover {$/;"	c
RotExistingOH	reduce_src/bkup/new_reduce.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/bkup/reduce.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/bkup/sym_add.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/bkup/sym_print.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/new_reduce.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/print_neighbors.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/reduce.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/sym_add.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/sym_print.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotExistingOH	reduce_src/test_reduce.cpp	/^bool RotExistingOH            = FALSE;$/;"	v
RotMethyl	reduce_src/RotMethyl.cpp	/^RotMethyl::RotMethyl(const Point3d& a, const Point3d& b,$/;"	f	class:RotMethyl
RotMethyl	reduce_src/RotMethyl.h	/^class RotMethyl: public Mover {$/;"	c
RotMethyl	reduce_src/bkup/RotMethyl.cpp	/^RotMethyl::RotMethyl(const Point3d& a, const Point3d& b,$/;"	f	class:RotMethyl
RotMethyl	reduce_src/bkup/RotMethyl.h	/^class RotMethyl: public Mover {$/;"	c
SCALE	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
SEGIDtoChain	reduce_src/PDBrec.cpp	/^void PDBrec::SEGIDtoChain(const char *seg, char cdefault, char* dest) {$/;"	f	class:PDBrec
SEGIDtoChain	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::SEGIDtoChain(const char *seg, char cdefault, char* dest) {$/;"	f	class:PDBrec
SEGIDtoChain	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::SEGIDtoChain(const char *seg, char cdefault, char* dest) {$/;"	f	class:PDBrec
SEGIDtoChain	reduce_src/test_PDBrec.cpp	/^void PDBrec::SEGIDtoChain(const char *seg, char cdefault, char* dest) {$/;"	f	class:PDBrec
SEGMAPBUFFSZ	reduce_src/PDBrec.cpp	226;"	d	file:
SEGMAPBUFFSZ	reduce_src/bkup/PDBrec.cpp	226;"	d	file:
SEGMAPBUFFSZ	reduce_src/bkup/test_PDBrec.cpp	226;"	d	file:
SEGMAPBUFFSZ	reduce_src/test_PDBrec.cpp	226;"	d	file:
SEQRES	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
SEQ_H	toolclasses/Seq.h	8;"	d
SHEET	libpdb/pdb++.h	/^		MTRIX, OBSLTE, ORIGX, REMARK, REVDAT, SCALE, SEQRES, SHEET,$/;"	e	enum:PDB::RecordType
SHELL	libpdb/Makefile	/^SHELL		= \/bin\/sh$/;"	m
SHELL	toolclasses/Makefile	/^SHELL		= \/bin\/sh$/;"	m
SIGATM	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
SIGUIJ	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
SITE	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
SOURCE	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
SPRSDE	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
SRCS	libpdb/Makefile	/^SRCS		= pdb_read.cpp pdb_sprntf.cppc pdb_sscanf.cpp pdb_chars.cpp \\$/;"	m
SSBOND	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
STACK_H	toolclasses/Stack.h	10;"	d
START	toolclasses/List.h	/^   enum { START = 0, END = INT_MAX };$/;"	e	enum:List::__anon6
START_ANGLE	reduce_src/RotDonor.cpp	35;"	d	file:
START_ANGLE	reduce_src/RotMethyl.cpp	38;"	d	file:
START_ANGLE	reduce_src/bkup/RotDonor.cpp	35;"	d	file:
START_ANGLE	reduce_src/bkup/RotMethyl.cpp	38;"	d	file:
STDRESH_H	reduce_src/StdResH.h	24;"	d
STDRESH_H	reduce_src/bkup/StdResH.h	24;"	d
STRICTALTFLAG	reduce_src/AtomConn.h	30;"	d
STRICTALTFLAG	reduce_src/bkup/AtomConn.h	30;"	d
SUBDIRS	Makefile	/^SUBDIRS = toolclasses libpdb reduce_src$/;"	m
SYMDES	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
SYMOP	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
SaveOHetcHydrogens	reduce_src/bkup/new_reduce.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/bkup/reduce.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/bkup/sym_add.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/bkup/sym_print.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/new_reduce.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/print_neighbors.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/reduce.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/sym_add.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/sym_print.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
SaveOHetcHydrogens	reduce_src/test_reduce.cpp	/^bool SaveOHetcHydrogens       = TRUE;$/;"	v
Scale	libpdb/pdb++.h	/^	struct Scale {$/;"	s	class:PDB
SearchClique	reduce_src/AtomPositions.cpp	/^int AtomPositions::SearchClique(std::list<MoverPtr> clique, int limit)$/;"	f	class:AtomPositions
SearchClique	reduce_src/bkup/AtomPositions.cpp	/^int AtomPositions::SearchClique(std::list<MoverPtr> clique, int limit)$/;"	f	class:AtomPositions
SearchStrategy	reduce_src/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	g	class:Mover
SearchStrategy	reduce_src/bkup/Mover.h	/^   enum SearchStrategy { LOW_RES, HIGH_RES };$/;"	g	class:Mover
Seq	toolclasses/Seq.h	/^   Seq(): _item(0), _len(0) { }$/;"	f	class:Seq
Seq	toolclasses/Seq.h	/^   Seq(Seq_item<T>* s, unsigned l): _item(s), _len(l) { if (s) s->_use++; }$/;"	f	class:Seq
Seq	toolclasses/Seq.h	/^   Seq(const Seq& s): _item(s._item), _len(s._len) { if (_item) _item->_use++; }$/;"	f	class:Seq
Seq	toolclasses/Seq.h	/^   Seq(const T& t, const Seq& x): _item(new Seq_item<T>(t, x._item)),$/;"	f	class:Seq
Seq	toolclasses/Seq.h	/^template <class T> class Seq {$/;"	c
Seq_item	toolclasses/Seq.h	/^   Seq_item(const T& t): _use(1), _data(t), _next(0) { }$/;"	f	class:Seq_item
Seq_item	toolclasses/Seq.h	/^   Seq_item(const T& t, Seq_item* s): _use(1), _data(t),$/;"	f	class:Seq_item
Seq_item	toolclasses/Seq.h	/^template <class T> class Seq_item {$/;"	c
Seqres	libpdb/pdb++.h	/^	struct Seqres {$/;"	s	class:PDB
Sheet	libpdb/pdb++.h	/^	struct Sheet {$/;"	s	class:PDB
ShowCharges	reduce_src/bkup/new_reduce.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/bkup/reduce.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/bkup/sym_add.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/bkup/sym_print.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/new_reduce.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/print_neighbors.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/reduce.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/sym_add.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/sym_print.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCharges	reduce_src/test_reduce.cpp	/^bool ShowCharges              = FALSE;$/;"	v
ShowCliqueTicks	reduce_src/bkup/new_reduce.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/bkup/reduce.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/bkup/sym_add.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/bkup/sym_print.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/new_reduce.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/print_neighbors.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/reduce.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/sym_add.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/sym_print.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowCliqueTicks	reduce_src/test_reduce.cpp	/^bool ShowCliqueTicks          = TRUE;$/;"	v
ShowOrientScore	reduce_src/bkup/new_reduce.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/bkup/reduce.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/bkup/sym_add.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/bkup/sym_print.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/new_reduce.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/print_neighbors.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/reduce.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/sym_add.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/sym_print.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
ShowOrientScore	reduce_src/test_reduce.cpp	/^bool ShowOrientScore          = FALSE;$/;"	v
Sigatm	libpdb/pdb++.h	/^	typedef Atom	Sigatm;$/;"	t	class:PDB
Siguij	libpdb/pdb++.h	/^	typedef Anisou	Siguij;$/;"	t	class:PDB
Site	libpdb/pdb++.h	/^	struct Site {$/;"	s	class:PDB
Source	libpdb/pdb++.h	/^	typedef Author	Source;$/;"	t	class:PDB
Sprsde	libpdb/pdb++.h	/^	struct Sprsde {$/;"	s	class:PDB
Ssbond	libpdb/pdb++.h	/^	struct Ssbond {$/;"	s	class:PDB
Stack	toolclasses/Stack.h	/^   Stack() : List<T>() {}$/;"	f	class:Stack
Stack	toolclasses/Stack.h	/^   Stack(const Stack& s) : List<T>(s) {}$/;"	f	class:Stack
Stack	toolclasses/Stack.h	/^class Stack : protected List<T> {$/;"	c
StandardElementTable	reduce_src/ElementInfo.h	/^         StandardElementTable() { LayoutTable(); }$/;"	f	class:StandardElementTable
StandardElementTable	reduce_src/ElementInfo.h	/^class StandardElementTable : public ElementTable {$/;"	c
StandardElementTable	reduce_src/bkup/ElementInfo.h	/^         StandardElementTable() { LayoutTable(); }$/;"	f	class:StandardElementTable
StandardElementTable	reduce_src/bkup/ElementInfo.h	/^class StandardElementTable : public ElementTable {$/;"	c
StandardizeRHBondLengths	reduce_src/bkup/new_reduce.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/bkup/reduce.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/bkup/sym_add.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/bkup/sym_print.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/new_reduce.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/print_neighbors.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/reduce.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/sym_add.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/sym_print.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StandardizeRHBondLengths	reduce_src/test_reduce.cpp	/^bool StandardizeRHBondLengths = TRUE;$/;"	v
StdElemTbl	reduce_src/ElementInfo.cpp	/^const StandardElementTable& ElementInfo::StdElemTbl() {$/;"	f	class:ElementInfo
StdElemTbl	reduce_src/bkup/ElementInfo.cpp	/^const StandardElementTable& ElementInfo::StdElemTbl() {$/;"	f	class:ElementInfo
StdResH	reduce_src/StdResH.h	/^   StdResH(const char* rn, const char* ex) : _name(rn), _exclude(ex) {}$/;"	f	class:StdResH
StdResH	reduce_src/StdResH.h	/^class StdResH {$/;"	c
StdResH	reduce_src/bkup/StdResH.h	/^   StdResH(const char* rn, const char* ex) : _name(rn), _exclude(ex) {}$/;"	f	class:StdResH
StdResH	reduce_src/bkup/StdResH.h	/^class StdResH {$/;"	c
StdResXtraInfo	reduce_src/StdResH.cpp	/^StdResXtraInfo::StdResXtraInfo() {$/;"	f	class:StdResXtraInfo
StdResXtraInfo	reduce_src/StdResH.h	/^class StdResXtraInfo {$/;"	c
StdResXtraInfo	reduce_src/bkup/StdResH.cpp	/^StdResXtraInfo::StdResXtraInfo() {$/;"	f	class:StdResXtraInfo
StdResXtraInfo	reduce_src/bkup/StdResH.h	/^class StdResXtraInfo {$/;"	c
StringInput	reduce_src/bkup/new_reduce.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/bkup/reduce.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/bkup/sym_add.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/bkup/sym_print.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/new_reduce.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/print_neighbors.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/reduce.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/sym_add.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/sym_print.cpp	/^bool StringInput              = FALSE;$/;"	v
StringInput	reduce_src/test_reduce.cpp	/^bool StringInput              = FALSE;$/;"	v
StringRep	toolclasses/Stringclass.h	/^      StringRep(char ** const r) { rep = *r; *r = 0; count = 1; }$/;"	f	class:Stringclass::StringRep
StringRep	toolclasses/Stringclass.h	/^      StringRep(const char *s) {$/;"	f	class:Stringclass::StringRep
StringRep	toolclasses/Stringclass.h	/^   class StringRep {$/;"	c	class:Stringclass
Stringclass	toolclasses/Stringclass.cpp	/^Stringclass::Stringclass(const char ch) {$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.cpp	/^Stringclass::Stringclass(const double f) {$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.cpp	/^Stringclass::Stringclass(const double f, const char *fmt) {$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.cpp	/^Stringclass::Stringclass(const int n) {$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.cpp	/^Stringclass::Stringclass(const int n, const char *fmt) {$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.h	/^   Stringclass() { rep = new StringRep(""); }$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.h	/^   Stringclass(char ** const r) { rep = new StringRep(r); }$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.h	/^   Stringclass(const Stringclass& s) { rep = s.rep; rep->count++; }$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.h	/^   Stringclass(const char *s) { rep = new StringRep(s); }$/;"	f	class:Stringclass
Stringclass	toolclasses/Stringclass.h	/^class Stringclass {$/;"	c
SummaryStats	reduce_src/bkup/new_reduce.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/bkup/new_reduce.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/bkup/reduce.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/bkup/reduce.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/bkup/sym_add.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/bkup/sym_add.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/bkup/sym_print.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/bkup/sym_print.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/new_reduce.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/new_reduce.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/print_neighbors.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/print_neighbors.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/reduce.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/reduce.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/sym_add.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/sym_add.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/sym_print.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/sym_print.cpp	/^struct SummaryStats {$/;"	s	file:
SummaryStats	reduce_src/test_reduce.cpp	/^   SummaryStats() : _H_found(0),        _H_HET_found(0),$/;"	f	struct:SummaryStats
SummaryStats	reduce_src/test_reduce.cpp	/^struct SummaryStats {$/;"	s	file:
Symdes	libpdb/pdb++.h	/^	typedef Agrdes	Symdes;$/;"	t	class:PDB
Symop	libpdb/pdb++.h	/^	struct Symop {$/;"	s	class:PDB
TER	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
TOOLHOME	reduce_src/Makefile	/^TOOLHOME    =..\/toolclasses$/;"	m
TRNSFM	libpdb/pdb++.h	/^		CMPONT, TRNSFM, AGRDES, AGGRGT,$/;"	e	enum:PDB::RecordType
TRUE	toolclasses/utility.h	/^const bool TRUE  = 1;$/;"	v
TURN	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
TVECT	libpdb/pdb++.h	/^		SIGATM, SIGUIJ, SITE, SOURCE, SPRSDE, SSBOND, TER, TURN, TVECT,$/;"	e	enum:PDB::RecordType
Tally	reduce_src/bkup/new_reduce.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/bkup/reduce.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/bkup/sym_add.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/bkup/sym_print.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/new_reduce.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/print_neighbors.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/reduce.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/sym_add.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/sym_print.cpp	/^SummaryStats Tally;$/;"	v
Tally	reduce_src/test_reduce.cpp	/^SummaryStats Tally;$/;"	v
Ter	libpdb/pdb++.h	/^	struct Ter {$/;"	s	class:PDB
TheHydPlanTbl	reduce_src/StdResH.cpp	/^const HydrogenPlanTable * StdResH::TheHydPlanTbl  = NULL;$/;"	m	class:StdResH	file:
TheHydPlanTbl	reduce_src/StdResH.h	/^   static const HydrogenPlanTable *TheHydPlanTbl;    \/\/ class shared resource$/;"	m	class:StdResH
TheHydPlanTbl	reduce_src/bkup/StdResH.cpp	/^const HydrogenPlanTable * StdResH::TheHydPlanTbl  = NULL;$/;"	m	class:StdResH	file:
TheHydPlanTbl	reduce_src/bkup/StdResH.h	/^   static const HydrogenPlanTable *TheHydPlanTbl;    \/\/ class shared resource$/;"	m	class:StdResH
TheResXtraInfo	reduce_src/StdResH.cpp	/^const StdResXtraInfo    * StdResH::TheResXtraInfo = NULL;$/;"	m	class:StdResH	file:
TheResXtraInfo	reduce_src/StdResH.h	/^   static const StdResXtraInfo    *TheResXtraInfo;   \/\/ class shared resource$/;"	m	class:StdResH
TheResXtraInfo	reduce_src/bkup/StdResH.cpp	/^const StdResXtraInfo    * StdResH::TheResXtraInfo = NULL;$/;"	m	class:StdResH	file:
TheResXtraInfo	reduce_src/bkup/StdResH.h	/^   static const StdResXtraInfo    *TheResXtraInfo;   \/\/ class shared resource$/;"	m	class:StdResH
TheStdElemTbl	reduce_src/ElementInfo.cpp	/^const StandardElementTable * ElementInfo::TheStdElemTbl = NULL;$/;"	m	class:ElementInfo	file:
TheStdElemTbl	reduce_src/ElementInfo.h	/^   static const StandardElementTable *TheStdElemTbl; \/\/ class shared resource$/;"	m	class:ElementInfo
TheStdElemTbl	reduce_src/bkup/ElementInfo.cpp	/^const StandardElementTable * ElementInfo::TheStdElemTbl = NULL;$/;"	m	class:ElementInfo	file:
TheStdElemTbl	reduce_src/bkup/ElementInfo.h	/^   static const StandardElementTable *TheStdElemTbl; \/\/ class shared resource$/;"	m	class:ElementInfo
Trnsfm	libpdb/pdb++.h	/^	struct Trnsfm {$/;"	s	class:PDB
Turn	libpdb/pdb++.h	/^	struct Turn {$/;"	s	class:PDB
Tvect	libpdb/pdb++.h	/^	struct Tvect {$/;"	s	class:PDB
UNKNOWN	libpdb/pdb++.h	/^	enum RecordType { UNKNOWN, ANISOU, ATOM, AUTHOR, COMPND, CONECT, CRYST1,$/;"	e	enum:PDB::RecordType
UNSUREDROPFLAG	reduce_src/AtomConn.h	34;"	d
UNSUREDROPFLAG	reduce_src/bkup/AtomConn.h	34;"	d
USECOUNT_H	toolclasses/UseCount.h	8;"	d
USENEWNAMES	reduce_src/AtomConn.h	55;"	d
USENEWNAMES	reduce_src/bkup/AtomConn.h	55;"	d
USEOLDNAMES	reduce_src/AtomConn.h	54;"	d
USEOLDNAMES	reduce_src/bkup/AtomConn.h	54;"	d
USER	libpdb/pdb++.h	/^		USER, MODEL, ENDMDL, EXPDTA, SYMDES, SYMOP, MTXDES, CMPDES,$/;"	e	enum:PDB::RecordType
USER_ANGLE	libpdb/pdb++.h	/^		USER_VIEWPORT, USER_BGCOLOR, USER_ANGLE, USER_DISTANCE,$/;"	e	enum:PDB::RecordType
USER_ATPOS	libpdb/pdb++.h	/^		USER_PDBRUN, USER_EYEPOS, USER_ATPOS, USER_WINDOW, USER_FOCUS,$/;"	e	enum:PDB::RecordType
USER_BGCOLOR	libpdb/pdb++.h	/^		USER_VIEWPORT, USER_BGCOLOR, USER_ANGLE, USER_DISTANCE,$/;"	e	enum:PDB::RecordType
USER_CHAIN	libpdb/pdb++.h	/^		USER_RADIUS, USER_OBJECT, USER_ENDOBJ, USER_CHAIN,$/;"	e	enum:PDB::RecordType
USER_CNAME	libpdb/pdb++.h	/^		USER_FILE, USER_MARKNAME, USER_MARK, USER_CNAME, USER_COLOR,$/;"	e	enum:PDB::RecordType
USER_COLOR	libpdb/pdb++.h	/^		USER_FILE, USER_MARKNAME, USER_MARK, USER_CNAME, USER_COLOR,$/;"	e	enum:PDB::RecordType
USER_DISTANCE	libpdb/pdb++.h	/^		USER_VIEWPORT, USER_BGCOLOR, USER_ANGLE, USER_DISTANCE,$/;"	e	enum:PDB::RecordType
USER_ENDOBJ	libpdb/pdb++.h	/^		USER_RADIUS, USER_OBJECT, USER_ENDOBJ, USER_CHAIN,$/;"	e	enum:PDB::RecordType
USER_EYEPOS	libpdb/pdb++.h	/^		USER_PDBRUN, USER_EYEPOS, USER_ATPOS, USER_WINDOW, USER_FOCUS,$/;"	e	enum:PDB::RecordType
USER_FILE	libpdb/pdb++.h	/^		USER_FILE, USER_MARKNAME, USER_MARK, USER_CNAME, USER_COLOR,$/;"	e	enum:PDB::RecordType
USER_FOCUS	libpdb/pdb++.h	/^		USER_PDBRUN, USER_EYEPOS, USER_ATPOS, USER_WINDOW, USER_FOCUS,$/;"	e	enum:PDB::RecordType
USER_GFX_BEGIN	libpdb/pdb++.h	/^		USER_GFX_BEGIN, USER_GFX_END, USER_GFX_COLOR, USER_GFX_NORMAL,$/;"	e	enum:PDB::RecordType
USER_GFX_COLOR	libpdb/pdb++.h	/^		USER_GFX_BEGIN, USER_GFX_END, USER_GFX_COLOR, USER_GFX_NORMAL,$/;"	e	enum:PDB::RecordType
USER_GFX_DRAW	libpdb/pdb++.h	/^		USER_GFX_MOVE, USER_GFX_DRAW, USER_GFX_MARKER, USER_GFX_POINT$/;"	e	enum:PDB::RecordType
USER_GFX_END	libpdb/pdb++.h	/^		USER_GFX_BEGIN, USER_GFX_END, USER_GFX_COLOR, USER_GFX_NORMAL,$/;"	e	enum:PDB::RecordType
USER_GFX_FONT	libpdb/pdb++.h	/^		USER_GFX_VERTEX, USER_GFX_FONT, USER_GFX_TEXTPOS,$/;"	e	enum:PDB::RecordType
USER_GFX_LABEL	libpdb/pdb++.h	/^		USER_GFX_LABEL,$/;"	e	enum:PDB::RecordType
USER_GFX_MARKER	libpdb/pdb++.h	/^		USER_GFX_MOVE, USER_GFX_DRAW, USER_GFX_MARKER, USER_GFX_POINT$/;"	e	enum:PDB::RecordType
USER_GFX_MOVE	libpdb/pdb++.h	/^		USER_GFX_MOVE, USER_GFX_DRAW, USER_GFX_MARKER, USER_GFX_POINT$/;"	e	enum:PDB::RecordType
USER_GFX_NORMAL	libpdb/pdb++.h	/^		USER_GFX_BEGIN, USER_GFX_END, USER_GFX_COLOR, USER_GFX_NORMAL,$/;"	e	enum:PDB::RecordType
USER_GFX_POINT	libpdb/pdb++.h	/^		USER_GFX_MOVE, USER_GFX_DRAW, USER_GFX_MARKER, USER_GFX_POINT$/;"	e	enum:PDB::RecordType
USER_GFX_TEXTPOS	libpdb/pdb++.h	/^		USER_GFX_VERTEX, USER_GFX_FONT, USER_GFX_TEXTPOS,$/;"	e	enum:PDB::RecordType
USER_GFX_VERTEX	libpdb/pdb++.h	/^		USER_GFX_VERTEX, USER_GFX_FONT, USER_GFX_TEXTPOS,$/;"	e	enum:PDB::RecordType
USER_MARK	libpdb/pdb++.h	/^		USER_FILE, USER_MARKNAME, USER_MARK, USER_CNAME, USER_COLOR,$/;"	e	enum:PDB::RecordType
USER_MARKNAME	libpdb/pdb++.h	/^		USER_FILE, USER_MARKNAME, USER_MARK, USER_CNAME, USER_COLOR,$/;"	e	enum:PDB::RecordType
USER_OBJECT	libpdb/pdb++.h	/^		USER_RADIUS, USER_OBJECT, USER_ENDOBJ, USER_CHAIN,$/;"	e	enum:PDB::RecordType
USER_PDBRUN	libpdb/pdb++.h	/^		USER_PDBRUN, USER_EYEPOS, USER_ATPOS, USER_WINDOW, USER_FOCUS,$/;"	e	enum:PDB::RecordType
USER_RADIUS	libpdb/pdb++.h	/^		USER_RADIUS, USER_OBJECT, USER_ENDOBJ, USER_CHAIN,$/;"	e	enum:PDB::RecordType
USER_VIEWPORT	libpdb/pdb++.h	/^		USER_VIEWPORT, USER_BGCOLOR, USER_ANGLE, USER_DISTANCE,$/;"	e	enum:PDB::RecordType
USER_WINDOW	libpdb/pdb++.h	/^		USER_PDBRUN, USER_EYEPOS, USER_ATPOS, USER_WINDOW, USER_FOCUS,$/;"	e	enum:PDB::RecordType
UTILITY_H	toolclasses/utility.h	17;"	d
Unknown	libpdb/pdb++.h	/^	struct Unknown {$/;"	s	class:PDB
Usage	run_tests.py	/^from libtbx.utils import Usage, file_size$/;"	i
UseCount	toolclasses/UseCount.h	/^   UseCount(): _p(new int(1)) {}$/;"	f	class:UseCount
UseCount	toolclasses/UseCount.h	/^   UseCount(const UseCount& u): _p(u._p) { ++*_p; }$/;"	f	class:UseCount
UseCount	toolclasses/UseCount.h	/^class UseCount {$/;"	c
UseOldNames	reduce_src/bkup/new_reduce.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/bkup/reduce.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/bkup/sym_add.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/bkup/sym_print.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/new_reduce.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/print_neighbors.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/reduce.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/sym_add.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/sym_print.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseOldNames	reduce_src/test_reduce.cpp	/^bool UseOldNames	      = FALSE; $/;"	v
UseSEGIDtoChainMap	reduce_src/bkup/new_reduce.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/bkup/reduce.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/bkup/sym_add.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/bkup/sym_print.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/new_reduce.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/print_neighbors.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/reduce.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/sym_add.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/sym_print.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseSEGIDtoChainMap	reduce_src/test_reduce.cpp	/^bool UseSEGIDtoChainMap = FALSE; \/\/ if true, override some chain ids$/;"	v
UseXplorNames	reduce_src/bkup/new_reduce.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/bkup/reduce.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/bkup/sym_add.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/bkup/sym_print.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/new_reduce.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/print_neighbors.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/reduce.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/sym_add.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/sym_print.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
UseXplorNames	reduce_src/test_reduce.cpp	/^bool UseXplorNames            = FALSE;$/;"	v
User	libpdb/pdb++.h	/^	struct User {$/;"	s	class:PDB
UserAngle	libpdb/pdb++.h	/^	struct UserAngle {$/;"	s	class:PDB
UserAtPos	libpdb/pdb++.h	/^	typedef UserEyePos UserAtPos;$/;"	t	class:PDB
UserBgColor	libpdb/pdb++.h	/^	struct UserBgColor {$/;"	s	class:PDB
UserCName	libpdb/pdb++.h	/^	struct UserCName {$/;"	s	class:PDB
UserChain	libpdb/pdb++.h	/^	struct UserChain {$/;"	s	class:PDB
UserColor	libpdb/pdb++.h	/^	struct UserColor {$/;"	s	class:PDB
UserDistance	libpdb/pdb++.h	/^	struct UserDistance {$/;"	s	class:PDB
UserEndObj	libpdb/pdb++.h	/^	struct UserEndObj {$/;"	s	class:PDB
UserEyePos	libpdb/pdb++.h	/^	struct UserEyePos {$/;"	s	class:PDB
UserFile	libpdb/pdb++.h	/^	struct UserFile {$/;"	s	class:PDB
UserFocus	libpdb/pdb++.h	/^	struct UserFocus {$/;"	s	class:PDB
UserGfxBegin	libpdb/pdb++.h	/^	struct UserGfxBegin {			\/\/ not in version 5$/;"	s	class:PDB
UserGfxColor	libpdb/pdb++.h	/^	typedef UserColor UserGfxColor;$/;"	t	class:PDB
UserGfxDraw	libpdb/pdb++.h	/^	typedef UserGfxMove UserGfxDraw;	\/\/ version 5 -- obsolete$/;"	t	class:PDB
UserGfxFont	libpdb/pdb++.h	/^	struct UserGfxFont {$/;"	s	class:PDB
UserGfxLabel	libpdb/pdb++.h	/^	struct UserGfxLabel {$/;"	s	class:PDB
UserGfxMarker	libpdb/pdb++.h	/^	typedef UserGfxMove UserGfxMarker;	\/\/ version 5 -- obsolete$/;"	t	class:PDB
UserGfxMove	libpdb/pdb++.h	/^	struct UserGfxMove {			\/\/ version 5 -- obsolete$/;"	s	class:PDB
UserGfxNormal	libpdb/pdb++.h	/^	struct UserGfxNormal {			\/\/ not in version 5$/;"	s	class:PDB
UserGfxPoint	libpdb/pdb++.h	/^	typedef UserGfxMove UserGfxPoint;	\/\/ version 5 -- obsolete$/;"	t	class:PDB
UserGfxTextPos	libpdb/pdb++.h	/^	struct UserGfxTextPos {			\/\/ not in version 5$/;"	s	class:PDB
UserGfxVertex	libpdb/pdb++.h	/^	typedef UserGfxNormal UserGfxVertex;$/;"	t	class:PDB
UserMark	libpdb/pdb++.h	/^	typedef UserMarkname UserMark;		\/\/ not in version 5$/;"	t	class:PDB
UserMarkname	libpdb/pdb++.h	/^	struct UserMarkname {			\/\/ not in version 5$/;"	s	class:PDB
UserObject	libpdb/pdb++.h	/^	struct UserObject {$/;"	s	class:PDB
UserPdbrun	libpdb/pdb++.h	/^	struct UserPdbrun {$/;"	s	class:PDB
UserRadius	libpdb/pdb++.h	/^	struct UserRadius {$/;"	s	class:PDB
UserViewport	libpdb/pdb++.h	/^	struct UserViewport {$/;"	s	class:PDB
UserWindow	libpdb/pdb++.h	/^	struct UserWindow {$/;"	s	class:PDB
VECTITER_H	toolclasses/VectIter.h	11;"	d
VECTOR_H	toolclasses/Vector.h	10;"	d
VdwDotDensity	reduce_src/bkup/new_reduce.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/bkup/reduce.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/bkup/sym_add.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/bkup/sym_print.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/new_reduce.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/print_neighbors.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/reduce.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/sym_add.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/sym_print.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VdwDotDensity	reduce_src/test_reduce.cpp	/^float VdwDotDensity   =16.0; \/\/ how many dots per sq Angstroms in VDW calculations?$/;"	v
VectIter	toolclasses/VectIter.h	/^   VectIter(const VectIter<T>& vi) : _elem(vi._elem), _vec(vi._vec) {}$/;"	f	class:VectIter
VectIter	toolclasses/VectIter.h	/^   VectIter(const Vector<T>& v) : _elem(0), _vec(v) {}$/;"	f	class:VectIter
VectIter	toolclasses/VectIter.h	/^class VectIter : public Iterator<T> {$/;"	c
Vector	toolclasses/Vector.cpp	/^Vector<T>::Vector(const Vector& v) {$/;"	f	class:Vector
Vector	toolclasses/Vector.cpp	/^Vector<T>::Vector(int n) {$/;"	f	class:Vector
Vector	toolclasses/Vector.cpp	/^Vector<T>::Vector(int sz, const T& defaultVal) {$/;"	f	class:Vector
Vector	toolclasses/Vector.h	/^   Vector() { buildArray(0); }  \/\/ default size is 0$/;"	f	class:Vector
Vector	toolclasses/Vector.h	/^class Vector {$/;"	c
Vector3d	toolclasses/Point3d.h	/^typedef Point3d Vector3d;$/;"	t
Verbose	reduce_src/bkup/new_reduce.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/bkup/reduce.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/bkup/sym_add.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/bkup/sym_print.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/new_reduce.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/print_neighbors.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/reduce.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/sym_add.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/sym_print.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Verbose	reduce_src/test_reduce.cpp	/^bool Verbose = TRUE;    \/\/ do we write processing notes to stdout?$/;"	v
Vertex_ths	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::Vertex_ths($/;"	f	class:Vertex_ths
Vertex_ths	reduce_src/GraphToHoldScores.h	/^class Vertex_ths$/;"	c
Vertex_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::Vertex_ths($/;"	f	class:Vertex_ths
Vertex_ths	reduce_src/bkup/GraphToHoldScores.h	/^class Vertex_ths$/;"	c
WATER_RESNAMES	reduce_src/PDBrec.h	44;"	d
WATER_RESNAMES	reduce_src/bkup/PDBrec.h	44;"	d
WaterBcutoff	reduce_src/bkup/new_reduce.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/bkup/reduce.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/bkup/sym_add.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/bkup/sym_print.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/new_reduce.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/print_neighbors.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/reduce.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/sym_add.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/sym_print.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterBcutoff	reduce_src/test_reduce.cpp	/^float WaterBcutoff    =40.0; \/\/ limit for water B values$/;"	v
WaterOCCcutoff	reduce_src/bkup/new_reduce.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/bkup/reduce.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/bkup/sym_add.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/bkup/sym_print.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/new_reduce.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/print_neighbors.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/reduce.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/sym_add.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/sym_print.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
WaterOCCcutoff	reduce_src/test_reduce.cpp	/^float WaterOCCcutoff  = 0.66;\/\/ limit for water occupancy$/;"	v
XPLORNAME	reduce_src/AtomConn.h	51;"	d
XPLORNAME	reduce_src/bkup/AtomConn.h	51;"	d
XTRAFLAG	reduce_src/AtomConn.h	33;"	d
XTRAFLAG	reduce_src/bkup/AtomConn.h	33;"	d
_1stNodeIndex	reduce_src/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:EdgeScoreMatrix
_1stNodeIndex	reduce_src/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix
_1stNodeIndex	reduce_src/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_1stNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:EdgeScoreMatrix
_1stNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix
_1stNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_1stNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_1stNodeMaxStates	reduce_src/MoveableNode.h	/^	NodeState			_1stNodeMaxStates;$/;"	m	class:EdgeScoreMatrix
_1stNodeMaxStates	reduce_src/MoveableNode.h	/^	int					_1stNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix
_1stNodeMaxStates	reduce_src/MoveableNode.h	/^	int					_1stNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_1stNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	NodeState			_1stNodeMaxStates;$/;"	m	class:EdgeScoreMatrix
_1stNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	int					_1stNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix
_1stNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	int					_1stNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_2ndNodeIndex	reduce_src/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:EdgeScoreMatrix
_2ndNodeIndex	reduce_src/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix
_2ndNodeIndex	reduce_src/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_2ndNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:EdgeScoreMatrix
_2ndNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix
_2ndNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_2ndNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_2ndNodeMaxStates	reduce_src/MoveableNode.h	/^	NodeState			_2ndNodeMaxStates;$/;"	m	class:EdgeScoreMatrix
_2ndNodeMaxStates	reduce_src/MoveableNode.h	/^	int					_2ndNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix
_2ndNodeMaxStates	reduce_src/MoveableNode.h	/^	int					_2ndNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_2ndNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	NodeState			_2ndNodeMaxStates;$/;"	m	class:EdgeScoreMatrix
_2ndNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	int					_2ndNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix
_2ndNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	int					_2ndNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_3rdNodeIndex	reduce_src/MoveableNode.h	/^	int					_3rdNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_3rdNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_3rdNodeIndex;$/;"	m	class:OptimizedNodeStateMatrix3
_3rdNodeMaxStates	reduce_src/MoveableNode.h	/^	int					_3rdNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_3rdNodeMaxStates	reduce_src/bkup/MoveableNode.h	/^	int					_3rdNodeMaxStates;$/;"	m	class:OptimizedNodeStateMatrix3
_HACK_SORT_CLASS_FOR_PDBRECS_H_	reduce_src/AtomDescr.h	3;"	d
_HACK_SORT_CLASS_FOR_PDBRECS_H_	reduce_src/bkup/AtomDescr.h	3;"	d
_H_HET_added	reduce_src/bkup/new_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/bkup/reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/bkup/sym_add.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/bkup/sym_print.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/new_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/print_neighbors.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/sym_add.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/sym_print.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_added	reduce_src/test_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/bkup/new_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/bkup/reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/bkup/sym_add.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/bkup/sym_print.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/new_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/print_neighbors.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/sym_add.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/sym_print.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_found	reduce_src/test_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/bkup/new_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/bkup/reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/bkup/sym_add.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/bkup/sym_print.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/new_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/print_neighbors.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/sym_add.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/sym_print.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_removed	reduce_src/test_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/bkup/new_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/bkup/reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/bkup/sym_add.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/bkup/sym_print.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/new_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/print_neighbors.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/sym_add.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/sym_print.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_HET_standardized	reduce_src/test_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/bkup/new_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/bkup/reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/bkup/sym_add.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/bkup/sym_print.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/new_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/print_neighbors.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/sym_add.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/sym_print.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_added	reduce_src/test_reduce.cpp	/^   int _H_added,        _H_HET_added;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/bkup/new_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/bkup/reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/bkup/sym_add.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/bkup/sym_print.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/new_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/print_neighbors.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/sym_add.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/sym_print.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_found	reduce_src/test_reduce.cpp	/^   int _H_found,        _H_HET_found;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/bkup/new_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/bkup/reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/bkup/sym_add.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/bkup/sym_print.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/new_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/print_neighbors.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/sym_add.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/sym_print.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_removed	reduce_src/test_reduce.cpp	/^   int _H_removed,      _H_HET_removed;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/bkup/new_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/bkup/reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/bkup/sym_add.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/bkup/sym_print.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/new_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/print_neighbors.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/sym_add.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/sym_print.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_H_standardized	reduce_src/test_reduce.cpp	/^   int _H_standardized, _H_HET_standardized;$/;"	m	struct:SummaryStats	file:
_Heads	toolclasses/Dict.h	/^   DictLink<K,T> ** _Heads; \/\/ array of entry pointers$/;"	m	class:Dict
_Heads	toolclasses/MultiDict.h	/^   MultiLink<K,T> ** _Heads; \/\/ array of entry pointers$/;"	m	class:MultiDict
_M	toolclasses/Dict.h	/^   unsigned long _M;       \/\/ table size (a prime number)$/;"	m	class:Dict
_M	toolclasses/MultiDict.h	/^   unsigned long _M;       \/\/ table size (a prime number)$/;"	m	class:MultiDict
_MappingSEGIDtoChains	reduce_src/PDBrec.h	/^   static bool _MappingSEGIDtoChains;$/;"	m	class:PDBrec
_MappingSEGIDtoChains	reduce_src/bkup/PDBrec.h	/^   static bool _MappingSEGIDtoChains;$/;"	m	class:PDBrec
_NClist	toolclasses/ListIter.h	/^   List<T>& _NClist;  \/\/ con-constant reference to the list$/;"	m	class:NonConstListIter
_NCvec	toolclasses/VectIter.h	/^   Vector<T>& _NCvec;  \/\/ non-const reference to the Vector$/;"	m	class:NonConstVectIter
_PartialOrderStateDeterminationStack	reduce_src/MoveableNode.h	/^	std::list<int> _PartialOrderStateDeterminationStack; \/\/Evaluate Final Network configuration in reverse order of addition$/;"	m	class:NodeAndEdgeManager
_PartialOrderStateDeterminationStack	reduce_src/bkup/MoveableNode.h	/^	std::list<int> _PartialOrderStateDeterminationStack; \/\/Evaluate Final Network configuration in reverse order of addition$/;"	m	class:NodeAndEdgeManager
_QForCycleRed	reduce_src/MoveableNode.h	/^	std::list<int>						_QForCycleRed;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForCycleRed	reduce_src/bkup/MoveableNode.h	/^	std::list<int>						_QForCycleRed;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForSafeS3Red	reduce_src/MoveableNode.h	/^	std::list<int>						_QForSafeS3Red;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForSafeS3Red	reduce_src/bkup/MoveableNode.h	/^	std::list<int>						_QForSafeS3Red;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForTreeRed	reduce_src/MoveableNode.h	/^	std::list<int>						_QForTreeRed;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForTreeRed	reduce_src/bkup/MoveableNode.h	/^	std::list<int>						_QForTreeRed;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForUnsafeS3Red	reduce_src/MoveableNode.h	/^	std::list<int>						_QForUnsafeS3Red;$/;"	m	class:QueueOfToBeEliminatedNodes
_QForUnsafeS3Red	reduce_src/bkup/MoveableNode.h	/^	std::list<int>						_QForUnsafeS3Red;$/;"	m	class:QueueOfToBeEliminatedNodes
_SEGtoChainMap	reduce_src/PDBrec.cpp	/^std::map<std::string, char> PDBrec::_SEGtoChainMap;$/;"	m	class:PDBrec	file:
_SEGtoChainMap	reduce_src/PDBrec.h	/^   static std::map<std::string, char> _SEGtoChainMap;$/;"	m	class:PDBrec
_SEGtoChainMap	reduce_src/bkup/PDBrec.cpp	/^std::map<std::string, char> PDBrec::_SEGtoChainMap;$/;"	m	class:PDBrec	file:
_SEGtoChainMap	reduce_src/bkup/PDBrec.h	/^   static std::map<std::string, char> _SEGtoChainMap;$/;"	m	class:PDBrec
_SEGtoChainMap	reduce_src/bkup/test_PDBrec.cpp	/^std::map<std::string, char> PDBrec::_SEGtoChainMap;$/;"	m	class:PDBrec	file:
_SEGtoChainMap	reduce_src/test_PDBrec.cpp	/^std::map<std::string, char> PDBrec::_SEGtoChainMap;$/;"	m	class:PDBrec	file:
__CLASS_STRINGCLASS_H__	toolclasses/Stringclass.h	17;"	d
_adj	reduce_src/Mover.h	/^   bool        _adj;        \/\/ is the memo adjustable?$/;"	m	class:Mover
_adj	reduce_src/bkup/Mover.h	/^   bool        _adj;        \/\/ is the memo adjustable?$/;"	m	class:Mover
_allAtomsOnMover	reduce_src/MoveableNode.h	/^	std::vector< std::vector< std::list< AtomDescr > > > _allAtomsOnMover;$/;"	m	class:DummyNetworkDescriptorClass
_allAtomsOnMover	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< std::list< AtomDescr > > > _allAtomsOnMover;$/;"	m	class:DummyNetworkDescriptorClass
_alreadyFinalizedD3HEs	reduce_src/MoveableNode.h	/^	bool _alreadyFinalizedD3HEs;$/;"	m	class:DummyNetworkDescriptorClass
_alreadyFinalizedD3HEs	reduce_src/bkup/MoveableNode.h	/^	bool _alreadyFinalizedD3HEs;$/;"	m	class:DummyNetworkDescriptorClass
_ang1	reduce_src/AtomConn.h	/^   float       _ang1;  \/\/ angle one$/;"	m	class:atomPlacementPlan
_ang1	reduce_src/bkup/AtomConn.h	/^   float       _ang1;  \/\/ angle one$/;"	m	class:atomPlacementPlan
_ang2	reduce_src/AtomConn.h	/^   float       _ang2;  \/\/ angle two$/;"	m	class:atomPlacementPlan
_ang2	reduce_src/bkup/AtomConn.h	/^   float       _ang2;  \/\/ angle two$/;"	m	class:atomPlacementPlan
_angle	reduce_src/RotDonor.h	/^   double      _angle;     \/\/ current angle$/;"	m	class:RotDonor
_angle	reduce_src/RotMethyl.h	/^   double      _angle;$/;"	m	class:RotMethyl
_angle	reduce_src/bkup/RotDonor.h	/^   double      _angle;     \/\/ current angle$/;"	m	class:RotDonor
_angle	reduce_src/bkup/RotMethyl.h	/^   double      _angle;$/;"	m	class:RotMethyl
_anum	reduce_src/BumperPoint.h	/^      int     _anum;$/;"	m	struct:BumperPoint::BumperPointRep
_anum	reduce_src/bkup/BumperPoint.h	/^      int     _anum;$/;"	m	struct:BumperPoint::BumperPointRep
_anyStatesDisabled	reduce_src/MoveableNode.h	/^	bool _anyStatesDisabled;$/;"	m	class:DummyNetworkDescriptorClass
_anyStatesDisabled	reduce_src/bkup/MoveableNode.h	/^	bool _anyStatesDisabled;$/;"	m	class:DummyNetworkDescriptorClass
_array	toolclasses/DisjointSets.h	/^   int *_array;$/;"	m	class:DisjointSets
_array	toolclasses/Vector.h	/^   T*  _array;$/;"	m	class:Vector
_array_len	toolclasses/Vector.h	/^   int _array_len; \/\/ actual number of elements the array can hold $/;"	m	class:Vector
_atRadius	reduce_src/AtomDescr.h	/^	float   _atRadius;$/;"	m	class:AtomDescr
_atRadius	reduce_src/bkup/AtomDescr.h	/^	float   _atRadius;$/;"	m	class:AtomDescr
_atRadiusSqr	reduce_src/AtomDescr.h	/^	float _atRadiusSqr;$/;"	m	class:AtomDescr
_atRadiusSqr	reduce_src/bkup/AtomDescr.h	/^	float _atRadiusSqr;$/;"	m	class:AtomDescr
_atno	reduce_src/ElementInfo.h	/^      int    _atno;  \/\/ atomic number$/;"	m	class:ElementInfo::ElementInfoRep
_atno	reduce_src/bkup/ElementInfo.h	/^      int    _atno;  \/\/ atomic number$/;"	m	class:ElementInfo::ElementInfoRep
_atomAttributes	reduce_src/StdResH.h	/^   std::map<std::string, int> _atomAttributes;$/;"	m	class:StdResXtraInfo
_atomAttributes	reduce_src/bkup/StdResH.h	/^   std::map<std::string, int> _atomAttributes;$/;"	m	class:StdResXtraInfo
_atomConn	reduce_src/CTab.h	/^   std::map<std::string, AtomConn*> _atomConn;$/;"	m	class:ResConn
_atomConn	reduce_src/bkup/CTab.h	/^   std::map<std::string, AtomConn*> _atomConn;$/;"	m	class:ResConn
_atomDAflags	reduce_src/FlipMemo.cpp	/^const int FlipMemo::_atomDAflags[FMnumFlipOrient]$/;"	m	class:FlipMemo	file:
_atomDAflags	reduce_src/FlipMemo.h	/^   static const int           _atomDAflags[FMnumFlipOrient][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_atomDAflags	reduce_src/bkup/FlipMemo.cpp	/^const int FlipMemo::_atomDAflags[FMnumFlipOrient]$/;"	m	class:FlipMemo	file:
_atomDAflags	reduce_src/bkup/FlipMemo.h	/^   static const int           _atomDAflags[FMnumFlipOrient][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_atomOrient	reduce_src/FlipMemo.cpp	/^const int FlipMemo::_atomOrient[FMnumFlipOrient]$/;"	m	class:FlipMemo	file:
_atomOrient	reduce_src/FlipMemo.h	/^   static const int           _atomOrient[FMnumFlipOrient][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_atomOrient	reduce_src/bkup/FlipMemo.cpp	/^const int FlipMemo::_atomOrient[FMnumFlipOrient]$/;"	m	class:FlipMemo	file:
_atomOrient	reduce_src/bkup/FlipMemo.h	/^   static const int           _atomOrient[FMnumFlipOrient][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_atomPos	reduce_src/AtomDescr.h	/^	Point3d  _atomPos;$/;"	m	class:AtomDescr
_atomPos	reduce_src/bkup/AtomDescr.h	/^	Point3d  _atomPos;$/;"	m	class:AtomDescr
_atomResNo	reduce_src/AtomDescr.h	/^	int  		_atomResNo;$/;"	m	class:AtomDescr
_atomResNo	reduce_src/bkup/AtomDescr.h	/^	int  		_atomResNo;$/;"	m	class:AtomDescr
_atom_list	reduce_src/bkup/neighborList.h	/^	std::vector<L> _atom_list;$/;"	m	class:NeighborList
_atom_list	reduce_src/neighborList.h	/^	std::vector<L> _atom_list;$/;"	m	class:NeighborList
_atomsInHighOrderOverlap	reduce_src/MoveableNode.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > _atomsInHighOrderOverlap;$/;"	m	class:MoveableNode
_atomsInHighOrderOverlap	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > _atomsInHighOrderOverlap;$/;"	m	class:MoveableNode
_atomsInThreeWayOverlap	reduce_src/MoveableNode.h	/^	std::vector< std::vector< std::list< AtomDescr > > > _atomsInThreeWayOverlap;$/;"	m	class:DummyNetworkDescriptorClass
_atomsInThreeWayOverlap	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< std::list< AtomDescr > > > _atomsInThreeWayOverlap;$/;"	m	class:DummyNetworkDescriptorClass
_bad_bump_gap_cutoff	reduce_src/AtomPositions.h	/^   const float               _bad_bump_gap_cutoff;$/;"	m	class:AtomPositions
_bad_bump_gap_cutoff	reduce_src/bkup/AtomPositions.h	/^   const float               _bad_bump_gap_cutoff;$/;"	m	class:AtomPositions
_bbModel	reduce_src/AtomPositions.h	/^   const bool		     _bbModel; $/;"	m	class:AtomPositions
_bbModel	reduce_src/bkup/AtomPositions.h	/^   const bool		     _bbModel; $/;"	m	class:AtomPositions
_bestHasBadBump	reduce_src/Mover.h	/^   bool        _bestHasBadBump; \/\/ does best orientation have a bad bump?$/;"	m	class:Mover
_bestHasBadBump	reduce_src/bkup/Mover.h	/^   bool        _bestHasBadBump; \/\/ does best orientation have a bad bump?$/;"	m	class:Mover
_bestOrientation	reduce_src/Mover.h	/^   int         _bestOrientation[2];$/;"	m	class:Mover
_bestOrientation	reduce_src/bkup/Mover.h	/^   int         _bestOrientation[2];$/;"	m	class:Mover
_bestScore	reduce_src/Mover.h	/^   double      _bestScore;$/;"	m	class:Mover
_bestScore	reduce_src/bkup/Mover.h	/^   double      _bestScore;$/;"	m	class:Mover
_bgDots	reduce_src/AtomPositions.h	/^	int  _bgDots;				\/\/ANDREW: used only when the flag DEBUGDOTCOUNTS is set.$/;"	m	class:AtomPositions
_bgDots	reduce_src/bkup/AtomPositions.h	/^	int  _bgDots;				\/\/ANDREW: used only when the flag DEBUGDOTCOUNTS is set.$/;"	m	class:AtomPositions
_bnded	reduce_src/RotDonor.h	/^   std::vector< std::list<PDBrec*>* > _bnded; \/\/ pre-calculated bonding list$/;"	m	class:RotDonor
_bnded	reduce_src/RotMethyl.h	/^   std::vector< std::list<PDBrec*>* > _bnded; \/\/ pre-calculated bonding list$/;"	m	class:RotMethyl
_bnded	reduce_src/bkup/RotDonor.h	/^   std::vector< std::list<PDBrec*>* > _bnded; \/\/ pre-calculated bonding list$/;"	m	class:RotDonor
_bnded	reduce_src/bkup/RotMethyl.h	/^   std::vector< std::list<PDBrec*>* > _bnded; \/\/ pre-calculated bonding list$/;"	m	class:RotMethyl
_bondedLimits	reduce_src/FlipMemo.cpp	/^const BondLimits_t FlipMemo::_bondedLimits[FnumScoreableAtoms] = {$/;"	m	class:FlipMemo	file:
_bondedLimits	reduce_src/FlipMemo.h	/^   static const BondLimits_t  _bondedLimits[FnumScoreableAtoms];$/;"	m	class:FlipMemo
_bondedLimits	reduce_src/bkup/FlipMemo.cpp	/^const BondLimits_t FlipMemo::_bondedLimits[FnumScoreableAtoms] = {$/;"	m	class:FlipMemo	file:
_bondedLimits	reduce_src/bkup/FlipMemo.h	/^   static const BondLimits_t  _bondedLimits[FnumScoreableAtoms];$/;"	m	class:FlipMemo
_bondedSet	reduce_src/FlipMemo.cpp	/^const int FlipMemo::_bondedSet[FnumScoreableAtoms]$/;"	m	class:FlipMemo	file:
_bondedSet	reduce_src/FlipMemo.h	/^   static const int           _bondedSet[FnumScoreableAtoms][FMmaxBondedAtoms];$/;"	m	class:FlipMemo
_bondedSet	reduce_src/bkup/FlipMemo.cpp	/^const int FlipMemo::_bondedSet[FnumScoreableAtoms]$/;"	m	class:FlipMemo	file:
_bondedSet	reduce_src/bkup/FlipMemo.h	/^   static const int           _bondedSet[FnumScoreableAtoms][FMmaxBondedAtoms];$/;"	m	class:FlipMemo
_cliqueTicks	reduce_src/AtomPositions.h	/^   const bool                _cliqueTicks;$/;"	m	class:AtomPositions
_cliqueTicks	reduce_src/bkup/AtomPositions.h	/^   const bool                _cliqueTicks;$/;"	m	class:AtomPositions
_cliques	reduce_src/CliqueList.h	/^	std::list< std::list<MoverPtr> > _cliques;$/;"	m	class:CliqueList
_cliques	reduce_src/bkup/CliqueList.h	/^	std::list< std::list<MoverPtr> > _cliques;$/;"	m	class:CliqueList
_clqDots	reduce_src/AtomPositions.h	/^	int  _clqDots;				\/\/ANDREW: for keeping track of how many dots go into the score for a network$/;"	m	class:AtomPositions
_clqDots	reduce_src/bkup/AtomPositions.h	/^	int  _clqDots;				\/\/ANDREW: for keeping track of how many dots go into the score for a network$/;"	m	class:AtomPositions
_clqOfInt	reduce_src/AtomPositions.h	/^	bool _clqOfInt;			\/\/ANDREW: this will let me detect once whether the clique I'm examining is the one I'm interested in$/;"	m	class:AtomPositions
_clqOfInt	reduce_src/bkup/AtomPositions.h	/^	bool _clqOfInt;			\/\/ANDREW: this will let me detect once whether the clique I'm examining is the one I'm interested in$/;"	m	class:AtomPositions
_color	reduce_src/ElementInfo.h	/^      char*  _color; \/\/ dot color$/;"	m	class:ElementInfo::ElementInfoRep
_color	reduce_src/bkup/ElementInfo.h	/^      char*  _color; \/\/ dot color$/;"	m	class:ElementInfo::ElementInfoRep
_conect	reduce_src/bkup/new_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/bkup/reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/bkup/sym_add.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/bkup/sym_print.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/new_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/print_neighbors.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/sym_add.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/sym_print.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_conect	reduce_src/test_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_connectivity	reduce_src/MoveableNode.h	/^	bool** _connectivity;$/;"	m	class:NodeAndEdgeManager
_connectivity	reduce_src/bkup/MoveableNode.h	/^	bool** _connectivity;$/;"	m	class:NodeAndEdgeManager
_count	reduce_src/ElementInfo.h	/^      int _count; \/\/ reference count$/;"	m	class:ElementInfo::ElementInfoRep
_count	reduce_src/bkup/ElementInfo.h	/^      int _count; \/\/ reference count$/;"	m	class:ElementInfo::ElementInfoRep
_covMaxRad	reduce_src/ElementInfo.h	/^   float  _covMaxRad;$/;"	m	class:ElementTable
_covMaxRad	reduce_src/bkup/ElementInfo.h	/^   float  _covMaxRad;$/;"	m	class:ElementTable
_covRad	reduce_src/ElementInfo.h	/^      float  _covRad;\/\/ covalent radius$/;"	m	class:ElementInfo::ElementInfoRep
_covRad	reduce_src/bkup/ElementInfo.h	/^      float  _covRad;\/\/ covalent radius$/;"	m	class:ElementInfo::ElementInfoRep
_cubiclized	reduce_src/bkup/neighborList.h	/^	bool _cubiclized;$/;"	m	class:NeighborList
_cubiclized	reduce_src/neighborList.h	/^	bool _cubiclized;$/;"	m	class:NeighborList
_cycleReductionBegun	reduce_src/MoveableNode.h	/^	bool _cycleReductionBegun;	\/\/Don't add nodes to the cycleReduction queue until all initial tree reduction has been done - not because this is necessary, but because it is expedient$/;"	m	class:NodeAndEdgeManager
_cycleReductionBegun	reduce_src/bkup/MoveableNode.h	/^	bool _cycleReductionBegun;	\/\/Don't add nodes to the cycleReduction queue until all initial tree reduction has been done - not because this is necessary, but because it is expedient$/;"	m	class:NodeAndEdgeManager
_data	toolclasses/List.h	/^   T                 _data; \/\/ stored data value$/;"	m	class:DblLnkLstNode
_data	toolclasses/Seq.h	/^   const T _data;$/;"	m	class:Seq_item
_degree3hyperedges	reduce_src/MoveableNode.h	/^	std::list< Degree3Hyperedge * > _degree3hyperedges;$/;"	m	class:MoveableNode
_degree3hyperedges	reduce_src/bkup/MoveableNode.h	/^	std::list< Degree3Hyperedge * > _degree3hyperedges;$/;"	m	class:MoveableNode
_degree4hyperedges	reduce_src/MoveableNode.h	/^	std::list< Degree4Hyperedge * > _degree4hyperedges;$/;"	m	class:MoveableNode
_degree4hyperedges	reduce_src/bkup/MoveableNode.h	/^	std::list< Degree4Hyperedge * > _degree4hyperedges;$/;"	m	class:MoveableNode
_dens	reduce_src/DotSph.h	/^   float _dens;           \/\/ dot density$/;"	m	class:DotSphRep
_dens	reduce_src/DotSph.h	/^   float _dens;       \/\/ default dot density per square angstrom$/;"	m	class:DotSphManager
_dens	reduce_src/bkup/DotSph.h	/^   float _dens;           \/\/ dot density$/;"	m	class:DotSphRep
_dens	reduce_src/bkup/DotSph.h	/^   float _dens;       \/\/ default dot density per square angstrom$/;"	m	class:DotSphManager
_densFuzz	reduce_src/DotSph.h	/^   float _densFuzz;$/;"	m	class:DotSphManager
_densFuzz	reduce_src/bkup/DotSph.h	/^   float _densFuzz;$/;"	m	class:DotSphManager
_dependentNodeIndex	reduce_src/MoveableNode.h	/^	int					_dependentNodeIndex;$/;"	m	class:OptimizedNodeStateVector
_dependentNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int					_dependentNodeIndex;$/;"	m	class:OptimizedNodeStateVector
_descr	reduce_src/Mover.h	/^	std::string      _descr;      \/\/ identifier$/;"	m	class:Mover
_descr	reduce_src/bkup/Mover.h	/^	std::string      _descr;      \/\/ identifier$/;"	m	class:Mover
_dict	toolclasses/Dict.h	/^   const Dict<K,T> &_dict;\/\/ the dictionary we are looking at$/;"	m	class:DictIterator
_dict	toolclasses/MultiDict.h	/^   const MultiDict<K,T> &_dict;\/\/ the dictionary we are looking at$/;"	m	class:MultiDictIterator
_dist	reduce_src/AtomConn.h	/^   float       _dist;  \/\/ proton to heavy atom distance$/;"	m	class:atomPlacementPlan
_dist	reduce_src/bkup/AtomConn.h	/^   float       _dist;  \/\/ proton to heavy atom distance$/;"	m	class:atomPlacementPlan
_dotBucket	reduce_src/AtomPositions.h	/^   DotSphManager&            _dotBucket;$/;"	m	class:AtomPositions
_dotBucket	reduce_src/bkup/AtomPositions.h	/^   DotSphManager&            _dotBucket;$/;"	m	class:AtomPositions
_e	reduce_src/PDBrec.h	/^      ElementInfo _e;$/;"	m	struct:PDBrec::PDBrecRep
_e	reduce_src/bkup/PDBrec.h	/^      ElementInfo _e;$/;"	m	struct:PDBrec::PDBrecRep
_eRad	reduce_src/ElementInfo.h	/^      float  _eRad;  \/\/ (explicit H) VDW radius$/;"	m	class:ElementInfo::ElementInfoRep
_eRad	reduce_src/bkup/ElementInfo.h	/^      float  _eRad;  \/\/ (explicit H) VDW radius$/;"	m	class:ElementInfo::ElementInfoRep
_edgeList	reduce_src/MoveableNode.h	/^	std::list<EdgeBetweenMoveableNodes* >	_edgeList;$/;"	m	class:MoveableNode
_edgeList	reduce_src/bkup/MoveableNode.h	/^	std::list<EdgeBetweenMoveableNodes* >	_edgeList;$/;"	m	class:MoveableNode
_edgeScoreArrayOfMatrices	reduce_src/MoveableNode.h	/^	std::vector< double** > _edgeScoreArrayOfMatrices;$/;"	m	class:DummyNetworkDescriptorClass
_edgeScoreArrayOfMatrices	reduce_src/bkup/MoveableNode.h	/^	std::vector< double** > _edgeScoreArrayOfMatrices;$/;"	m	class:DummyNetworkDescriptorClass
_effortCounter	reduce_src/MoveableNode.h	/^	double _effortCounter;$/;"	m	class:NodeAndEdgeManager
_effortCounter	reduce_src/bkup/MoveableNode.h	/^	double _effortCounter;$/;"	m	class:NodeAndEdgeManager
_elem	reduce_src/AtomConn.h	/^   ElementInfo _elem;  \/\/ type of atom$/;"	m	class:atomPlacementPlan
_elem	reduce_src/bkup/AtomConn.h	/^   ElementInfo _elem;  \/\/ type of atom$/;"	m	class:atomPlacementPlan
_elem	toolclasses/VectIter.h	/^   int   _elem;            \/\/ current element$/;"	m	class:VectIter
_element	toolclasses/Point3d.h	/^   Coord _element[4][4]; \/\/ simple enough to be available to the public$/;"	m	class:Matrix4d
_eliminationOrder	reduce_src/MoveableNode.h	/^	int									_eliminationOrder;	\/\/0 = not eliminated, 1 = s_1 elimination, 2 = s_2 elimination, 3 = singleton elimination, 4 = s_3 elimination$/;"	m	class:MoveableNode
_eliminationOrder	reduce_src/bkup/MoveableNode.h	/^	int									_eliminationOrder;	\/\/0 = not eliminated, 1 = s_1 elimination, 2 = s_2 elimination, 3 = singleton elimination, 4 = s_3 elimination$/;"	m	class:MoveableNode
_emptyString	reduce_src/AtomConn.h	/^   std::string       _emptyString;$/;"	m	class:AtomConn
_emptyString	reduce_src/bkup/AtomConn.h	/^   std::string       _emptyString;$/;"	m	class:AtomConn
_enabled2Original	reduce_src/MoveableNode.h	/^	std::vector< std::vector< int > > _enabled2Original;$/;"	m	class:DummyNetworkDescriptorClass
_enabled2Original	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< int > > _enabled2Original;$/;"	m	class:DummyNetworkDescriptorClass
_exclude	reduce_src/StdResH.h	/^   std::string                   _exclude; \/\/ list of incompatible residues (for n-term, etc.)$/;"	m	class:StdResH
_exclude	reduce_src/bkup/StdResH.h	/^   std::string                   _exclude; \/\/ list of incompatible residues (for n-term, etc.)$/;"	m	class:StdResH
_excludePoints	reduce_src/AtomPositions.h	/^   std::list<BumperPoint*>          _excludePoints;$/;"	m	class:AtomPositions
_excludePoints	reduce_src/bkup/AtomPositions.h	/^   std::list<BumperPoint*>          _excludePoints;$/;"	m	class:AtomPositions
_explMaxRad	reduce_src/ElementInfo.h	/^   float _explMaxRad;$/;"	m	class:ElementTable
_explMaxRad	reduce_src/bkup/ElementInfo.h	/^   float _explMaxRad;$/;"	m	class:ElementTable
_extendO	reduce_src/FlipMemo.h	/^   bool        _extendO;      \/\/ extend the number of orientations?$/;"	m	class:FlipMemo
_extendO	reduce_src/bkup/FlipMemo.h	/^   bool        _extendO;      \/\/ extend the number of orientations?$/;"	m	class:FlipMemo
_filedict	reduce_src/CTab.h	/^   std::map<std::string, FileLoc*>  _filedict;$/;"	m	class:CTab
_filedict	reduce_src/bkup/CTab.h	/^   std::map<std::string, FileLoc*>  _filedict;$/;"	m	class:CTab
_first	toolclasses/List.h	/^   DblLnkLstNode<T> *_first;$/;"	m	class:List
_firstNode	reduce_src/MoveableNode.h	/^	MoveableNode*    _firstNode;$/;"	m	class:EdgeBetweenMoveableNodes
_firstNode	reduce_src/bkup/MoveableNode.h	/^	MoveableNode*    _firstNode;$/;"	m	class:EdgeBetweenMoveableNodes
_firstNodeIndex	reduce_src/MoveableNode.h	/^	int				 _firstNodeIndex;$/;"	m	class:EdgeBetweenMoveableNodes
_firstNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int				 _firstNodeIndex;$/;"	m	class:EdgeBetweenMoveableNodes
_firstNodeIndexDetStateFromCycleReduction	reduce_src/MoveableNode.h	/^	int									_firstNodeIndexDetStateFromCycleReduction;$/;"	m	class:MoveableNode
_firstNodeIndexDetStateFromCycleReduction	reduce_src/bkup/MoveableNode.h	/^	int									_firstNodeIndexDetStateFromCycleReduction;$/;"	m	class:MoveableNode
_firstNodeIndexForEdgeArray	reduce_src/MoveableNode.h	/^	std::vector<int> _firstNodeIndexForEdgeArray;$/;"	m	class:DummyNetworkDescriptorClass
_firstNodeIndexForEdgeArray	reduce_src/bkup/MoveableNode.h	/^	std::vector<int> _firstNodeIndexForEdgeArray;$/;"	m	class:DummyNetworkDescriptorClass
_firstRec	reduce_src/ResBlk.h	/^   PDBrec                    _firstRec; \/\/ the first atom or het record$/;"	m	class:ResBlk
_firstRec	reduce_src/bkup/ResBlk.h	/^   PDBrec                    _firstRec; \/\/ the first atom or het record$/;"	m	class:ResBlk
_flags	reduce_src/AtomConn.h	/^   int         _flags; \/\/ flags$/;"	m	class:atomPlacementPlan
_flags	reduce_src/ElementInfo.h	/^      int    _flags; \/\/ element features$/;"	m	class:ElementInfo::ElementInfoRep
_flags	reduce_src/bkup/AtomConn.h	/^   int         _flags; \/\/ flags$/;"	m	class:atomPlacementPlan
_flags	reduce_src/bkup/ElementInfo.h	/^      int    _flags; \/\/ element features$/;"	m	class:ElementInfo::ElementInfoRep
_flipMaxBadBump	reduce_src/Mover.h	/^   bool        _flipMaxBadBump[2]; \/\/ does the state have a bad bump?$/;"	m	class:Mover
_flipMaxBadBump	reduce_src/bkup/Mover.h	/^   bool        _flipMaxBadBump[2]; \/\/ does the state have a bad bump?$/;"	m	class:Mover
_flipMaxScore	reduce_src/Mover.h	/^   double      _flipMaxScore[2];   \/\/ max score for given state$/;"	m	class:Mover
_flipMaxScore	reduce_src/bkup/Mover.h	/^   double      _flipMaxScore[2];   \/\/ max score for given state$/;"	m	class:Mover
_fp	reduce_src/CTab.h	/^   FILE *                 _fp;$/;"	m	class:CTab
_fp	reduce_src/bkup/CTab.h	/^   FILE *                 _fp;$/;"	m	class:CTab
_fromO	reduce_src/FlipMemo.h	/^   int         _fromO;        \/\/ first orientation$/;"	m	class:FlipMemo
_fromO	reduce_src/bkup/FlipMemo.h	/^   int         _fromO;        \/\/ first orientation$/;"	m	class:FlipMemo
_fullName	reduce_src/ElementInfo.h	/^      char*  _fullName;  \/\/ long atom name$/;"	m	class:ElementInfo::ElementInfoRep
_fullName	reduce_src/bkup/ElementInfo.h	/^      char*  _fullName;  \/\/ long atom name$/;"	m	class:ElementInfo::ElementInfoRep
_grpName	reduce_src/RotMethyl.h	/^   char        _grpName[20];$/;"	m	class:RotMethyl
_grpName	reduce_src/bkup/RotMethyl.h	/^   char        _grpName[20];$/;"	m	class:RotMethyl
_hasAnyDegree3Hyperedges	reduce_src/MoveableNode.h	/^	bool	_hasAnyDegree3Hyperedges;$/;"	m	class:MoveableNode
_hasAnyDegree3Hyperedges	reduce_src/bkup/MoveableNode.h	/^	bool	_hasAnyDegree3Hyperedges;$/;"	m	class:MoveableNode
_hasAnyDegree4Hyperedges	reduce_src/MoveableNode.h	/^	bool	_hasAnyDegree4Hyperedges;$/;"	m	class:MoveableNode
_hasAnyDegree4Hyperedges	reduce_src/bkup/MoveableNode.h	/^	bool	_hasAnyDegree4Hyperedges;$/;"	m	class:MoveableNode
_hasAnyHighOrderOverlap	reduce_src/MoveableNode.h	/^	bool _hasAnyHighOrderOverlap;$/;"	m	class:MoveableNode
_hasAnyHighOrderOverlap	reduce_src/bkup/MoveableNode.h	/^	bool _hasAnyHighOrderOverlap;$/;"	m	class:MoveableNode
_heavyAtom	reduce_src/RotDonor.h	/^   PDBrec      _heavyAtom; \/\/ hydrogen attachment point$/;"	m	class:RotDonor
_heavyAtom	reduce_src/RotMethyl.h	/^   PDBrec      _heavyAtom; \/\/ hydrogen attachment point$/;"	m	class:RotMethyl
_heavyAtom	reduce_src/bkup/RotDonor.h	/^   PDBrec      _heavyAtom; \/\/ hydrogen attachment point$/;"	m	class:RotDonor
_heavyAtom	reduce_src/bkup/RotMethyl.h	/^   PDBrec      _heavyAtom; \/\/ hydrogen attachment point$/;"	m	class:RotMethyl
_i	reduce_src/PDBrec.h	/^   int* _i;$/;"	m	class:PDBrec
_i	reduce_src/bkup/PDBrec.h	/^   int* _i;$/;"	m	class:PDBrec
_i	toolclasses/Dict.h	/^   unsigned long    _i;   \/\/ which head were we on (1 .. _M)$/;"	m	class:DictIterator
_i	toolclasses/MultiDict.h	/^   unsigned long        _i;   \/\/ which head were we on (1 .. _M)$/;"	m	class:MultiDictIterator
_iRad	reduce_src/ElementInfo.h	/^      float  _iRad;  \/\/ (implicit H) VDW radius$/;"	m	class:ElementInfo::ElementInfoRep
_iRad	reduce_src/bkup/ElementInfo.h	/^      float  _iRad;  \/\/ (implicit H) VDW radius$/;"	m	class:ElementInfo::ElementInfoRep
_implMaxRad	reduce_src/ElementInfo.h	/^   float _implMaxRad;$/;"	m	class:ElementTable
_implMaxRad	reduce_src/bkup/ElementInfo.h	/^   float _implMaxRad;$/;"	m	class:ElementTable
_inNaturalVertexOrder	reduce_src/MoveableNode.h	/^	mutable bool _inNaturalVertexOrder;$/;"	m	class:Degree3Hyperedge
_inNaturalVertexOrder	reduce_src/MoveableNode.h	/^	mutable bool _inNaturalVertexOrder;$/;"	m	class:Degree4Hyperedge
_inNaturalVertexOrder	reduce_src/bkup/MoveableNode.h	/^	mutable bool _inNaturalVertexOrder;$/;"	m	class:Degree3Hyperedge
_inNaturalVertexOrder	reduce_src/bkup/MoveableNode.h	/^	mutable bool _inNaturalVertexOrder;$/;"	m	class:Degree4Hyperedge
_indFirstNodeLastEdgeLookup	reduce_src/MoveableNode.h	/^	int _indFirstNodeLastEdgeLookup;  \/\/Used by the cycle reduction algorithm.  I currently do not have a way to get the edge between two nodes in constant time - this saves previous work for reuse.$/;"	m	class:NodeAndEdgeManager
_indFirstNodeLastEdgeLookup	reduce_src/bkup/MoveableNode.h	/^	int _indFirstNodeLastEdgeLookup;  \/\/Used by the cycle reduction algorithm.  I currently do not have a way to get the edge between two nodes in constant time - this saves previous work for reuse.$/;"	m	class:NodeAndEdgeManager
_indSecondNodeLastEdgeLookup	reduce_src/MoveableNode.h	/^	int _indSecondNodeLastEdgeLookup; $/;"	m	class:NodeAndEdgeManager
_indSecondNodeLastEdgeLookup	reduce_src/bkup/MoveableNode.h	/^	int _indSecondNodeLastEdgeLookup; $/;"	m	class:NodeAndEdgeManager
_index	reduce_src/BumperPoint.h	/^   int _index; \/\/\/ vishal: for indexing$/;"	m	class:BumperPoint
_index	reduce_src/ElementInfo.h	/^   std::map<std::string, ElementInfo*> _index;$/;"	m	class:StandardElementTable
_index	reduce_src/MoveableNode.h	/^	int									_index;$/;"	m	class:MoveableNode
_index	reduce_src/PDBrec.h	/^   int _index; \/\/\/ vishal: for indexing$/;"	m	class:PDBrec
_index	reduce_src/bkup/BumperPoint.h	/^   int _index; \/\/\/ vishal: for indexing$/;"	m	class:BumperPoint
_index	reduce_src/bkup/ElementInfo.h	/^   std::map<std::string, ElementInfo*> _index;$/;"	m	class:StandardElementTable
_index	reduce_src/bkup/MoveableNode.h	/^	int									_index;$/;"	m	class:MoveableNode
_index	reduce_src/bkup/PDBrec.h	/^   int _index; \/\/\/ vishal: for indexing$/;"	m	class:PDBrec
_indexMultipliers	reduce_src/MoveableNode.h	/^	mutable int _indexMultipliers [ 3 ];$/;"	m	class:Degree3Hyperedge
_indexMultipliers	reduce_src/MoveableNode.h	/^	mutable int _indexMultipliers [ 4 ];$/;"	m	class:Degree4Hyperedge
_indexMultipliers	reduce_src/bkup/MoveableNode.h	/^	mutable int _indexMultipliers [ 3 ];$/;"	m	class:Degree3Hyperedge
_indexMultipliers	reduce_src/bkup/MoveableNode.h	/^	mutable int _indexMultipliers [ 4 ];$/;"	m	class:Degree4Hyperedge
_init	reduce_src/bkup/old_neighborList.h	/^	bool _init;$/;"	m	class:NeighborList
_init	reduce_src/old_neighborList.h	/^	bool _init;$/;"	m	class:NeighborList
_initHasBadBump	reduce_src/Mover.h	/^   bool        _initHasBadBump; \/\/ does best orientation have a bad bump?$/;"	m	class:Mover
_initHasBadBump	reduce_src/bkup/Mover.h	/^   bool        _initHasBadBump; \/\/ does best orientation have a bad bump?$/;"	m	class:Mover
_initIsSet	reduce_src/Mover.h	/^   bool        _initIsSet;  \/\/ has the initial score been set?$/;"	m	class:Mover
_initIsSet	reduce_src/bkup/Mover.h	/^   bool        _initIsSet;  \/\/ has the initial score been set?$/;"	m	class:Mover
_initScore	reduce_src/Mover.h	/^   double      _initScore;$/;"	m	class:Mover
_initScore	reduce_src/bkup/Mover.h	/^   double      _initScore;$/;"	m	class:Mover
_insertPt	reduce_src/ResBlk.h	/^   std::list<PDBrec*>::iterator _insertPt; \/\/ where we put new atom records$/;"	m	class:ResBlk
_insertPt	reduce_src/bkup/ResBlk.h	/^   std::list<PDBrec*>::iterator _insertPt; \/\/ where we put new atom records$/;"	m	class:ResBlk
_instanceFlag	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::_instanceFlag = false;$/;"	m	class:NodeAndEdgeManager	file:
_instanceFlag	reduce_src/MoveableNode.cpp	/^bool QueueOfToBeEliminatedNodes::_instanceFlag = false;$/;"	m	class:QueueOfToBeEliminatedNodes	file:
_instanceFlag	reduce_src/MoveableNode.h	/^	static bool							_instanceFlag;$/;"	m	class:NodeAndEdgeManager
_instanceFlag	reduce_src/MoveableNode.h	/^	static bool							_instanceFlag;$/;"	m	class:QueueOfToBeEliminatedNodes
_instanceFlag	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::_instanceFlag = false;$/;"	m	class:NodeAndEdgeManager	file:
_instanceFlag	reduce_src/bkup/MoveableNode.cpp	/^bool QueueOfToBeEliminatedNodes::_instanceFlag = false;$/;"	m	class:QueueOfToBeEliminatedNodes	file:
_instanceFlag	reduce_src/bkup/MoveableNode.h	/^	static bool							_instanceFlag;$/;"	m	class:NodeAndEdgeManager
_instanceFlag	reduce_src/bkup/MoveableNode.h	/^	static bool							_instanceFlag;$/;"	m	class:QueueOfToBeEliminatedNodes
_isComplete	reduce_src/FlipMemo.h	/^   bool        _isComplete;   \/\/ have all the atoms been gathered?$/;"	m	class:FlipMemo
_isComplete	reduce_src/bkup/FlipMemo.h	/^   bool        _isComplete;   \/\/ have all the atoms been gathered?$/;"	m	class:FlipMemo
_isEliminated	reduce_src/MoveableNode.h	/^	bool								_isEliminated;$/;"	m	class:MoveableNode
_isEliminated	reduce_src/MoveableNode.h	/^	bool			 _isEliminated;$/;"	m	class:EdgeBetweenMoveableNodes
_isEliminated	reduce_src/bkup/MoveableNode.h	/^	bool								_isEliminated;$/;"	m	class:MoveableNode
_isEliminated	reduce_src/bkup/MoveableNode.h	/^	bool			 _isEliminated;$/;"	m	class:EdgeBetweenMoveableNodes
_item	toolclasses/Seq.h	/^   Seq_item<T>* _item;$/;"	m	class:Seq
_key	toolclasses/Dict.h	/^   const K         _key;$/;"	m	class:DictLink
_key	toolclasses/MultiDict.h	/^   const K          _key;$/;"	m	class:MultiLink
_last	toolclasses/List.h	/^   DblLnkLstNode<T> *_last;$/;"	m	class:List
_len	toolclasses/Seq.h	/^   unsigned _len;$/;"	m	class:Seq
_links	reduce_src/Mover.h	/^   std::map<std::string, MoverPtr> _links; \/\/ connected items$/;"	m	class:Mover
_links	reduce_src/bkup/Mover.h	/^   std::map<std::string, MoverPtr> _links; \/\/ connected items$/;"	m	class:Mover
_list	reduce_src/DotSph.h	/^	std::list<DotSph*> _list; \/\/ list of spheres already built$/;"	m	class:DotSphManager
_list	reduce_src/bkup/DotSph.h	/^	std::list<DotSph*> _list; \/\/ list of spheres already built$/;"	m	class:DotSphManager
_list	toolclasses/ListIter.h	/^   const List<T>&    _list;  \/\/ the list$/;"	m	class:ListIter
_loc	reduce_src/BumperPoint.h	/^      Point3d _loc;$/;"	m	struct:BumperPoint::BumperPointRep
_loc	reduce_src/bkup/BumperPoint.h	/^      Point3d _loc;$/;"	m	struct:BumperPoint::BumperPointRep
_location	reduce_src/CTab.h	/^   long _location; \/\/ position in file (bytes from the beginning)$/;"	m	class:FileLoc
_location	reduce_src/bkup/CTab.h	/^   long _location; \/\/ position in file (bytes from the beginning)$/;"	m	class:FileLoc
_mark	reduce_src/PDBrec.h	/^      int         _mark;     \/\/ utility flag$/;"	m	struct:PDBrec::PDBrecRep
_mark	reduce_src/bkup/PDBrec.h	/^      int         _mark;     \/\/ utility flag$/;"	m	struct:PDBrec::PDBrecRep
_maxNodeStates	reduce_src/MoveableNode.h	/^	NodeState							_maxNodeStates;$/;"	m	class:MoveableNode
_maxNodeStates	reduce_src/bkup/MoveableNode.h	/^	NodeState							_maxNodeStates;$/;"	m	class:MoveableNode
_maxVDWFound	reduce_src/AtomPositions.h	/^	float	_maxVDWFound;$/;"	m	class:AtomPositions
_maxVDWFound	reduce_src/bkup/AtomPositions.h	/^	float	_maxVDWFound;$/;"	m	class:AtomPositions
_max_range	reduce_src/bkup/neighborList.h	/^	Coord _max_range;$/;"	m	class:NeighborList
_max_range	reduce_src/bkup/old_neighborList.h	/^	Coord _max_range;$/;"	m	class:NeighborList
_max_range	reduce_src/neighborList.h	/^	Coord _max_range;$/;"	m	class:NeighborList
_max_range	reduce_src/old_neighborList.h	/^	Coord _max_range;$/;"	m	class:NeighborList
_min_charged_hb_cutoff	reduce_src/AtomPositions.h	/^   const float               _min_charged_hb_cutoff;$/;"	m	class:AtomPositions
_min_charged_hb_cutoff	reduce_src/bkup/AtomPositions.h	/^   const float               _min_charged_hb_cutoff;$/;"	m	class:AtomPositions
_min_regular_hb_cutoff	reduce_src/AtomPositions.h	/^   const float               _min_regular_hb_cutoff;$/;"	m	class:AtomPositions
_min_regular_hb_cutoff	reduce_src/bkup/AtomPositions.h	/^   const float               _min_regular_hb_cutoff;$/;"	m	class:AtomPositions
_motionDesc	reduce_src/AtomPositions.h	/^   std::map<std::string, Mover*>       _motionDesc;$/;"	m	class:AtomPositions
_motionDesc	reduce_src/bkup/AtomPositions.h	/^   std::map<std::string, Mover*>       _motionDesc;$/;"	m	class:AtomPositions
_moveableNode	reduce_src/MoveableNode.h	/^	MoveableNode * _moveableNode[ 3 ];$/;"	m	class:Degree3Hyperedge
_moveableNode	reduce_src/MoveableNode.h	/^	MoveableNode * _moveableNode[ 4 ];$/;"	m	class:Degree4Hyperedge
_moveableNode	reduce_src/bkup/MoveableNode.h	/^	MoveableNode * _moveableNode[ 3 ];$/;"	m	class:Degree3Hyperedge
_moveableNode	reduce_src/bkup/MoveableNode.h	/^	MoveableNode * _moveableNode[ 4 ];$/;"	m	class:Degree4Hyperedge
_mover	reduce_src/MoveableNode.h	/^	Mover* _mover;$/;"	m	class:MoveableNode
_mover	reduce_src/bkup/MoveableNode.h	/^	Mover* _mover;$/;"	m	class:MoveableNode
_moversForDegree3Hyperedge	reduce_src/MoveableNode.h	/^	std::vector< std::vector< Mover* > > _moversForDegree3Hyperedge;$/;"	m	class:DummyNetworkDescriptorClass
_moversForDegree3Hyperedge	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< Mover* > > _moversForDegree3Hyperedge;$/;"	m	class:DummyNetworkDescriptorClass
_n	reduce_src/DotSph.h	/^   int      _n;          \/\/ number of three-dimensional points$/;"	m	class:DotSphRep
_n	reduce_src/bkup/DotSph.h	/^   int      _n;          \/\/ number of three-dimensional points$/;"	m	class:DotSphRep
_n	toolclasses/Dict.h	/^   unsigned long _n;       \/\/ current number of entries$/;"	m	class:Dict
_n	toolclasses/MultiDict.h	/^   unsigned long _n;       \/\/ current number of entries$/;"	m	class:MultiDict
_nBondCutoff	reduce_src/AtomPositions.h	/^   const int                 _nBondCutoff;$/;"	m	class:AtomPositions
_nBondCutoff	reduce_src/bkup/AtomPositions.h	/^   const int                 _nBondCutoff;$/;"	m	class:AtomPositions
_name	reduce_src/AtomConn.h	/^   std::string       _name;      \/\/ name of this atom$/;"	m	class:AtomConn
_name	reduce_src/ElementInfo.h	/^      char*  _name;  \/\/ atom name$/;"	m	class:ElementInfo::ElementInfoRep
_name	reduce_src/StdResH.h	/^   std::string                   _name;    \/\/ residue name$/;"	m	class:StdResH
_name	reduce_src/bkup/AtomConn.h	/^   std::string       _name;      \/\/ name of this atom$/;"	m	class:AtomConn
_name	reduce_src/bkup/ElementInfo.h	/^      char*  _name;  \/\/ atom name$/;"	m	class:ElementInfo::ElementInfoRep
_name	reduce_src/bkup/StdResH.h	/^   std::string                   _name;    \/\/ residue name$/;"	m	class:StdResH
_neighbor	reduce_src/AtomConn.h	/^   std::vector<std::string> _neighbor;  \/\/ list of connected atom names$/;"	m	class:AtomConn
_neighbor	reduce_src/bkup/AtomConn.h	/^   std::vector<std::string> _neighbor;  \/\/ list of connected atom names$/;"	m	class:AtomConn
_next	toolclasses/Dict.h	/^   DictLink<K, T> *_next;$/;"	m	class:DictLink
_next	toolclasses/List.h	/^   DblLnkLstNode<T> *_next;$/;"	m	class:DblLnkLstNode
_next	toolclasses/MultiDict.h	/^   MultiLink<K, T> *_next;$/;"	m	class:MultiLink
_next	toolclasses/Seq.h	/^   Seq_item* _next;$/;"	m	class:Seq_item
_node	toolclasses/ListIter.h	/^   DblLnkLstNode<T>* _node;  \/\/ current node$/;"	m	class:ListIter
_nodeIndex	reduce_src/MoveableNode.h	/^	int		  _nodeIndex;$/;"	m	class:NodeAndStatePair
_nodeIndex	reduce_src/bkup/MoveableNode.h	/^	int		  _nodeIndex;$/;"	m	class:NodeAndStatePair
_nodeIndexDetStateFromTreeReduction	reduce_src/MoveableNode.h	/^	int									_nodeIndexDetStateFromTreeReduction;$/;"	m	class:MoveableNode
_nodeIndexDetStateFromTreeReduction	reduce_src/bkup/MoveableNode.h	/^	int									_nodeIndexDetStateFromTreeReduction;$/;"	m	class:MoveableNode
_nodeIndices	reduce_src/MoveableNode.h	/^	int _nodeIndices[ 3 ];$/;"	m	class:Degree3Hyperedge
_nodeIndices	reduce_src/MoveableNode.h	/^	int _nodeIndices[ 4 ];$/;"	m	class:Degree4Hyperedge
_nodeIndices	reduce_src/bkup/MoveableNode.h	/^	int _nodeIndices[ 3 ];$/;"	m	class:Degree3Hyperedge
_nodeIndices	reduce_src/bkup/MoveableNode.h	/^	int _nodeIndices[ 4 ];$/;"	m	class:Degree4Hyperedge
_nodeMaxStatesArray	reduce_src/MoveableNode.h	/^	NodeState* _nodeMaxStatesArray;$/;"	m	class:DummyNetworkDescriptorClass
_nodeMaxStatesArray	reduce_src/bkup/MoveableNode.h	/^	NodeState* _nodeMaxStatesArray;$/;"	m	class:DummyNetworkDescriptorClass
_nodeScoreArrayOfArrays	reduce_src/MoveableNode.h	/^	double** _nodeScoreArrayOfArrays;$/;"	m	class:DummyNetworkDescriptorClass
_nodeScoreArrayOfArrays	reduce_src/bkup/MoveableNode.h	/^	double** _nodeScoreArrayOfArrays;$/;"	m	class:DummyNetworkDescriptorClass
_nodeState	reduce_src/MoveableNode.h	/^	NodeState _nodeState;$/;"	m	class:NodeAndStatePair
_nodeState	reduce_src/bkup/MoveableNode.h	/^	NodeState _nodeState;$/;"	m	class:NodeAndStatePair
_nodesDeterminingOptimalState	reduce_src/MoveableNode.h	/^	int _nodesDeterminingOptimalState[ 3 ];$/;"	m	class:MoveableNode
_nodesDeterminingOptimalState	reduce_src/bkup/MoveableNode.h	/^	int _nodesDeterminingOptimalState[ 3 ];$/;"	m	class:MoveableNode
_nori	reduce_src/RotDonor.h	/^   int                   _nori;  \/\/ number of orientation angles$/;"	m	class:RotDonor
_nori	reduce_src/bkup/RotDonor.h	/^   int                   _nori;  \/\/ number of orientation angles$/;"	m	class:RotDonor
_numEdges	reduce_src/MoveableNode.h	/^	int									_numEdges;$/;"	m	class:NodeAndEdgeManager
_numEdges	reduce_src/MoveableNode.h	/^	int _numEdges;$/;"	m	class:DummyNetworkDescriptorClass
_numEdges	reduce_src/bkup/MoveableNode.h	/^	int									_numEdges;$/;"	m	class:NodeAndEdgeManager
_numEdges	reduce_src/bkup/MoveableNode.h	/^	int _numEdges;$/;"	m	class:DummyNetworkDescriptorClass
_numEnabledStatesForVertex	reduce_src/MoveableNode.h	/^	std::vector< int > _numEnabledStatesForVertex;$/;"	m	class:DummyNetworkDescriptorClass
_numEnabledStatesForVertex	reduce_src/bkup/MoveableNode.h	/^	std::vector< int > _numEnabledStatesForVertex;$/;"	m	class:DummyNetworkDescriptorClass
_numNodes	reduce_src/MoveableNode.h	/^	int									_numNodes;$/;"	m	class:NodeAndEdgeManager
_numNodes	reduce_src/MoveableNode.h	/^	int _numNodes;$/;"	m	class:DummyNetworkDescriptorClass
_numNodes	reduce_src/bkup/MoveableNode.h	/^	int									_numNodes;$/;"	m	class:NodeAndEdgeManager
_numNodes	reduce_src/bkup/MoveableNode.h	/^	int _numNodes;$/;"	m	class:DummyNetworkDescriptorClass
_numO	reduce_src/FlipMemo.h	/^   int         _numO;         \/\/ number of orientations?$/;"	m	class:FlipMemo
_numO	reduce_src/bkup/FlipMemo.h	/^   int         _numO;         \/\/ number of orientations?$/;"	m	class:FlipMemo
_numStates	reduce_src/MoveableNode.h	/^	int _numStates[ 3 ];$/;"	m	class:Degree3Hyperedge
_numStates	reduce_src/MoveableNode.h	/^	int _numStates[ 4 ];$/;"	m	class:Degree4Hyperedge
_numStates	reduce_src/bkup/MoveableNode.h	/^	int _numStates[ 3 ];$/;"	m	class:Degree3Hyperedge
_numStates	reduce_src/bkup/MoveableNode.h	/^	int _numStates[ 4 ];$/;"	m	class:Degree4Hyperedge
_numUnEliminatedNodes	reduce_src/MoveableNode.h	/^	int _numUnEliminatedNodes;	\/\/Initialized to _numNodes$/;"	m	class:NodeAndEdgeManager
_numUnEliminatedNodes	reduce_src/bkup/MoveableNode.h	/^	int _numUnEliminatedNodes;	\/\/Initialized to _numNodes$/;"	m	class:NodeAndEdgeManager
_num_adj	reduce_src/bkup/new_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/bkup/reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/bkup/sym_add.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/bkup/sym_print.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/new_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/print_neighbors.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/sym_add.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/sym_print.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_adj	reduce_src/test_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/bkup/new_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/bkup/reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/bkup/sym_add.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/bkup/sym_print.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/new_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/print_neighbors.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/sym_add.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/sym_print.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_atoms	reduce_src/test_reduce.cpp	/^   int _num_atoms,      _conect;$/;"	m	struct:SummaryStats	file:
_num_elem	toolclasses/List.h	/^   int _num_elem; \/\/ num nodes$/;"	m	class:List
_num_elem	toolclasses/Vector.h	/^   int _num_elem;$/;"	m	class:Vector
_num_renamed	reduce_src/bkup/new_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/bkup/reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/bkup/sym_add.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/bkup/sym_print.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/new_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/print_neighbors.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/sym_add.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/sym_print.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_num_renamed	reduce_src/test_reduce.cpp	/^   int _num_adj,	_num_renamed;$/;"	m	struct:SummaryStats	file:
_numberDegree3Hyperedges	reduce_src/MoveableNode.h	/^	int _numberDegree3Hyperedges;$/;"	m	class:DummyNetworkDescriptorClass
_numberDegree3Hyperedges	reduce_src/bkup/MoveableNode.h	/^	int _numberDegree3Hyperedges;$/;"	m	class:DummyNetworkDescriptorClass
_oFlipState	reduce_src/FlipMemo.cpp	/^const int FlipMemo::_oFlipState[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_oFlipState	reduce_src/FlipMemo.h	/^   static const int           _oFlipState[FMnumFlipOrient];$/;"	m	class:FlipMemo
_oFlipState	reduce_src/bkup/FlipMemo.cpp	/^const int FlipMemo::_oFlipState[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_oFlipState	reduce_src/bkup/FlipMemo.h	/^   static const int           _oFlipState[FMnumFlipOrient];$/;"	m	class:FlipMemo
_oang	reduce_src/RotDonor.h	/^   std::vector< double >      _oang;  \/\/ array of angles$/;"	m	class:RotDonor
_oang	reduce_src/bkup/RotDonor.h	/^   std::vector< double >      _oang;  \/\/ array of angles$/;"	m	class:RotDonor
_occupancyCuttoff	reduce_src/AtomPositions.h	/^   const float               _occupancyCuttoff;$/;"	m	class:AtomPositions
_occupancyCuttoff	reduce_src/bkup/AtomPositions.h	/^   const float               _occupancyCuttoff;$/;"	m	class:AtomPositions
_ok	reduce_src/BumperPoint.h	/^      bool    _ok;$/;"	m	struct:BumperPoint::BumperPointRep
_ok	reduce_src/Mover.h	/^   bool        _ok;         \/\/ is the memo valid?$/;"	m	class:Mover
_ok	reduce_src/PDBrec.h	/^      bool        _ok;       \/\/ is this a valid record?$/;"	m	struct:PDBrec::PDBrecRep
_ok	reduce_src/bkup/BumperPoint.h	/^      bool    _ok;$/;"	m	struct:BumperPoint::BumperPointRep
_ok	reduce_src/bkup/Mover.h	/^   bool        _ok;         \/\/ is the memo valid?$/;"	m	class:Mover
_ok	reduce_src/bkup/PDBrec.h	/^      bool        _ok;       \/\/ is this a valid record?$/;"	m	struct:PDBrec::PDBrecRep
_onlyA	reduce_src/AtomPositions.h	/^   const bool                _onlyA;$/;"	m	class:AtomPositions
_onlyA	reduce_src/bkup/AtomPositions.h	/^   const bool                _onlyA;$/;"	m	class:AtomPositions
_optimalNetworkScore	reduce_src/MoveableNode.h	/^	double _optimalNetworkScore;  $/;"	m	class:NodeAndEdgeManager
_optimalNetworkScore	reduce_src/bkup/MoveableNode.h	/^	double _optimalNetworkScore;  $/;"	m	class:NodeAndEdgeManager
_optimalNetworkStateVector	reduce_src/MoveableNode.h	/^	std::vector<NodeState > _optimalNetworkStateVector;  \/\/Compute this once and keep it if needed more than once$/;"	m	class:NodeAndEdgeManager
_optimalNetworkStateVector	reduce_src/bkup/MoveableNode.h	/^	std::vector<NodeState > _optimalNetworkStateVector;  \/\/Compute this once and keep it if needed more than once$/;"	m	class:NodeAndEdgeManager
_optimalScore	reduce_src/MoveableNode.h	/^	double _optimalScore;$/;"	m	class:MoveableNode
_optimalScore	reduce_src/bkup/MoveableNode.h	/^	double _optimalScore;$/;"	m	class:MoveableNode
_optimalSolutionFound	reduce_src/MoveableNode.h	/^	bool _optimalSolutionFound;  \/\/Keep track of whether work needs to be done first to report the optimal network state$/;"	m	class:NodeAndEdgeManager
_optimalSolutionFound	reduce_src/bkup/MoveableNode.h	/^	bool _optimalSolutionFound;  \/\/Keep track of whether work needs to be done first to report the optimal network state$/;"	m	class:NodeAndEdgeManager
_optimalState	reduce_src/MoveableNode.h	/^	NodeState _optimalState; \/\/for singleton elimination$/;"	m	class:MoveableNode
_optimalState	reduce_src/bkup/MoveableNode.h	/^	NodeState _optimalState; \/\/for singleton elimination$/;"	m	class:MoveableNode
_optimalStateMatrix	reduce_src/MoveableNode.h	/^	OptimizedNodeStateMatrix*			_optimalStateMatrix;$/;"	m	class:MoveableNode
_optimalStateMatrix	reduce_src/bkup/MoveableNode.h	/^	OptimizedNodeStateMatrix*			_optimalStateMatrix;$/;"	m	class:MoveableNode
_optimalStateMatrix3	reduce_src/MoveableNode.h	/^	OptimizedNodeStateMatrix3* _optimalStateMatrix3;$/;"	m	class:MoveableNode
_optimalStateMatrix3	reduce_src/bkup/MoveableNode.h	/^	OptimizedNodeStateMatrix3* _optimalStateMatrix3;$/;"	m	class:MoveableNode
_optimalStateVector	reduce_src/MoveableNode.h	/^	OptimizedNodeStateVector*			_optimalStateVector;$/;"	m	class:MoveableNode
_optimalStateVector	reduce_src/bkup/MoveableNode.h	/^	OptimizedNodeStateVector*			_optimalStateVector;$/;"	m	class:MoveableNode
_order	reduce_src/AtomConn.h	/^   int          _order;     \/\/ number used when sorting AtomConns$/;"	m	class:AtomConn
_order	reduce_src/bkup/AtomConn.h	/^   int          _order;     \/\/ number used when sorting AtomConns$/;"	m	class:AtomConn
_orientDescr	reduce_src/FlipMemo.cpp	/^const char* FlipMemo::_orientDescr[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_orientDescr	reduce_src/FlipMemo.h	/^   static const char*         _orientDescr[FMnumFlipOrient];$/;"	m	class:FlipMemo
_orientDescr	reduce_src/bkup/FlipMemo.cpp	/^const char* FlipMemo::_orientDescr[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_orientDescr	reduce_src/bkup/FlipMemo.h	/^   static const char*         _orientDescr[FMnumFlipOrient];$/;"	m	class:FlipMemo
_orientation	reduce_src/Mover.h	/^   int         _orientation[2];$/;"	m	class:Mover
_orientation	reduce_src/bkup/Mover.h	/^   int         _orientation[2];$/;"	m	class:Mover
_orientationPenalty	reduce_src/FlipMemo.cpp	/^const double FlipMemo::_orientationPenalty[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_orientationPenalty	reduce_src/FlipMemo.h	/^   static const double        _orientationPenalty[FMnumFlipOrient];$/;"	m	class:FlipMemo
_orientationPenalty	reduce_src/bkup/FlipMemo.cpp	/^const double FlipMemo::_orientationPenalty[FMnumFlipOrient] = {$/;"	m	class:FlipMemo	file:
_orientationPenalty	reduce_src/bkup/FlipMemo.h	/^   static const double        _orientationPenalty[FMnumFlipOrient];$/;"	m	class:FlipMemo
_origLoc	reduce_src/FlipMemo.h	/^   Point3d _origLoc[FMmaxAtomSlots+1]; \/\/ original xyz locations of atoms$/;"	m	class:FlipMemo
_origLoc	reduce_src/bkup/FlipMemo.h	/^   Point3d _origLoc[FMmaxAtomSlots+1]; \/\/ original xyz locations of atoms$/;"	m	class:FlipMemo
_originalAtom	reduce_src/AtomDescr.h	/^	PDBrec* _originalAtom;$/;"	m	class:AtomDescr
_originalAtom	reduce_src/bkup/AtomDescr.h	/^	PDBrec* _originalAtom;$/;"	m	class:AtomDescr
_os	reduce_src/AtomPositions.h	/^   std::ostream&             _os;$/;"	m	class:AtomPositions
_os	reduce_src/bkup/AtomPositions.h	/^   std::ostream&             _os;$/;"	m	class:AtomPositions
_outputNotice	reduce_src/AtomPositions.h	/^   const bool                _outputNotice;$/;"	m	class:AtomPositions
_outputNotice	reduce_src/bkup/AtomPositions.h	/^   const bool                _outputNotice;$/;"	m	class:AtomPositions
_p	reduce_src/DotSph.h	/^   Point3d *_p;          \/\/ array of points$/;"	m	class:DotSphRep
_p	reduce_src/bkup/DotSph.h	/^   Point3d *_p;          \/\/ array of points$/;"	m	class:DotSphRep
_p	toolclasses/Dict.h	/^   DictLink<K,T>*   _p;   \/\/ _p->next() is the next entry to consider$/;"	m	class:DictIterator
_p	toolclasses/Hdl.h	/^   T* _p;$/;"	m	class:Hdl
_p	toolclasses/MultiDict.h	/^   MultiLink<K,T>*        _p;   \/\/ _p->next() is the next entry to consider$/;"	m	class:MultiDictIterator
_p	toolclasses/UseCount.h	/^   int* _p;$/;"	m	class:UseCount
_p1	reduce_src/RotDonor.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotDonor
_p1	reduce_src/RotMethyl.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotMethyl
_p1	reduce_src/bkup/RotDonor.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotDonor
_p1	reduce_src/bkup/RotMethyl.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotMethyl
_p2	reduce_src/RotDonor.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotDonor
_p2	reduce_src/RotMethyl.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotMethyl
_p2	reduce_src/bkup/RotDonor.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotDonor
_p2	reduce_src/bkup/RotMethyl.h	/^   Point3d     _p1, _p2;   \/\/ rotation axis is through these points$/;"	m	class:RotMethyl
_pair_sym_table	reduce_src/bkup/old_neighborList.h	/^	cctbx::crystal::pair_sym_table _pair_sym_table;$/;"	m	class:NeighborList
_pair_sym_table	reduce_src/old_neighborList.h	/^	cctbx::crystal::pair_sym_table _pair_sym_table;$/;"	m	class:NeighborList
_plans	reduce_src/StdResH.h	/^   std::list<atomPlacementPlan*> _plans;$/;"	m	class:StdResH
_plans	reduce_src/bkup/StdResH.h	/^   std::list<atomPlacementPlan*> _plans;$/;"	m	class:StdResH
_pmag	reduce_src/AtomPositions.h	/^   const float               _pmag;$/;"	m	class:AtomPositions
_pmag	reduce_src/bkup/AtomPositions.h	/^   const float               _pmag;$/;"	m	class:AtomPositions
_pointName	reduce_src/FlipMemo.cpp	/^const char* FlipMemo::_pointName[FMnumFlipRes+1]$/;"	m	class:FlipMemo	file:
_pointName	reduce_src/FlipMemo.h	/^   static const char*         _pointName[FMnumFlipRes+1][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_pointName	reduce_src/bkup/FlipMemo.cpp	/^const char* FlipMemo::_pointName[FMnumFlipRes+1]$/;"	m	class:FlipMemo	file:
_pointName	reduce_src/bkup/FlipMemo.h	/^   static const char*         _pointName[FMnumFlipRes+1][FMmaxAtomSlots+1];$/;"	m	class:FlipMemo
_prev	toolclasses/List.h	/^   DblLnkLstNode<T> *_prev;$/;"	m	class:DblLnkLstNode
_probeRadius	reduce_src/AtomPositions.h	/^   const float               _probeRadius;$/;"	m	class:AtomPositions
_probeRadius	reduce_src/bkup/AtomPositions.h	/^   const float               _probeRadius;$/;"	m	class:AtomPositions
_protLoc	reduce_src/FlipMemo.cpp	/^const ProtonLoc_t FlipMemo::_protLoc[FMnumNewLocs+1] = {$/;"	m	class:FlipMemo	file:
_protLoc	reduce_src/FlipMemo.h	/^   static const ProtonLoc_t   _protLoc[FMnumNewLocs+1];$/;"	m	class:FlipMemo
_protLoc	reduce_src/bkup/FlipMemo.cpp	/^const ProtonLoc_t FlipMemo::_protLoc[FMnumNewLocs+1] = {$/;"	m	class:FlipMemo	file:
_protLoc	reduce_src/bkup/FlipMemo.h	/^   static const ProtonLoc_t   _protLoc[FMnumNewLocs+1];$/;"	m	class:FlipMemo
_ptrToEdgeOfLastEdgeLookup	reduce_src/MoveableNode.h	/^	EdgeBetweenMoveableNodes* _ptrToEdgeOfLastEdgeLookup;$/;"	m	class:NodeAndEdgeManager
_ptrToEdgeOfLastEdgeLookup	reduce_src/bkup/MoveableNode.h	/^	EdgeBetweenMoveableNodes* _ptrToEdgeOfLastEdgeLookup;$/;"	m	class:NodeAndEdgeManager
_r	reduce_src/PDBrec.h	/^      PDB         _r;$/;"	m	struct:PDBrec::PDBrecRep
_r	reduce_src/bkup/PDBrec.h	/^      PDB         _r;$/;"	m	struct:PDBrec::PDBrecRep
_rad	reduce_src/DotSph.h	/^   float _rad;            \/\/ sphere radius$/;"	m	class:DotSphRep
_rad	reduce_src/bkup/DotSph.h	/^   float _rad;            \/\/ sphere radius$/;"	m	class:DotSphRep
_radFuzz	reduce_src/DotSph.h	/^   float _radFuzz;    \/\/ fuzziness when comparing spheres$/;"	m	class:DotSphManager
_radFuzz	reduce_src/bkup/DotSph.h	/^   float _radFuzz;    \/\/ fuzziness when comparing spheres$/;"	m	class:DotSphManager
_radii	reduce_src/BumperPoint.h	/^      float   _radii;$/;"	m	struct:BumperPoint::BumperPointRep
_radii	reduce_src/bkup/BumperPoint.h	/^      float   _radii;$/;"	m	struct:BumperPoint::BumperPointRep
_recMods	reduce_src/PDBrec.h	/^      int         _recMods;  \/\/ adjustments to the record$/;"	m	struct:PDBrec::PDBrecRep
_recMods	reduce_src/bkup/PDBrec.h	/^      int         _recMods;  \/\/ adjustments to the record$/;"	m	struct:PDBrec::PDBrecRep
_refcnt	toolclasses/DisjointSets.h	/^   int *_refcnt;$/;"	m	class:DisjointSets
_rep	reduce_src/BumperPoint.h	/^   BumperPointRep* _rep;$/;"	m	class:BumperPoint
_rep	reduce_src/DotSph.h	/^	DotSphRep *_rep;$/;"	m	class:DotSph
_rep	reduce_src/ElementInfo.h	/^   ElementInfoRep *_rep;$/;"	m	class:ElementInfo
_rep	reduce_src/LocBlk.h	/^   Point3d _rep;$/;"	m	class:LocBlk
_rep	reduce_src/PDBrec.h	/^   PDBrecRep* _rep;$/;"	m	class:PDBrec
_rep	reduce_src/bkup/BumperPoint.h	/^   BumperPointRep* _rep;$/;"	m	class:BumperPoint
_rep	reduce_src/bkup/DotSph.h	/^	DotSphRep *_rep;$/;"	m	class:DotSph
_rep	reduce_src/bkup/ElementInfo.h	/^   ElementInfoRep *_rep;$/;"	m	class:ElementInfo
_rep	reduce_src/bkup/LocBlk.h	/^   Point3d _rep;$/;"	m	class:LocBlk
_rep	reduce_src/bkup/PDBrec.h	/^   PDBrecRep* _rep;$/;"	m	class:PDBrec
_resAtoms	reduce_src/FlipMemo.h	/^   std::map<std::string, PDBrec*> _resAtoms;$/;"	m	class:FlipMemo
_resAtoms	reduce_src/ResBlk.h	/^   std::multimap<std::string, PDBrec*> _resAtoms; \/\/ all of the atoms by atomname$/;"	m	class:ResBlk
_resAtoms	reduce_src/bkup/FlipMemo.h	/^   std::map<std::string, PDBrec*> _resAtoms;$/;"	m	class:FlipMemo
_resAtoms	reduce_src/bkup/ResBlk.h	/^   std::multimap<std::string, PDBrec*> _resAtoms; \/\/ all of the atoms by atomname$/;"	m	class:ResBlk
_resFlip	reduce_src/FlipMemo.cpp	/^const ResFlipInfo_t FlipMemo::_resFlip[FMnumFlipRes+1] = {$/;"	m	class:FlipMemo	file:
_resFlip	reduce_src/FlipMemo.h	/^   static const ResFlipInfo_t _resFlip[FMnumFlipRes+1];$/;"	m	class:FlipMemo
_resFlip	reduce_src/bkup/FlipMemo.cpp	/^const ResFlipInfo_t FlipMemo::_resFlip[FMnumFlipRes+1] = {$/;"	m	class:FlipMemo	file:
_resFlip	reduce_src/bkup/FlipMemo.h	/^   static const ResFlipInfo_t _resFlip[FMnumFlipRes+1];$/;"	m	class:FlipMemo
_resType	reduce_src/FlipMemo.h	/^   int         _resType;$/;"	m	class:FlipMemo
_resType	reduce_src/bkup/FlipMemo.h	/^   int         _resType;$/;"	m	class:FlipMemo
_rescache	reduce_src/CTab.h	/^   std::map<std::string, ResConn*>  _rescache;$/;"	m	class:CTab
_rescache	reduce_src/bkup/CTab.h	/^   std::map<std::string, ResConn*>  _rescache;$/;"	m	class:CTab
_resname	reduce_src/CTab.h	/^   const char*       _resname;      \/\/ name of this residue$/;"	m	class:ResConn
_resname	reduce_src/bkup/CTab.h	/^   const char*       _resname;      \/\/ name of this residue$/;"	m	class:ResConn
_restbl	reduce_src/StdResH.h	/^   std::map<std::string, StdResH*> _restbl;$/;"	m	class:HydrogenPlanTable
_restbl	reduce_src/bkup/StdResH.h	/^   std::map<std::string, StdResH*> _restbl;$/;"	m	class:HydrogenPlanTable
_rnum	reduce_src/BumperPoint.h	/^      int     _rnum;$/;"	m	struct:BumperPoint::BumperPointRep
_rnum	reduce_src/bkup/BumperPoint.h	/^      int     _rnum;$/;"	m	struct:BumperPoint::BumperPointRep
_rot	reduce_src/RotDonor.h	/^   std::list<PDBrec*> _rot;$/;"	m	class:RotDonor
_rot	reduce_src/RotMethyl.h	/^   std::list<PDBrec*> _rot;       \/\/ rotating hydrogen atoms$/;"	m	class:RotMethyl
_rot	reduce_src/bkup/RotDonor.h	/^   std::list<PDBrec*> _rot;$/;"	m	class:RotDonor
_rot	reduce_src/bkup/RotMethyl.h	/^   std::list<PDBrec*> _rot;       \/\/ rotating hydrogen atoms$/;"	m	class:RotMethyl
_safeS3ReductionBegun	reduce_src/MoveableNode.h	/^	bool _safeS3ReductionBegun;$/;"	m	class:NodeAndEdgeManager
_safeS3ReductionBegun	reduce_src/bkup/MoveableNode.h	/^	bool _safeS3ReductionBegun;$/;"	m	class:NodeAndEdgeManager
_scores	reduce_src/MoveableNode.h	/^	float * _scores;$/;"	m	class:Degree3Hyperedge
_scores	reduce_src/MoveableNode.h	/^	float * _scores;$/;"	m	class:Degree4Hyperedge
_scores	reduce_src/bkup/MoveableNode.h	/^	float * _scores;$/;"	m	class:Degree3Hyperedge
_scores	reduce_src/bkup/MoveableNode.h	/^	float * _scores;$/;"	m	class:Degree4Hyperedge
_secondNode	reduce_src/MoveableNode.h	/^	MoveableNode*    _secondNode;$/;"	m	class:EdgeBetweenMoveableNodes
_secondNode	reduce_src/bkup/MoveableNode.h	/^	MoveableNode*    _secondNode;$/;"	m	class:EdgeBetweenMoveableNodes
_secondNodeIndex	reduce_src/MoveableNode.h	/^	int			     _secondNodeIndex;$/;"	m	class:EdgeBetweenMoveableNodes
_secondNodeIndex	reduce_src/bkup/MoveableNode.h	/^	int			     _secondNodeIndex;$/;"	m	class:EdgeBetweenMoveableNodes
_secondNodeIndexDetStateFromCycleReduction	reduce_src/MoveableNode.h	/^	int									_secondNodeIndexDetStateFromCycleReduction;$/;"	m	class:MoveableNode
_secondNodeIndexDetStateFromCycleReduction	reduce_src/bkup/MoveableNode.h	/^	int									_secondNodeIndexDetStateFromCycleReduction;$/;"	m	class:MoveableNode
_secondNodeIndexForEdgeArray	reduce_src/MoveableNode.h	/^	std::vector<int> _secondNodeIndexForEdgeArray;$/;"	m	class:DummyNetworkDescriptorClass
_secondNodeIndexForEdgeArray	reduce_src/bkup/MoveableNode.h	/^	std::vector<int> _secondNodeIndexForEdgeArray;$/;"	m	class:DummyNetworkDescriptorClass
_showOrientScore	reduce_src/AtomPositions.h	/^   const bool                _showOrientScore;$/;"	m	class:AtomPositions
_showOrientScore	reduce_src/bkup/AtomPositions.h	/^   const bool                _showOrientScore;$/;"	m	class:AtomPositions
_singles	reduce_src/CliqueList.h	/^	std::list<MoverPtr>        _singles;$/;"	m	class:CliqueList
_singles	reduce_src/bkup/CliqueList.h	/^	std::list<MoverPtr>        _singles;$/;"	m	class:CliqueList
_size	toolclasses/DisjointSets.h	/^   int *_size;$/;"	m	class:DisjointSets
_stateEnabled	reduce_src/MoveableNode.h	/^	std::vector< std::vector< bool > > _stateEnabled;$/;"	m	class:DummyNetworkDescriptorClass
_stateEnabled	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< bool > > _stateEnabled;$/;"	m	class:DummyNetworkDescriptorClass
_sym_neighbor_list	reduce_src/AtomPositions.h	/^   NeighborList<PDBrec*> _sym_neighbor_list;$/;"	m	class:AtomPositions
_sym_neighbor_list	reduce_src/bkup/AtomPositions.h	/^   NeighborList<PDBrec*> _sym_neighbor_list;$/;"	m	class:AtomPositions
_theEBMNList	reduce_src/MoveableNode.h	/^	std::list<EdgeBetweenMoveableNodes* >	_theEBMNList;$/;"	m	class:NodeAndEdgeManager
_theEBMNList	reduce_src/bkup/MoveableNode.h	/^	std::list<EdgeBetweenMoveableNodes* >	_theEBMNList;$/;"	m	class:NodeAndEdgeManager
_theEScrMatrix	reduce_src/MoveableNode.h	/^	double**			_theEScrMatrix;$/;"	m	class:EdgeScoreMatrix
_theEScrMatrix	reduce_src/bkup/MoveableNode.h	/^	double**			_theEScrMatrix;$/;"	m	class:EdgeScoreMatrix
_theEdgeScoreMatrix	reduce_src/MoveableNode.h	/^	EdgeScoreMatrix* _theEdgeScoreMatrix;$/;"	m	class:EdgeBetweenMoveableNodes
_theEdgeScoreMatrix	reduce_src/bkup/MoveableNode.h	/^	EdgeScoreMatrix* _theEdgeScoreMatrix;$/;"	m	class:EdgeBetweenMoveableNodes
_theMNVector	reduce_src/MoveableNode.h	/^	std::vector<MoveableNode* >				_theMNVector;$/;"	m	class:NodeAndEdgeManager
_theMNVector	reduce_src/bkup/MoveableNode.h	/^	std::vector<MoveableNode* >				_theMNVector;$/;"	m	class:NodeAndEdgeManager
_theNSMatrix	reduce_src/MoveableNode.h	/^	NodeState**			_theNSMatrix;$/;"	m	class:OptimizedNodeStateMatrix
_theNSMatrix	reduce_src/MoveableNode.h	/^	NodeState***		_theNSMatrix;$/;"	m	class:OptimizedNodeStateMatrix3
_theNSMatrix	reduce_src/bkup/MoveableNode.h	/^	NodeState**			_theNSMatrix;$/;"	m	class:OptimizedNodeStateMatrix
_theNSMatrix	reduce_src/bkup/MoveableNode.h	/^	NodeState***		_theNSMatrix;$/;"	m	class:OptimizedNodeStateMatrix3
_theNSVector	reduce_src/MoveableNode.h	/^	std::vector<NodeState >	_theNSVector;$/;"	m	class:OptimizedNodeStateVector
_theNSVector	reduce_src/bkup/MoveableNode.h	/^	std::vector<NodeState >	_theNSVector;$/;"	m	class:OptimizedNodeStateVector
_theNScrVect	reduce_src/MoveableNode.h	/^	std::vector<double >		_theNScrVect;$/;"	m	class:NodeScoreVector
_theNScrVect	reduce_src/bkup/MoveableNode.h	/^	std::vector<double >		_theNScrVect;$/;"	m	class:NodeScoreVector
_theNaEManager	reduce_src/MoveableNode.cpp	/^NodeAndEdgeManager* NodeAndEdgeManager::_theNaEManager = NULL;$/;"	m	class:NodeAndEdgeManager	file:
_theNaEManager	reduce_src/MoveableNode.h	/^	static NodeAndEdgeManager*			_theNaEManager;$/;"	m	class:NodeAndEdgeManager
_theNaEManager	reduce_src/bkup/MoveableNode.cpp	/^NodeAndEdgeManager* NodeAndEdgeManager::_theNaEManager = NULL;$/;"	m	class:NodeAndEdgeManager	file:
_theNaEManager	reduce_src/bkup/MoveableNode.h	/^	static NodeAndEdgeManager*			_theNaEManager;$/;"	m	class:NodeAndEdgeManager
_theNodeScoreVect	reduce_src/MoveableNode.h	/^	NodeScoreVector*					_theNodeScoreVect;	$/;"	m	class:MoveableNode
_theNodeScoreVect	reduce_src/bkup/MoveableNode.h	/^	NodeScoreVector*					_theNodeScoreVect;	$/;"	m	class:MoveableNode
_theQueue	reduce_src/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes* QueueOfToBeEliminatedNodes::_theQueue = NULL;$/;"	m	class:QueueOfToBeEliminatedNodes	file:
_theQueue	reduce_src/MoveableNode.h	/^	static QueueOfToBeEliminatedNodes*	_theQueue;$/;"	m	class:QueueOfToBeEliminatedNodes
_theQueue	reduce_src/bkup/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes* QueueOfToBeEliminatedNodes::_theQueue = NULL;$/;"	m	class:QueueOfToBeEliminatedNodes	file:
_theQueue	reduce_src/bkup/MoveableNode.h	/^	static QueueOfToBeEliminatedNodes*	_theQueue;$/;"	m	class:QueueOfToBeEliminatedNodes
_timeLimit	reduce_src/MoveableNode.h	/^	double _timeLimit;$/;"	m	class:NodeAndEdgeManager
_timeLimit	reduce_src/bkup/MoveableNode.h	/^	double _timeLimit;$/;"	m	class:NodeAndEdgeManager
_timeLimitExists	reduce_src/MoveableNode.h	/^	bool _timeLimitExists;$/;"	m	class:NodeAndEdgeManager
_timeLimitExists	reduce_src/bkup/MoveableNode.h	/^	bool _timeLimitExists;$/;"	m	class:NodeAndEdgeManager
_total_state_combos	reduce_src/MoveableNode.h	/^	int _total_state_combos;$/;"	m	class:Degree3Hyperedge
_total_state_combos	reduce_src/MoveableNode.h	/^	int _total_state_combos;$/;"	m	class:Degree4Hyperedge
_total_state_combos	reduce_src/bkup/MoveableNode.h	/^	int _total_state_combos;$/;"	m	class:Degree3Hyperedge
_total_state_combos	reduce_src/bkup/MoveableNode.h	/^	int _total_state_combos;$/;"	m	class:Degree4Hyperedge
_type	reduce_src/AtomConn.h	/^   int         _type;  \/\/ connection type$/;"	m	class:atomPlacementPlan
_type	reduce_src/bkup/AtomConn.h	/^   int         _type;  \/\/ connection type$/;"	m	class:atomPlacementPlan
_u	toolclasses/Hdl.h	/^   UseCount _u;$/;"	m	class:Hdl
_unit_cell	reduce_src/bkup/neighborList.h	/^	cc::unit_cell _unit_cell;$/;"	m	class:NeighborList
_unit_cell	reduce_src/bkup/old_neighborList.h	/^	cctbx::uctbx::unit_cell _unit_cell;$/;"	m	class:NeighborList
_unit_cell	reduce_src/neighborList.h	/^	cc::unit_cell _unit_cell;$/;"	m	class:NeighborList
_unit_cell	reduce_src/old_neighborList.h	/^	cctbx::uctbx::unit_cell _unit_cell;$/;"	m	class:NeighborList
_unsafeS3ReductionBegun	reduce_src/MoveableNode.h	/^	bool _unsafeS3ReductionBegun;$/;"	m	class:NodeAndEdgeManager
_unsafeS3ReductionBegun	reduce_src/bkup/MoveableNode.h	/^	bool _unsafeS3ReductionBegun;$/;"	m	class:NodeAndEdgeManager
_use	toolclasses/Seq.h	/^   int _use;$/;"	m	class:Seq_item
_useOldNames	reduce_src/AtomPositions.h	/^   const bool                _useOldNames;$/;"	m	class:AtomPositions
_useOldNames	reduce_src/bkup/AtomPositions.h	/^   const bool                _useOldNames;$/;"	m	class:AtomPositions
_useXplorNames	reduce_src/AtomPositions.h	/^   const bool                _useXplorNames;$/;"	m	class:AtomPositions
_useXplorNames	reduce_src/bkup/AtomPositions.h	/^   const bool                _useXplorNames;$/;"	m	class:AtomPositions
_value	reduce_src/CTab.h	/^   int  _value;    \/\/ xtra info. (used to store table size)$/;"	m	class:FileLoc
_value	reduce_src/bkup/CTab.h	/^   int  _value;    \/\/ xtra info. (used to store table size)$/;"	m	class:FileLoc
_value	toolclasses/Dict.h	/^   T*	           _value;$/;"	m	class:DictLink
_value	toolclasses/MultiDict.h	/^   Seq<T>	    _value;$/;"	m	class:MultiLink
_vec	toolclasses/VectIter.h	/^   const Vector<T>& _vec;  \/\/ the Vector$/;"	m	class:VectIter
_vertexDegrees	reduce_src/MoveableNode.h	/^	std::vector< int > _vertexDegrees;$/;"	m	class:NodeAndEdgeManager
_vertexDegrees	reduce_src/bkup/MoveableNode.h	/^	std::vector< int > _vertexDegrees;$/;"	m	class:NodeAndEdgeManager
_verticesForDegree3Hyperedge	reduce_src/MoveableNode.h	/^	std::vector< std::vector< int > > _verticesForDegree3Hyperedge;$/;"	m	class:DummyNetworkDescriptorClass
_verticesForDegree3Hyperedge	reduce_src/bkup/MoveableNode.h	/^	std::vector< std::vector< int > > _verticesForDegree3Hyperedge;$/;"	m	class:DummyNetworkDescriptorClass
_wrkAtom	reduce_src/FlipMemo.h	/^   PDBrec  _wrkAtom[FMmaxAtomSlots+1]; \/\/ the atoms we will work with$/;"	m	class:FlipMemo
_wrkAtom	reduce_src/bkup/FlipMemo.h	/^   PDBrec  _wrkAtom[FMmaxAtomSlots+1]; \/\/ the atoms we will work with$/;"	m	class:FlipMemo
_x	toolclasses/Point3d.h	/^   Coord _x, _y, _z;$/;"	m	class:Point3d
_xyz	reduce_src/MoveableNode.h	/^	AtomPositions * _xyz;$/;"	m	class:DummyNetworkDescriptorClass
_xyz	reduce_src/MoveableNode.h	/^	AtomPositions * _xyz;$/;"	m	class:NodeAndEdgeManager
_xyz	reduce_src/bkup/MoveableNode.h	/^	AtomPositions * _xyz;$/;"	m	class:DummyNetworkDescriptorClass
_xyz	reduce_src/bkup/MoveableNode.h	/^	AtomPositions * _xyz;$/;"	m	class:NodeAndEdgeManager
_xyzBlocks	reduce_src/AtomPositions.h	/^   std::multimap<LocBlk, PDBrec*> _xyzBlocks;$/;"	m	class:AtomPositions
_xyzBlocks	reduce_src/bkup/AtomPositions.h	/^   std::multimap<LocBlk, PDBrec*> _xyzBlocks;$/;"	m	class:AtomPositions
_y	toolclasses/Point3d.h	/^   Coord _x, _y, _z;$/;"	m	class:Point3d
_z	toolclasses/Point3d.h	/^   Coord _x, _y, _z;$/;"	m	class:Point3d
a	libpdb/pdb++.h	/^		Real	a, b, c;$/;"	m	struct:PDB::Cryst1
a	reduce_src/bkup/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/bkup/reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/bkup/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/bkup/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/print_neighbors.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
a	reduce_src/test_reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
abs	toolclasses/utility.h	/^inline T abs(const T& x) {$/;"	f
add	toolclasses/Queue.h	/^   void add(T obj) { insertBefore(obj, List<T>::END); }$/;"	f	class:Queue
addConn	reduce_src/AtomConn.h	/^   void addConn(const std::string& c) { _neighbor.push_back(c); }$/;"	f	class:AtomConn
addConn	reduce_src/bkup/AtomConn.h	/^   void addConn(const std::string& c) { _neighbor.push_back(c); }$/;"	f	class:AtomConn
addDegree2Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree2Edge( int node1, int node2 )$/;"	f	class:GraphToHoldScores
addDegree2Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree2Edge( int node1, int node2 )$/;"	f	class:GraphToHoldScores
addDegree3Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree3Edge( int fn, int sn, int tn )$/;"	f	class:GraphToHoldScores
addDegree3Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree3Edge( int fn, int sn, int tn )$/;"	f	class:GraphToHoldScores
addDegree3Hyperedge	reduce_src/MoveableNode.cpp	/^void MoveableNode::addDegree3Hyperedge( Degree3Hyperedge * edge )$/;"	f	class:MoveableNode
addDegree3Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^void MoveableNode::addDegree3Hyperedge( Degree3Hyperedge * edge )$/;"	f	class:MoveableNode
addDegree4Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree4Edge( int fn, int sn, int tn, int fthn )$/;"	f	class:GraphToHoldScores
addDegree4Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegree4Edge( int fn, int sn, int tn, int fthn )$/;"	f	class:GraphToHoldScores
addDegree4Hyperedge	reduce_src/MoveableNode.cpp	/^void MoveableNode::addDegree4Hyperedge( Degree4Hyperedge * edge )$/;"	f	class:MoveableNode
addDegree4Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^void MoveableNode::addDegree4Hyperedge( Degree4Hyperedge * edge )$/;"	f	class:MoveableNode
addDegreeThreeEdges	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegreeThreeEdges()$/;"	f	class:GraphToHoldScores
addDegreeThreeEdges	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegreeThreeEdges()$/;"	f	class:GraphToHoldScores
addDegreeTwoEdges	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegreeTwoEdges()$/;"	f	class:GraphToHoldScores
addDegreeTwoEdges	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::addDegreeTwoEdges()$/;"	f	class:GraphToHoldScores
addDots	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::addDots( DotsForAtom const & other )$/;"	f	class:DotsForAtom
addDots	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::addDots( DotsForAtom const & other )$/;"	f	class:DotsForAtom
addEdge	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::addEdge(  DegreeTwoEdge_ths * edge )$/;"	f	class:Vertex_ths
addEdge	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::addEdge( DegreeFourEdge_ths * edge )$/;"	f	class:Vertex_ths
addEdge	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::addEdge( DegreeThreeEdge_ths * edge)$/;"	f	class:Vertex_ths
addEdge	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::addEdge(EdgeBetweenMoveableNodes* newEdge) {_edgeList.push_back(newEdge); return;}$/;"	f	class:MoveableNode
addEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::addEdge(  DegreeTwoEdge_ths * edge )$/;"	f	class:Vertex_ths
addEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::addEdge( DegreeFourEdge_ths * edge )$/;"	f	class:Vertex_ths
addEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::addEdge( DegreeThreeEdge_ths * edge)$/;"	f	class:Vertex_ths
addEdge	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::addEdge(EdgeBetweenMoveableNodes* newEdge) {_edgeList.push_back(newEdge); return;}$/;"	f	class:MoveableNode
addEdgeScore	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::addEdgeScore($/;"	f	class:EdgeBetweenMoveableNodes
addEdgeScore	reduce_src/MoveableNode.cpp	/^void   EdgeScoreMatrix::addEdgeScore(NodeState firstNodeState, NodeState secondNodeState, double theScore)$/;"	f	class:EdgeScoreMatrix
addEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::addEdgeScore($/;"	f	class:EdgeBetweenMoveableNodes
addEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeScoreMatrix::addEdgeScore(NodeState firstNodeState, NodeState secondNodeState, double theScore)$/;"	f	class:EdgeScoreMatrix
addLink	reduce_src/Mover.h	/^   void addLink(const std::string &s, const MoverPtr lnk) {$/;"	f	class:Mover
addLink	reduce_src/bkup/Mover.h	/^   void addLink(const std::string &s, const MoverPtr lnk) {$/;"	f	class:Mover
addNewEdge	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes* NodeAndEdgeManager::addNewEdge(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
addNewEdge	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes* NodeAndEdgeManager::addNewEdge(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
addNextRec	reduce_src/ResBlk.h	/^   void addNextRec(PDBrec* rec) {$/;"	f	class:ResBlk
addNextRec	reduce_src/bkup/ResBlk.h	/^   void addNextRec(PDBrec* rec) {$/;"	f	class:ResBlk
addNodeIndexForCycleReduction	reduce_src/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForCycleReduction(int nodeIndex)$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForCycleReduction	reduce_src/bkup/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForCycleReduction(int nodeIndex)$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForSafeS3Reduction	reduce_src/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForSafeS3Reduction( int nodeIndex )$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForSafeS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForSafeS3Reduction( int nodeIndex )$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForTreeReduction	reduce_src/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForTreeReduction(int nodeIndex)$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForTreeReduction	reduce_src/bkup/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForTreeReduction(int nodeIndex)$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForUnsafeS3Reduction	reduce_src/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForUnsafeS3Reduction( int nodeIndex )$/;"	f	class:QueueOfToBeEliminatedNodes
addNodeIndexForUnsafeS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^void QueueOfToBeEliminatedNodes::addNodeIndexForUnsafeS3Reduction( int nodeIndex )$/;"	f	class:QueueOfToBeEliminatedNodes
addPlan	reduce_src/StdResH.cpp	/^void StdResH::addPlan(int type, const char* elem, const char *hname,$/;"	f	class:StdResH
addPlan	reduce_src/bkup/StdResH.cpp	/^void StdResH::addPlan(int type, const char* elem, const char *hname,$/;"	f	class:StdResH
addPlan_args	reduce_src/StdResH.h	/^   struct addPlan_args {$/;"	s	class:HydrogenPlanTable
addPlan_args	reduce_src/bkup/StdResH.h	/^   struct addPlan_args {$/;"	s	class:HydrogenPlanTable
addPrevRec	reduce_src/ResBlk.h	/^   void addPrevRec(PDBrec* rec) {$/;"	f	class:ResBlk
addPrevRec	reduce_src/bkup/ResBlk.h	/^   void addPrevRec(PDBrec* rec) {$/;"	f	class:ResBlk
addToHead	toolclasses/List.cpp	/^DblLnkLstNode<T>* List<T>::addToHead(DblLnkLstNode<T> **toList, DblLnkLstNode<T> **fromList) {$/;"	f	class:List
addToNodeScore	reduce_src/MoveableNode.cpp	/^void   NodeScoreVector::addToNodeScore(NodeState ownersState, double theScore)$/;"	f	class:NodeScoreVector
addToNodeScore	reduce_src/bkup/MoveableNode.cpp	/^void   NodeScoreVector::addToNodeScore(NodeState ownersState, double theScore)$/;"	f	class:NodeScoreVector
addToScoreGivenSetVertexOrdering	reduce_src/MoveableNode.cpp	/^void Degree3Hyperedge::addToScoreGivenSetVertexOrdering( $/;"	f	class:Degree3Hyperedge
addToScoreGivenSetVertexOrdering	reduce_src/bkup/MoveableNode.cpp	/^void Degree3Hyperedge::addToScoreGivenSetVertexOrdering( $/;"	f	class:Degree3Hyperedge
afterLast	toolclasses/Stringclass.cpp	/^Stringclass Stringclass::afterLast(const char ch) const {$/;"	f	class:Stringclass
aggrgt	libpdb/pdb++.h	/^		Aggrgt	aggrgt;$/;"	m	union:PDB::__anon5
agrdes	libpdb/pdb++.h	/^		Agrdes	agrdes;$/;"	m	union:PDB::__anon5
allocateConnectivityTable	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::allocateConnectivityTable()$/;"	f	class:GraphToHoldScores
allocateConnectivityTable	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::allocateConnectivityTable()$/;"	f	class:GraphToHoldScores
alpha	libpdb/pdb++.h	/^		Real	alpha, beta, gamma;$/;"	m	struct:PDB::Cryst1
alpha	reduce_src/bkup/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/bkup/reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/bkup/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/bkup/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/print_neighbors.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alpha	reduce_src/test_reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
alt	reduce_src/PDBrec.h	/^   char alt()             const { return _rep->_r.atom.altLoc;             }$/;"	f	class:PDBrec
alt	reduce_src/PDBrec.h	/^   void alt(char a)                { _rep->_r.atom.altLoc = a;         }$/;"	f	class:PDBrec
alt	reduce_src/bkup/PDBrec.h	/^   char alt()             const { return _rep->_r.atom.altLoc;             }$/;"	f	class:PDBrec
alt	reduce_src/bkup/PDBrec.h	/^   void alt(char a)                { _rep->_r.atom.altLoc = a;         }$/;"	f	class:PDBrec
altCodes	reduce_src/FlipMemo.cpp	/^void FlipMemo::altCodes(const ResBlk& rblk,	bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:FlipMemo
altCodes	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::altCodes(const ResBlk& rblk,	bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:FlipMemo
altLoc	libpdb/pdb++.h	/^		char	altLoc;$/;"	m	struct:PDB::Anisou
altLoc	libpdb/pdb++.h	/^		char	altLoc;$/;"	m	struct:PDB::Atom
analyzeRes	reduce_src/bkup/reduce.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/bkup/sym_add.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/bkup/sym_print.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/print_neighbors.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/reduce.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/sym_add.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/sym_print.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
analyzeRes	reduce_src/test_reduce.cpp	/^void analyzeRes(CTab& hetdatabase, ResBlk* pb, ResBlk* cb, ResBlk* nb,$/;"	f
aname	reduce_src/FlipMemo.h	/^   const char* aname;$/;"	m	struct:ProtonLoc_t
aname	reduce_src/bkup/FlipMemo.h	/^   const char* aname;$/;"	m	struct:ProtonLoc_t
ang	reduce_src/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
ang	reduce_src/bkup/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
ang1	reduce_src/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
ang1	reduce_src/bkup/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
ang2	reduce_src/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
ang2	reduce_src/bkup/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
angle	libpdb/pdb++.h	/^		Real	angle;$/;"	m	struct:PDB::UserAngle
angle	reduce_src/RotDonor.h	/^   double angle() const { return _angle; }$/;"	f	class:RotDonor
angle	reduce_src/RotDonor.h	/^   void angle(double val) { _angle = clampAngle(val); }$/;"	f	class:RotDonor
angle	reduce_src/RotMethyl.h	/^   double angle() const { return _angle; }$/;"	f	class:RotMethyl
angle	reduce_src/RotMethyl.h	/^   void angle(double val) { _angle = clampAngle(val); }$/;"	f	class:RotMethyl
angle	reduce_src/bkup/RotDonor.h	/^   double angle() const { return _angle; }$/;"	f	class:RotDonor
angle	reduce_src/bkup/RotDonor.h	/^   void angle(double val) { _angle = clampAngle(val); }$/;"	f	class:RotDonor
angle	reduce_src/bkup/RotMethyl.h	/^   double angle() const { return _angle; }$/;"	f	class:RotMethyl
angle	reduce_src/bkup/RotMethyl.h	/^   void angle(double val) { _angle = clampAngle(val); }$/;"	f	class:RotMethyl
angle	toolclasses/Point3d.cpp	/^Coord angle(const Point3d& p1, const Point3d& p2, const Point3d& p3) {$/;"	f
anisou	libpdb/pdb++.h	/^		Anisou	anisou;$/;"	m	union:PDB::__anon5
annotation	libpdb/pdb++.h	/^		char	annotation[11];  \/\/ *annotaton* is non-standard$/;"	m	struct:PDB::Atom
annotation	libpdb/pdb++.h	/^		char	annotation[11]; \/\/ *annotaton* is non-standard$/;"	m	struct:PDB::Anisou
annotation	reduce_src/PDBrec.h	/^   const char*annotation() const{ return _rep->_r.atom.annotation;         }$/;"	f	class:PDBrec
annotation	reduce_src/PDBrec.h	/^   void  annotation(const char* a) {$/;"	f	class:PDBrec
annotation	reduce_src/bkup/PDBrec.h	/^   const char*annotation() const{ return _rep->_r.atom.annotation;         }$/;"	f	class:PDBrec
annotation	reduce_src/bkup/PDBrec.h	/^   void  annotation(const char* a) {$/;"	f	class:PDBrec
annularDots	reduce_src/Mover.cpp	/^bool annularDots(const Point3d& dot, const PDBrec& src, const PDBrec& targ, Point3d targ_loc, float probeRadius) {$/;"	f
annularDots	reduce_src/bkup/Mover.cpp	/^bool annularDots(const Point3d& dot, const PDBrec& src, const PDBrec& targ, Point3d targ_loc, float probeRadius) {$/;"	f
anum	reduce_src/BumperPoint.h	/^   int     anum() const { return _rep->_anum; };$/;"	f	class:BumperPoint
anum	reduce_src/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
anum	reduce_src/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
anum	reduce_src/bkup/BumperPoint.h	/^   int     anum() const { return _rep->_anum; };$/;"	f	class:BumperPoint
anum	reduce_src/bkup/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
anum	reduce_src/bkup/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
anyDotsShared	reduce_src/GraphToHoldScores.cpp	/^bool DotsForAtom::anyDotsShared( DotsForAtom const & other ) const$/;"	f	class:DotsForAtom
anyDotsShared	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DotsForAtom::anyDotsShared( DotsForAtom const & other ) const$/;"	f	class:DotsForAtom
anyMoverOverlap	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::anyMoverOverlap( Vertex_ths * other ) const$/;"	f	class:Vertex_ths
anyMoverOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::anyMoverOverlap( Vertex_ths * other ) const$/;"	f	class:Vertex_ths
anyNodeWithAllStatesDisabled	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::anyNodeWithAllStatesDisabled() const$/;"	f	class:GraphToHoldScores
anyNodeWithAllStatesDisabled	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::anyNodeWithAllStatesDisabled() const$/;"	f	class:GraphToHoldScores
any_high_order_overlap_	reduce_src/GraphToHoldScores.h	/^	bool any_high_order_overlap_;$/;"	m	class:Vertex_ths
any_high_order_overlap_	reduce_src/bkup/GraphToHoldScores.h	/^	bool any_high_order_overlap_;$/;"	m	class:Vertex_ths
append	toolclasses/List.cpp	/^void List<T>::append(const T& obj){$/;"	f	class:List
applySerialNum	libpdb/pdb++.h	/^		int	applySerialNum;$/;"	m	struct:PDB::Trnsfm
array	toolclasses/Stringclass.h	/^   const char *array() const { return rep->rep; }$/;"	f	class:Stringclass
asLowercase	toolclasses/Stringclass.cpp	/^Stringclass Stringclass::asLowercase() {$/;"	f	class:Stringclass
asUppercase	toolclasses/Stringclass.cpp	/^Stringclass Stringclass::asUppercase() {$/;"	f	class:Stringclass
asfloat	toolclasses/Stringclass.cpp	/^float Stringclass::asfloat(const char *fmt) const {$/;"	f	class:Stringclass
asint	toolclasses/Stringclass.cpp	/^int Stringclass::asint(const char *fmt) const {$/;"	f	class:Stringclass
assignState	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::assignState( int state )$/;"	f	class:Vertex_ths
assignState	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::assignState( int state )$/;"	f	class:Vertex_ths
assignedState_	reduce_src/GraphToHoldScores.h	/^	int assignedState_; \/\/testing purposes only$/;"	m	class:Vertex_ths
assignedState_	reduce_src/bkup/GraphToHoldScores.h	/^	int assignedState_; \/\/testing purposes only$/;"	m	class:Vertex_ths
atno	reduce_src/ElementInfo.h	/^   int   atno()     const { return _rep->_atno; }$/;"	f	class:ElementInfo
atno	reduce_src/bkup/ElementInfo.h	/^   int   atno()     const { return _rep->_atno; }$/;"	f	class:ElementInfo
atom	libpdb/pdb++.h	/^		Atom	atom;$/;"	m	union:PDB::__anon5
atom0	libpdb/pdb++.h	/^		int	atom0, atom1, atom2, atom3;$/;"	m	struct:PDB::UserAngle
atom0	libpdb/pdb++.h	/^		int	atom0, atom1;$/;"	m	struct:PDB::UserChain
atom0	libpdb/pdb++.h	/^		int	atom0, atom1;$/;"	m	struct:PDB::UserDistance
atom1	libpdb/pdb++.h	/^		int	atom0, atom1, atom2, atom3;$/;"	m	struct:PDB::UserAngle
atom1	libpdb/pdb++.h	/^		int	atom0, atom1;$/;"	m	struct:PDB::UserChain
atom1	libpdb/pdb++.h	/^		int	atom0, atom1;$/;"	m	struct:PDB::UserDistance
atom2	libpdb/pdb++.h	/^		int	atom0, atom1, atom2, atom3;$/;"	m	struct:PDB::UserAngle
atom3	libpdb/pdb++.h	/^		int	atom0, atom1, atom2, atom3;$/;"	m	struct:PDB::UserAngle
atomHasAttrib	reduce_src/StdResH.h	/^   bool atomHasAttrib(const std::string& resName, const std::string& atomName, int attr) const {$/;"	f	class:StdResXtraInfo
atomHasAttrib	reduce_src/bkup/StdResH.h	/^   bool atomHasAttrib(const std::string& resName, const std::string& atomName, int attr) const {$/;"	f	class:StdResXtraInfo
atomHasFourWay_	reduce_src/GraphToHoldScores.h	/^	std::vector< bool > atomHasFourWay_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atomHasFourWay_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< bool > atomHasFourWay_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atomHasThreeWay_	reduce_src/GraphToHoldScores.h	/^	std::vector< bool > atomHasThreeWay_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
atomHasThreeWay_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< bool > atomHasThreeWay_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
atomIt	reduce_src/ResBlk.h	/^   std::multimap<std::string, PDBrec*> atomIt() const {$/;"	f	class:ResBlk
atomIt	reduce_src/bkup/ResBlk.h	/^   std::multimap<std::string, PDBrec*> atomIt() const {$/;"	f	class:ResBlk
atomName	reduce_src/ElementInfo.h	/^   char* atomName() const { return _rep->_name; }$/;"	f	class:ElementInfo
atomName	reduce_src/bkup/ElementInfo.h	/^   char* atomName() const { return _rep->_name; }$/;"	f	class:ElementInfo
atomNameModified	reduce_src/PDBrec.h	/^   bool atomNameModified() const { return _rep->_recMods & NameModifiedFlag; }$/;"	f	class:PDBrec
atomNameModified	reduce_src/bkup/PDBrec.h	/^   bool atomNameModified() const { return _rep->_recMods & NameModifiedFlag; }$/;"	f	class:PDBrec
atomPlacementPlan	reduce_src/AtomConn.cpp	/^atomPlacementPlan::atomPlacementPlan(const atomPlacementPlan& a)$/;"	f	class:atomPlacementPlan
atomPlacementPlan	reduce_src/AtomConn.h	/^   atomPlacementPlan(int t, ElementInfo& e, const AtomConn &c,$/;"	f	class:atomPlacementPlan
atomPlacementPlan	reduce_src/AtomConn.h	/^class atomPlacementPlan : public AtomConn {$/;"	c
atomPlacementPlan	reduce_src/bkup/AtomConn.cpp	/^atomPlacementPlan::atomPlacementPlan(const atomPlacementPlan& a)$/;"	f	class:atomPlacementPlan
atomPlacementPlan	reduce_src/bkup/AtomConn.h	/^   atomPlacementPlan(int t, ElementInfo& e, const AtomConn &c,$/;"	f	class:atomPlacementPlan
atomPlacementPlan	reduce_src/bkup/AtomConn.h	/^class atomPlacementPlan : public AtomConn {$/;"	c
atomScore	reduce_src/AtomPositions.cpp	/^double AtomPositions::atomScore(const PDBrec& a, const Point3d& p,$/;"	f	class:AtomPositions
atomScore	reduce_src/bkup/AtomPositions.cpp	/^double AtomPositions::atomScore(const PDBrec& a, const Point3d& p,$/;"	f	class:AtomPositions
atom_in_high_order_overlap_	reduce_src/GraphToHoldScores.h	/^	std::vector< bool > atom_in_high_order_overlap_;$/;"	m	class:Vertex_ths
atom_in_high_order_overlap_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< bool > atom_in_high_order_overlap_;$/;"	m	class:Vertex_ths
atomname	reduce_src/PDBrec.h	/^   const char* atomname() const { return _rep->_r.atom.name;               }$/;"	f	class:PDBrec
atomname	reduce_src/PDBrec.h	/^   void atomname(const char* s)    {$/;"	f	class:PDBrec
atomname	reduce_src/bkup/PDBrec.h	/^   const char* atomname() const { return _rep->_r.atom.name;               }$/;"	f	class:PDBrec
atomname	reduce_src/bkup/PDBrec.h	/^   void atomname(const char* s)    {$/;"	f	class:PDBrec
atomno	reduce_src/PDBrec.h	/^   int  atomno()          const { $/;"	f	class:PDBrec
atomno	reduce_src/PDBrec.h	/^   void atomno(int n)              { $/;"	f	class:PDBrec
atomno	reduce_src/bkup/PDBrec.h	/^   int  atomno()          const { $/;"	f	class:PDBrec
atomno	reduce_src/bkup/PDBrec.h	/^   void atomno(int n)              { $/;"	f	class:PDBrec
atoms	libpdb/pdb++.h	/^		}		atoms[2];$/;"	m	struct:PDB::Sheet	typeref:struct:PDB::Sheet::__anon3
atoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_;$/;"	m	class:Vertex_ths
atoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
atoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
atoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_;$/;"	m	class:Vertex_ths
atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< AtomDescr > atoms_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atoms_in_high_order_overlap_ptr_	reduce_src/AtomPositions.h	/^	std::list< AtomDescr > * atoms_in_high_order_overlap_ptr_;$/;"	m	class:AtomPositions
atoms_in_high_order_overlap_ptr_	reduce_src/bkup/AtomPositions.h	/^	std::list< AtomDescr > * atoms_in_high_order_overlap_ptr_;$/;"	m	class:AtomPositions
atoms_to_score_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, std::vector< AtomDescr > > >  atoms_to_score_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atoms_to_score_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, std::vector< AtomDescr > > >  atoms_to_score_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
atoms_to_score_ptr_	reduce_src/AtomPositions.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > * atoms_to_score_ptr_;$/;"	m	class:AtomPositions
atoms_to_score_ptr_	reduce_src/bkup/AtomPositions.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > * atoms_to_score_ptr_;$/;"	m	class:AtomPositions
author	libpdb/pdb++.h	/^		Author	author;$/;"	m	union:PDB::__anon5
b	libpdb/pdb++.h	/^		Real	a, b, c;$/;"	m	struct:PDB::Cryst1
b	reduce_src/bkup/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/bkup/reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/bkup/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/bkup/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/print_neighbors.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b	reduce_src/test_reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
b1	reduce_src/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
b1	reduce_src/bkup/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
b2	reduce_src/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
b2	reduce_src/bkup/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
b3	reduce_src/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
b3	reduce_src/bkup/FlipMemo.h	/^   int anum, b1, b2, b3;$/;"	m	struct:BondLimits_t
basicChargeState	reduce_src/ElementInfo.cpp	/^int basicChargeState(const char* atomname, const char* resname,$/;"	f
basicChargeState	reduce_src/bkup/ElementInfo.cpp	/^int basicChargeState(const char* atomname, const char* resname,$/;"	f
beNotifiedDependencyEliminated	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::beNotifiedDependencyEliminated(int i)$/;"	f	class:MoveableNode
beNotifiedDependencyEliminated	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::beNotifiedDependencyEliminated(int i)$/;"	f	class:MoveableNode
begin	toolclasses/ListIter.h	/^   void begin() { _node = _list._first; }$/;"	f	class:ListIter
begin	toolclasses/VectIter.h	/^   void begin() { _elem = 0; }$/;"	f	class:VectIter
bestHasBadBump	reduce_src/Mover.h	/^   bool bestHasBadBump() const { return _bestHasBadBump; }$/;"	f	class:Mover
bestHasBadBump	reduce_src/bkup/Mover.h	/^   bool bestHasBadBump() const { return _bestHasBadBump; }$/;"	f	class:Mover
bestOrientation	reduce_src/Mover.h	/^   int bestOrientation(SearchStrategy ss=Mover::LOW_RES) const {$/;"	f	class:Mover
bestOrientation	reduce_src/bkup/Mover.h	/^   int bestOrientation(SearchStrategy ss=Mover::LOW_RES) const {$/;"	f	class:Mover
bestScore	reduce_src/Mover.h	/^   double   bestScore() const { return _bestScore; }$/;"	f	class:Mover
bestScore	reduce_src/bkup/Mover.h	/^   double   bestScore() const { return _bestScore; }$/;"	f	class:Mover
beta	libpdb/pdb++.h	/^		Real	alpha, beta, gamma;$/;"	m	struct:PDB::Cryst1
beta	reduce_src/bkup/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/bkup/reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/bkup/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/bkup/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/print_neighbors.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
beta	reduce_src/test_reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
betterThan	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::betterThan(double first, double second) {return (first > second);} \/\/ Semantics of "optimal" localized to the NaEManager.$/;"	f	class:NodeAndEdgeManager
betterThan	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::betterThan(double first, double second) {return (first > second);} \/\/ Semantics of "optimal" localized to the NaEManager.$/;"	f	class:NodeAndEdgeManager
bondedList	reduce_src/Mover.cpp	/^void bondedList(PDBrec *a, std::list< std::pair<PDBrec*, Point3d> >& nearby, int nbnds,$/;"	f
bondedList	reduce_src/bkup/Mover.cpp	/^void bondedList(PDBrec *a, std::list< std::pair<PDBrec*, Point3d> >& nearby, int nbnds,$/;"	f
bonds	libpdb/pdb++.h	/^		}	bonds[2];$/;"	m	struct:PDB::Conect	typeref:struct:PDB::Conect::__anon2
bool	libpdb/pdb++.h	/^typedef int bool;$/;"	t
bool	toolclasses/Hdl.h	/^typedef int bool;$/;"	t
bool	toolclasses/Iter.h	/^typedef int bool;$/;"	t
bool	toolclasses/List.h	/^typedef int bool;$/;"	t
bool	toolclasses/ListIter.h	/^typedef int bool;$/;"	t
bool	toolclasses/Seq.h	/^typedef int bool;$/;"	t
bool	toolclasses/Stringclass.h	/^typedef int bool;$/;"	t
bool	toolclasses/UseCount.h	/^typedef int bool;$/;"	t
bool	toolclasses/VectIter.h	/^typedef int bool;$/;"	t
bool	toolclasses/utility.h	/^typedef int bool;$/;"	t
boot	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::boot($/;"	f	class:Vertex_ths
boot	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::boot($/;"	f	class:Vertex_ths
bottom	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
bruteForceIrreducibleSubgraph	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::bruteForceIrreducibleSubgraph()$/;"	f	class:NodeAndEdgeManager
bruteForceIrreducibleSubgraph	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::bruteForceIrreducibleSubgraph()$/;"	f	class:NodeAndEdgeManager
bruteForceOriginalGraph	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::bruteForceOriginalGraph()$/;"	f	class:NodeAndEdgeManager
bruteForceOriginalGraph	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::bruteForceOriginalGraph()$/;"	f	class:NodeAndEdgeManager
build	reduce_src/DotSph.cpp	/^int DotSphRep::build(float radius, float density) {$/;"	f	class:DotSphRep
build	reduce_src/DotSph.h	/^   int build(float rad, float dens) { \/\/ forget old dots and rebuild$/;"	f	class:DotSph
build	reduce_src/bkup/DotSph.cpp	/^int DotSphRep::build(float radius, float density) {$/;"	f	class:DotSphRep
build	reduce_src/bkup/DotSph.h	/^   int build(float rad, float dens) { \/\/ forget old dots and rebuild$/;"	f	class:DotSph
buildArray	toolclasses/Vector.cpp	/^void Vector<T>::buildArray(int n) {$/;"	f	class:Vector
bumpsThisAngle	reduce_src/RotDonor.cpp	/^double RotDonor::bumpsThisAngle(AtomPositions &xyz, DotSphManager& dotBucket) {$/;"	f	class:RotDonor
bumpsThisAngle	reduce_src/bkup/RotDonor.cpp	/^double RotDonor::bumpsThisAngle(AtomPositions &xyz, DotSphManager& dotBucket) {$/;"	f	class:RotDonor
byteCmp	libpdb/pdb++.cpp	/^PDB::byteCmp(const PDB &l, const PDB &r)$/;"	f	class:PDB
c	libpdb/pdb++.h	/^		Real	a, b, c;$/;"	m	struct:PDB::Cryst1
c	reduce_src/bkup/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/bkup/reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/bkup/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/bkup/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/new_reduce.cpp	/^	double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/print_neighbors.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/sym_add.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/sym_print.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c	reduce_src/test_reduce.cpp	/^        double    a, b, c;$/;"	m	struct:Cryst1	file:
c1	reduce_src/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c1	reduce_src/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c1	reduce_src/bkup/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c1	reduce_src/bkup/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c2	reduce_src/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c2	reduce_src/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c2	reduce_src/bkup/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c2	reduce_src/bkup/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c3	reduce_src/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c3	reduce_src/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c3	reduce_src/bkup/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
c3	reduce_src/bkup/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c4	reduce_src/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
c4	reduce_src/bkup/StdResH.h	/^     const char *c1; const char *c2; const char *c3; const char *c4;$/;"	m	struct:HydrogenPlanTable::addPlan_args
calcLoc	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::calcLoc(int locType,$/;"	f	class:atomPlacementPlan
calcLoc	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::calcLoc(int locType,$/;"	f	class:atomPlacementPlan
canFlip	reduce_src/FlipMemo.h	/^   virtual bool canFlip() const { return TRUE; }$/;"	f	class:FlipMemo
canFlip	reduce_src/RotDonor.h	/^   virtual bool canFlip() const { return FALSE; }$/;"	f	class:RotDonor
canFlip	reduce_src/RotMethyl.h	/^   virtual bool canFlip() const { return FALSE; }$/;"	f	class:RotMethyl
canFlip	reduce_src/bkup/FlipMemo.h	/^   virtual bool canFlip() const { return TRUE; }$/;"	f	class:FlipMemo
canFlip	reduce_src/bkup/RotDonor.h	/^   virtual bool canFlip() const { return FALSE; }$/;"	f	class:RotDonor
canFlip	reduce_src/bkup/RotMethyl.h	/^   virtual bool canFlip() const { return FALSE; }$/;"	f	class:RotMethyl
canRotate	reduce_src/FlipMemo.h	/^   virtual bool canRotate() const { return FALSE; }$/;"	f	class:FlipMemo
canRotate	reduce_src/RotDonor.h	/^   virtual bool canRotate() const { return TRUE; }$/;"	f	class:RotDonor
canRotate	reduce_src/RotMethyl.h	/^   virtual bool canRotate() const { return TRUE; }$/;"	f	class:RotMethyl
canRotate	reduce_src/bkup/FlipMemo.h	/^   virtual bool canRotate() const { return FALSE; }$/;"	f	class:FlipMemo
canRotate	reduce_src/bkup/RotDonor.h	/^   virtual bool canRotate() const { return TRUE; }$/;"	f	class:RotDonor
canRotate	reduce_src/bkup/RotMethyl.h	/^   virtual bool canRotate() const { return TRUE; }$/;"	f	class:RotMethyl
cascadeScoringInfo	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::cascadeScoringInfo()$/;"	f	class:GraphToHoldScores
cascadeScoringInfo	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::cascadeScoringInfo()$/;"	f	class:GraphToHoldScores
cc	reduce_src/bkup/findNeighbors.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/bkup/find_distances.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/bkup/find_distances_new.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/bkup/neighborList.h	/^namespace cc {$/;"	n
cc	reduce_src/bkup/old_neighborList.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/findNeighbors.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/find_distances.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/find_distances_new.cpp	/^namespace cc {$/;"	n	file:
cc	reduce_src/neighborList.h	/^namespace cc {$/;"	n
cc	reduce_src/old_neighborList.cpp	/^namespace cc {$/;"	n	file:
chain	reduce_src/PDBrec.h	/^   const char* chain()    const { return _rep->_r.atom.residue.chainId;    }$/;"	f	class:PDBrec
chain	reduce_src/bkup/PDBrec.h	/^   const char* chain()    const { return _rep->_r.atom.residue.chainId;    }$/;"	f	class:PDBrec
chainId	libpdb/pdb++.h	/^		char	   chainId[3];$/;"	m	struct:PDB::Residue
chainId	libpdb/pdb++.h	/^		char	chainId[3];$/;"	m	struct:PDB::Seqres
charge	libpdb/pdb++.h	/^		char	charge[3];$/;"	m	struct:PDB::Anisou
charge	libpdb/pdb++.h	/^		char	charge[3];$/;"	m	struct:PDB::Atom
chargeLabel	reduce_src/PDBrec.h	/^   const char*chargeLabel()const{ return _rep->_r.atom.charge;             }$/;"	f	class:PDBrec
chargeLabel	reduce_src/PDBrec.h	/^   void chargeLabel(const char* c) {$/;"	f	class:PDBrec
chargeLabel	reduce_src/bkup/PDBrec.h	/^   const char*chargeLabel()const{ return _rep->_r.atom.charge;             }$/;"	f	class:PDBrec
chargeLabel	reduce_src/bkup/PDBrec.h	/^   void chargeLabel(const char* c) {$/;"	f	class:PDBrec
chars	libpdb/pdb_chars.cpp	/^PDB::chars(void) const$/;"	f	class:PDB
chunk	reduce_src/LocBlk.h	/^   static void chunk(Point3d& r, const Point3d& p) {$/;"	f	class:LocBlk
chunk	reduce_src/bkup/LocBlk.h	/^   static void chunk(Point3d& r, const Point3d& p) {$/;"	f	class:LocBlk
chunksz	reduce_src/LocBlk.h	/^   static Coord chunksz(Coord c) { return c\/LocBlkGrain; }$/;"	f	class:LocBlk
chunksz	reduce_src/bkup/LocBlk.h	/^   static Coord chunksz(Coord c) { return c\/LocBlkGrain; }$/;"	f	class:LocBlk
clampAngle	toolclasses/utility.cpp	/^double clampAngle(double a, int min) {$/;"	f
classification	libpdb/pdb++.h	/^		char	classification[41];$/;"	m	struct:PDB::Header
clear	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::clear()$/;"	f	class:NodeAndEdgeManager
clear	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::clear()$/;"	f	class:NodeAndEdgeManager
cliques	reduce_src/CliqueList.h	/^   const std::list< std::list<MoverPtr> >& cliques() { return _cliques; }$/;"	f	class:CliqueList
cliques	reduce_src/bkup/CliqueList.h	/^   const std::list< std::list<MoverPtr> >& cliques() { return _cliques; }$/;"	f	class:CliqueList
clone	reduce_src/PDBrec.cpp	/^void PDBrec::clone(PDBrec* p, bool setmark) {$/;"	f	class:PDBrec
clone	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::clone(PDBrec* p, bool setmark) {$/;"	f	class:PDBrec
clone	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::clone(PDBrec* p, bool setmark) {$/;"	f	class:PDBrec
clone	reduce_src/test_PDBrec.cpp	/^void PDBrec::clone(PDBrec* p, bool setmark) {$/;"	f	class:PDBrec
cmpdes	libpdb/pdb++.h	/^		Cmpdes	cmpdes;$/;"	m	union:PDB::__anon5
cmpont	libpdb/pdb++.h	/^		Cmpont	cmpont;$/;"	m	union:PDB::__anon5
cmpontSerialNums	libpdb/pdb++.h	/^		int	cmpontSerialNums[14];$/;"	m	struct:PDB::Aggrgt
color	reduce_src/ElementInfo.h	/^   char* color()    const { return _rep->_color; }$/;"	f	class:ElementInfo
color	reduce_src/bkup/ElementInfo.h	/^   char* color()    const { return _rep->_color; }$/;"	f	class:ElementInfo
column_sprintf	toolclasses/column_sprintf.cpp	/^int column_sprintf(char *outbuf, const char *fmt, ...) {$/;"	f
column_sscanf	toolclasses/column_sscanf.cpp	/^int column_sscanf(const char *buffer, const char *fmt, ...) {$/;"	f
combineNodeScoreWithOptEdgeAndNodeScore	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::combineNodeScoreWithOptEdgeAndNodeScore(NodeScoreVector& optNodeAndEdgeScoreVect)$/;"	f	class:MoveableNode
combineNodeScoreWithOptEdgeAndNodeScore	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::combineNodeScoreWithOptEdgeAndNodeScore(NodeScoreVector& optNodeAndEdgeScoreVect)$/;"	f	class:MoveableNode
comment	libpdb/pdb++.h	/^		char	comment[31];$/;"	m	struct:PDB::Helix
comment	libpdb/pdb++.h	/^		char	comment[31];$/;"	m	struct:PDB::Ssbond
comment	libpdb/pdb++.h	/^		char	comment[31];$/;"	m	struct:PDB::Turn
comment	libpdb/pdb++.h	/^		char	comment[31];$/;"	m	struct:PDB::Tvect
compArgStr	toolclasses/utility.cpp	/^int compArgStr(const char *str, const char *arg, int min) {$/;"	f
compnd	libpdb/pdb++.h	/^		Compnd	compnd;$/;"	m	union:PDB::__anon5
component	libpdb/pdb++.h	/^		int	component;$/;"	m	struct:PDB::Formul
computeOptimalNetworkConfiguration	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::computeOptimalNetworkConfiguration()$/;"	f	class:NodeAndEdgeManager
computeOptimalNetworkConfiguration	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::computeOptimalNetworkConfiguration()$/;"	f	class:NodeAndEdgeManager
computeOptimalNetworkConfigurationAfterOptimization	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::computeOptimalNetworkConfigurationAfterOptimization()$/;"	f	class:NodeAndEdgeManager
computeOptimalNetworkConfigurationAfterOptimization	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::computeOptimalNetworkConfigurationAfterOptimization()$/;"	f	class:NodeAndEdgeManager
conect	libpdb/pdb++.h	/^		Conect	conect;$/;"	m	union:PDB::__anon5
conn	reduce_src/AtomConn.cpp	/^const std::string& AtomConn::conn(int i) const {$/;"	f	class:AtomConn
conn	reduce_src/bkup/AtomConn.cpp	/^const std::string& AtomConn::conn(int i) const {$/;"	f	class:AtomConn
connect	toolclasses/DisjointSets.h	/^   void connect(int x, int y) {$/;"	f	class:DisjointSets
connectivity_	reduce_src/GraphToHoldScores.h	/^	bool ** connectivity_;$/;"	m	class:GraphToHoldScores
connectivity_	reduce_src/bkup/GraphToHoldScores.h	/^	bool ** connectivity_;$/;"	m	class:GraphToHoldScores
cons	toolclasses/Seq.h	/^inline Seq<T> cons(const T& t, const Seq<T>& s) { return Seq<T>(t, s); }$/;"	f
considerNodeForSafeS3Reduction	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::considerNodeForSafeS3Reduction( int node )$/;"	f	class:NodeAndEdgeManager
considerNodeForSafeS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::considerNodeForSafeS3Reduction( int node )$/;"	f	class:NodeAndEdgeManager
contains	reduce_src/ResBlk.h	/^   bool contains(const std::string& atomname) const {$/;"	f	class:ResBlk
contains	reduce_src/bkup/ResBlk.h	/^   bool contains(const std::string& atomname) const {$/;"	f	class:ResBlk
contains	toolclasses/Stringclass.h	/^   int contains(const Stringclass& s) const {$/;"	f	class:Stringclass
contains	toolclasses/Stringclass.h	/^   int contains(const char *s) const { \/\/ is s a substring?$/;"	f	class:Stringclass
containsPoint	reduce_src/AtomDescr.h	/^	bool containsPoint( Point3d const & p ) const{ return (distanceSquared( p , _atomPos) < _atRadiusSqr );}$/;"	f	class:AtomDescr
containsPoint	reduce_src/bkup/AtomDescr.h	/^	bool containsPoint( Point3d const & p ) const{ return (distanceSquared( p , _atomPos) < _atRadiusSqr );}$/;"	f	class:AtomDescr
continuation	libpdb/pdb++.h	/^		char	continuation;$/;"	m	struct:PDB::Author
continuation	libpdb/pdb++.h	/^		int	continuation;$/;"	m	struct:PDB::Formul
continuation	libpdb/pdb++.h	/^		int	continuation;$/;"	m	struct:PDB::Obslte
continuation	libpdb/pdb++.h	/^		int	continuation;$/;"	m	struct:PDB::Revdat
continuation	libpdb/pdb++.h	/^		int	continuation;$/;"	m	struct:PDB::Sprsde
convertEnabledState2OriginalStateEnumerationOnNode	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::convertEnabledState2OriginalStateEnumerationOnNode( $/;"	f	class:GraphToHoldScores
convertEnabledState2OriginalStateEnumerationOnNode	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::convertEnabledState2OriginalStateEnumerationOnNode( $/;"	f	class:GraphToHoldScores
convertEnabledStateToRegularState	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::convertEnabledStateToRegularState( int enabled_state ) const$/;"	f	class:Vertex_ths
convertEnabledStateToRegularState	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::convertEnabledStateToRegularState( int enabled_state ) const$/;"	f	class:Vertex_ths
copyChars	toolclasses/utility.cpp	/^void copyChars(char *to, const char *from, int n) {$/;"	f
corrections	libpdb/pdb++.h	/^		char	corrections[31];$/;"	m	struct:PDB::Revdat
count	libpdb/pdb++.h	/^		int	count;$/;"	m	struct:PDB::Seqres
count	libpdb/pdb++.h	/^		int	count;$/;"	m	struct:PDB::Sheet
count	libpdb/pdb++.h	/^		int	count;$/;"	m	struct:PDB::Site
count	reduce_src/DotSph.h	/^   int count() const { return _list.size(); } \/\/ how many spheres?$/;"	f	class:DotSphManager
count	reduce_src/DotSph.h	/^   int count() const { return _n; }$/;"	f	class:DotSphRep
count	reduce_src/DotSph.h	/^   int count() const { return _rep->count(); } \/\/ how many dots?$/;"	f	class:DotSph
count	reduce_src/bkup/DotSph.h	/^   int count() const { return _list.size(); } \/\/ how many spheres?$/;"	f	class:DotSphManager
count	reduce_src/bkup/DotSph.h	/^   int count() const { return _n; }$/;"	f	class:DotSphRep
count	reduce_src/bkup/DotSph.h	/^   int count() const { return _rep->count(); } \/\/ how many dots?$/;"	f	class:DotSph
count	toolclasses/MultiDict.h	/^   int count() const { return _value.len(); }$/;"	f	class:MultiLink
count	toolclasses/Stringclass.h	/^      int count;$/;"	m	class:Stringclass::StringRep
countBonds	reduce_src/Mover.cpp	/^void countBonds(std::pair<PDBrec*,Point3d> src, const std::list< std::pair<PDBrec*, Point3d> >& nearby,$/;"	f
countBonds	reduce_src/bkup/Mover.cpp	/^void countBonds(std::pair<PDBrec*,Point3d> src, const std::list< std::pair<PDBrec*, Point3d> >& nearby,$/;"	f
covRad	reduce_src/ElementInfo.h	/^   float covRad()   const { return _rep->_covRad; }$/;"	f	class:ElementInfo
covRad	reduce_src/PDBrec.h	/^   float      covRad() const { return _rep->_e.covRad();     }$/;"	f	class:PDBrec
covRad	reduce_src/bkup/ElementInfo.h	/^   float covRad()   const { return _rep->_covRad; }$/;"	f	class:ElementInfo
covRad	reduce_src/bkup/PDBrec.h	/^   float      covRad() const { return _rep->_e.covRad();     }$/;"	f	class:PDBrec
covalent	libpdb/pdb++.h	/^		char	covalent[4][6];$/;"	m	struct:PDB::Conect
cross	toolclasses/Point3d.cpp	/^Point3d cross(const Point3d& a, const Point3d& b) {$/;"	f
cryst1	libpdb/pdb++.h	/^		Cryst1	cryst1;$/;"	m	union:PDB::__anon5
cryst1	reduce_src/bkup/new_reduce.cpp	/^Cryst1 cryst1;$/;"	v
cryst1	reduce_src/bkup/reduce.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/bkup/sym_add.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/bkup/sym_print.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/new_reduce.cpp	/^Cryst1 cryst1;$/;"	v
cryst1	reduce_src/print_neighbors.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/sym_add.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/sym_print.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cryst1	reduce_src/test_reduce.cpp	/^static Cryst1 cryst1;$/;"	v	file:
cubiclize	reduce_src/AtomPositions.h	/^   void cubiclize(){$/;"	f	class:AtomPositions
cubiclize	reduce_src/bkup/AtomPositions.h	/^   void cubiclize(){$/;"	f	class:AtomPositions
cubiclize	reduce_src/bkup/neighborList.h	/^	void cubiclize(){$/;"	f	class:NeighborList
cubiclize	reduce_src/neighborList.h	/^	void cubiclize(){$/;"	f	class:NeighborList
cycleReductionHasBegun	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::cycleReductionHasBegun() const$/;"	f	class:NodeAndEdgeManager
cycleReductionHasBegun	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::cycleReductionHasBegun() const$/;"	f	class:NodeAndEdgeManager
d2e_	reduce_src/GraphToHoldScores.h	/^	DegreeTwoEdge_ths * d2e_[ 3 ]; \/\/ 0 == 0-1 edge, 1 == 0-2 edge, 3 == 1-2 edge$/;"	m	class:DegreeThreeEdge_ths
d2e_	reduce_src/bkup/GraphToHoldScores.h	/^	DegreeTwoEdge_ths * d2e_[ 3 ]; \/\/ 0 == 0-1 edge, 1 == 0-2 edge, 3 == 1-2 edge$/;"	m	class:DegreeThreeEdge_ths
d2eiter_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths * >::iterator d2eiter_;$/;"	m	class:GraphToHoldScores
d2eiter_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths * >::iterator d2eiter_;$/;"	m	class:GraphToHoldScores
d3edgeExistsBetween	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::d3edgeExistsBetween( int fn, int sn, int tn )$/;"	f	class:NodeAndEdgeManager
d3edgeExistsBetween	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::d3edgeExistsBetween( int fn, int sn, int tn )$/;"	f	class:NodeAndEdgeManager
d3eiter_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths * >::iterator d3eiter_;$/;"	m	class:GraphToHoldScores
d3eiter_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths * >::iterator d3eiter_;$/;"	m	class:GraphToHoldScores
d4eiter_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths * >::iterator d4eiter_;$/;"	m	class:GraphToHoldScores
d4eiter_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths * >::iterator d4eiter_;$/;"	m	class:GraphToHoldScores
data	libpdb/pdb++.h	/^		char	data[61];$/;"	m	struct:PDB::Author
data	toolclasses/Hdl.h	/^   T& data() { return *_p; }$/;"	f	class:Hdl
data	toolclasses/ListIter.h	/^   T& data() const {$/;"	f	class:NonConstListIter
data	toolclasses/Seq.h	/^   const T& data() const { return _data; }$/;"	f	class:Seq_item
data	toolclasses/VectIter.h	/^   T& data() const{                  \/\/ non-const data access$/;"	f	class:NonConstVectIter
data	toolclasses/Vector.cpp	/^T& Vector<T>::data(int index) {$/;"	f	class:Vector
deallocateMatrix	reduce_src/MoveableNode.cpp	/^void EdgeScoreMatrix::deallocateMatrix()$/;"	f	class:EdgeScoreMatrix
deallocateMatrix	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateMatrix3::deallocateMatrix()$/;"	f	class:OptimizedNodeStateMatrix3
deallocateMatrix	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::deallocateMatrix()$/;"	f	class:OptimizedNodeStateMatrix
deallocateMatrix	reduce_src/bkup/MoveableNode.cpp	/^void EdgeScoreMatrix::deallocateMatrix()$/;"	f	class:EdgeScoreMatrix
deallocateMatrix	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateMatrix3::deallocateMatrix()$/;"	f	class:OptimizedNodeStateMatrix3
deallocateMatrix	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::deallocateMatrix()$/;"	f	class:OptimizedNodeStateMatrix
decode_pure	reduce_src/bkup/hybrid_36_c.c	/^decode_pure($/;"	f	file:
decode_pure	reduce_src/hybrid_36_c.c	/^decode_pure($/;"	f	file:
deg2edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths * > deg2edges_;$/;"	m	class:GraphToHoldScores
deg2edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* > deg2edges_;$/;"	m	class:Vertex_ths
deg2edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths * > deg2edges_;$/;"	m	class:GraphToHoldScores
deg2edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* > deg2edges_;$/;"	m	class:Vertex_ths
deg3edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths * > deg3edges_;$/;"	m	class:GraphToHoldScores
deg3edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* > deg3edges_;$/;"	m	class:Vertex_ths
deg3edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths * > deg3edges_;$/;"	m	class:GraphToHoldScores
deg3edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* > deg3edges_;$/;"	m	class:Vertex_ths
deg4edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths * > deg4edges_;$/;"	m	class:GraphToHoldScores
deg4edges_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* > deg4edges_;$/;"	m	class:Vertex_ths
deg4edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths * > deg4edges_;$/;"	m	class:GraphToHoldScores
deg4edges_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* > deg4edges_;$/;"	m	class:Vertex_ths
degree2EdgeExists	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree2EdgeExists( int fn, int sn ) const$/;"	f	class:GraphToHoldScores
degree2EdgeExists	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree2EdgeExists( int fn, int sn ) const$/;"	f	class:GraphToHoldScores
degree3EdgeExists	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree3EdgeExists( int fn, int sn, int tn ) const$/;"	f	class:GraphToHoldScores
degree3EdgeExists	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree3EdgeExists( int fn, int sn, int tn ) const$/;"	f	class:GraphToHoldScores
degree4EdgeExists	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree4EdgeExists( int fn, int sn, int tn, int fthn ) const$/;"	f	class:GraphToHoldScores
degree4EdgeExists	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::degree4EdgeExists( int fn, int sn, int tn, int fthn ) const$/;"	f	class:GraphToHoldScores
deleteDegreeFourHyperedge	reduce_src/MoveableNode.cpp	/^void MoveableNode::deleteDegreeFourHyperedge( Degree4Hyperedge * edge )$/;"	f	class:MoveableNode
deleteDegreeFourHyperedge	reduce_src/bkup/MoveableNode.cpp	/^void MoveableNode::deleteDegreeFourHyperedge( Degree4Hyperedge * edge )$/;"	f	class:MoveableNode
deleteDegreeThreeHyperedge	reduce_src/MoveableNode.cpp	/^void MoveableNode::deleteDegreeThreeHyperedge( Degree3Hyperedge * edge )$/;"	f	class:MoveableNode
deleteDegreeThreeHyperedge	reduce_src/bkup/MoveableNode.cpp	/^void MoveableNode::deleteDegreeThreeHyperedge( Degree3Hyperedge * edge )$/;"	f	class:MoveableNode
densFuzz	reduce_src/DotSph.cpp	/^float DotSphManager::densFuzz(float df) {$/;"	f	class:DotSphManager
densFuzz	reduce_src/bkup/DotSph.cpp	/^float DotSphManager::densFuzz(float df) {$/;"	f	class:DotSphManager
density	reduce_src/DotSph.cpp	/^float DotSphManager::density(float dens) {$/;"	f	class:DotSphManager
density	reduce_src/DotSph.h	/^   float density() const { return _dens; }$/;"	f	class:DotSphRep
density	reduce_src/DotSph.h	/^   float density() const { return _rep->density(); }$/;"	f	class:DotSph
density	reduce_src/bkup/DotSph.cpp	/^float DotSphManager::density(float dens) {$/;"	f	class:DotSphManager
density	reduce_src/bkup/DotSph.h	/^   float density() const { return _dens; }$/;"	f	class:DotSphRep
density	reduce_src/bkup/DotSph.h	/^   float density() const { return _rep->density(); }$/;"	f	class:DotSph
descr	reduce_src/Mover.h	/^   const std::string& descr() const { return _descr; }$/;"	f	class:Mover
descr	reduce_src/Mover.h	/^   void descr(const std::string& s) { _descr = s;    }$/;"	f	class:Mover
descr	reduce_src/bkup/Mover.h	/^   const std::string& descr() const { return _descr; }$/;"	f	class:Mover
descr	reduce_src/bkup/Mover.h	/^   void descr(const std::string& s) { _descr = s;    }$/;"	f	class:Mover
describe	reduce_src/CliqueList.cpp	/^void CliqueList::describe(std::ostream& os) const {$/;"	f	class:CliqueList
describe	reduce_src/bkup/CliqueList.cpp	/^void CliqueList::describe(std::ostream& os) const {$/;"	f	class:CliqueList
describeChanges	reduce_src/AtomPositions.cpp	/^void AtomPositions::describeChanges(std::list<PDBrec*>& records, $/;"	f	class:AtomPositions
describeChanges	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::describeChanges(std::list<PDBrec*>& records, $/;"	f	class:AtomPositions
describeOrientation	reduce_src/FlipMemo.cpp	/^std::string FlipMemo::describeOrientation() const {$/;"	f	class:FlipMemo
describeOrientation	reduce_src/RotDonor.cpp	/^std::string RotDonor::describeOrientation() const {$/;"	f	class:RotDonor
describeOrientation	reduce_src/RotMethyl.cpp	/^std::string RotMethyl::describeOrientation() const {$/;"	f	class:RotMethyl
describeOrientation	reduce_src/bkup/FlipMemo.cpp	/^std::string FlipMemo::describeOrientation() const {$/;"	f	class:FlipMemo
describeOrientation	reduce_src/bkup/RotDonor.cpp	/^std::string RotDonor::describeOrientation() const {$/;"	f	class:RotDonor
describeOrientation	reduce_src/bkup/RotMethyl.cpp	/^std::string RotMethyl::describeOrientation() const {$/;"	f	class:RotMethyl
destroy	toolclasses/Seq.cpp	/^void Seq<T>::destroy(Seq_item<T>* it) { \/\/ NOTE: does not set item or len$/;"	f	class:Seq
detectDotsDoublyCounted	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::detectDotsDoublyCounted( DegreeFourEdge_ths const * other ) const$/;"	f	class:DegreeFourEdge_ths
detectDotsDoublyCounted	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::detectDotsDoublyCounted( DegreeThreeEdge_ths const * other ) const$/;"	f	class:DegreeThreeEdge_ths
detectDotsDoublyCounted	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::detectDotsDoublyCounted( DegreeFourEdge_ths const * other ) const$/;"	f	class:DegreeFourEdge_ths
detectDotsDoublyCounted	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::detectDotsDoublyCounted( DegreeThreeEdge_ths const * other ) const$/;"	f	class:DegreeThreeEdge_ths
detectDotsToScoreOnEdge	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeThreeEdge_ths
detectDotsToScoreOnEdge	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeTwoEdge_ths
detectDotsToScoreOnEdge	reduce_src/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeFourEdge_ths
detectDotsToScoreOnEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeThreeEdge_ths
detectDotsToScoreOnEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeTwoEdge_ths
detectDotsToScoreOnEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::detectDotsToScoreOnEdge()$/;"	f	class:DegreeFourEdge_ths
detectFiveWayInteractions	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::detectFiveWayInteractions()$/;"	f	class:GraphToHoldScores
detectFiveWayInteractions	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::detectFiveWayInteractions()$/;"	f	class:GraphToHoldScores
detectFourWayInteractions	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::detectFourWayInteractions()$/;"	f	class:GraphToHoldScores
detectFourWayInteractions	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::detectFourWayInteractions()$/;"	f	class:GraphToHoldScores
detectThreeWayOverlap	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::detectThreeWayOverlap( Vertex_ths * other1, Vertex_ths * other2 )$/;"	f	class:Vertex_ths
detectThreeWayOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::detectThreeWayOverlap( Vertex_ths * other1, Vertex_ths * other2 )$/;"	f	class:Vertex_ths
determineScore	reduce_src/FlipMemo.cpp	/^double FlipMemo::determineScore(AtomPositions &xyz,	DotSphManager& dotBucket, $/;"	f	class:FlipMemo
determineScore	reduce_src/RotDonor.cpp	/^double RotDonor::determineScore(AtomPositions &xyz,$/;"	f	class:RotDonor
determineScore	reduce_src/RotMethyl.cpp	/^double RotMethyl::determineScore(AtomPositions &xyz,$/;"	f	class:RotMethyl
determineScore	reduce_src/bkup/FlipMemo.cpp	/^double FlipMemo::determineScore(AtomPositions &xyz,	DotSphManager& dotBucket, $/;"	f	class:FlipMemo
determineScore	reduce_src/bkup/RotDonor.cpp	/^double RotDonor::determineScore(AtomPositions &xyz,$/;"	f	class:RotDonor
determineScore	reduce_src/bkup/RotMethyl.cpp	/^double RotMethyl::determineScore(AtomPositions &xyz,$/;"	f	class:RotMethyl
determineScoreForMover	reduce_src/AtomPositions.cpp	/^float AtomPositions::determineScoreForMover($/;"	f	class:AtomPositions
determineScoreForMover	reduce_src/bkup/AtomPositions.cpp	/^float AtomPositions::determineScoreForMover($/;"	f	class:AtomPositions
dh	reduce_src/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
dh	reduce_src/bkup/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
diffAltLoc	reduce_src/Mover.cpp	/^bool diffAltLoc(const PDBrec& a, const PDBrec& b) {$/;"	f
diffAltLoc	reduce_src/bkup/Mover.cpp	/^bool diffAltLoc(const PDBrec& a, const PDBrec& b) {$/;"	f
digits_lower	reduce_src/bkup/hybrid_36_c.c	/^digits_lower() { return "0123456789abcdefghijklmnopqrstuvwxyz"; }$/;"	f	file:
digits_lower	reduce_src/hybrid_36_c.c	/^digits_lower() { return "0123456789abcdefghijklmnopqrstuvwxyz"; }$/;"	f	file:
digits_upper	reduce_src/bkup/hybrid_36_c.c	/^digits_upper() { return "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; }$/;"	f	file:
digits_upper	reduce_src/hybrid_36_c.c	/^digits_upper() { return "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; }$/;"	f	file:
dihedral	toolclasses/Point3d.cpp	/^Coord dihedral(const Point3d& p1, const Point3d& p2,$/;"	f
disableState	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::disableState( int state )$/;"	f	class:Vertex_ths
disableState	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::disableState( int state )$/;"	f	class:Vertex_ths
disableStateOnNode	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::disableStateOnNode( int vertex, int state )$/;"	f	class:GraphToHoldScores
disableStateOnNode	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::disableStateOnNode( int vertex, int state )$/;"	f	class:GraphToHoldScores
dist	reduce_src/AtomConn.h	/^         float dist() const { return _dist;  }$/;"	f	class:atomPlacementPlan
dist	reduce_src/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
dist	reduce_src/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
dist	reduce_src/bkup/AtomConn.h	/^         float dist() const { return _dist;  }$/;"	f	class:atomPlacementPlan
dist	reduce_src/bkup/FlipMemo.h	/^   float dist, ang, dh;$/;"	m	struct:ProtonLoc_t
dist	reduce_src/bkup/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
distance	libpdb/pdb++.h	/^		Real	distance;$/;"	m	struct:PDB::UserDistance
distance2	toolclasses/Point3d.cpp	/^Coord distance2(const Point3d& a, const Point3d& b) {$/;"	f
distanceSquared	toolclasses/Point3d.h	/^Coord distanceSquared(const Point3d& a, const Point3d& b) {$/;"	f
doNotAdjust	reduce_src/AtomPositions.cpp	/^void AtomPositions::doNotAdjust(const PDBrec& a) {$/;"	f	class:AtomPositions
doNotAdjust	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::doNotAdjust(const PDBrec& a) {$/;"	f	class:AtomPositions
dot	toolclasses/Point3d.h	/^inline Coord dot(const Point3d& a, const Point3d& b) {$/;"	f
dot2srcCenter	reduce_src/Mover.cpp	/^double dot2srcCenter(const Point3d& dot, const PDBrec& src, Point3d targ_loc) {$/;"	f
dot2srcCenter	reduce_src/bkup/Mover.cpp	/^double dot2srcCenter(const Point3d& dot, const PDBrec& src, Point3d targ_loc) {$/;"	f
dotOn	reduce_src/GraphToHoldScores.cpp	/^bool DotsForAtom::dotOn( int dot ) const$/;"	f	class:DotsForAtom
dotOn	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DotsForAtom::dotOn( int dot ) const$/;"	f	class:DotsForAtom
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeFourEdge_ths
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeThreeEdge_ths
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeTwoEdge_ths
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DotsForAtom
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:GraphToHoldScores
dotSphereManager_	reduce_src/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:Vertex_ths
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeFourEdge_ths
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeThreeEdge_ths
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DegreeTwoEdge_ths
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:DotsForAtom
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:GraphToHoldScores
dotSphereManager_	reduce_src/bkup/GraphToHoldScores.h	/^	DotSphManager * dotSphereManager_;$/;"	m	class:Vertex_ths
dotsForAtom_	reduce_src/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_;$/;"	m	class:Vertex_ths
dotsForAtom_	reduce_src/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
dotsForAtom_	reduce_src/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
dotsForAtom_	reduce_src/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
dotsForAtom_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_;$/;"	m	class:Vertex_ths
dotsForAtom_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
dotsForAtom_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
dotsForAtom_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsForAtom_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
dotsInHOO_	reduce_src/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsInHOO_;$/;"	m	class:Vertex_ths
dotsInHOO_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< DotsForAtom > dotsInHOO_;$/;"	m	class:Vertex_ths
dotsOn_	reduce_src/GraphToHoldScores.h	/^	bool * dotsOn_;$/;"	m	class:DotsForAtom
dotsOn_	reduce_src/bkup/GraphToHoldScores.h	/^	bool * dotsOn_;$/;"	m	class:DotsForAtom
dotsToScoreInHOO_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreInHOO_;$/;"	m	class:Vertex_ths
dotsToScoreInHOO_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreInHOO_;$/;"	m	class:Vertex_ths
dotsToScoreOnAtoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_;$/;"	m	class:Vertex_ths
dotsToScoreOnAtoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
dotsToScoreOnAtoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
dotsToScoreOnAtoms_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
dotsToScoreOnAtoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_;$/;"	m	class:Vertex_ths
dotsToScoreOnAtoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
dotsToScoreOnAtoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
dotsToScoreOnAtoms_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::pair< AtomDescr, DotsForAtom * > > dotsToScoreOnAtoms_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
double3	reduce_src/bkup/findNeighbors.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/bkup/find_distances.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/bkup/find_distances_new.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/bkup/neighborList.h	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc
double3	reduce_src/bkup/neighborList.h	/^typedef scitbx::vec3<double> double3;$/;"	t
double3	reduce_src/bkup/old_neighborList.h	/^typedef scitbx::vec3<double> double3;$/;"	t
double3	reduce_src/findNeighbors.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/find_distances.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/find_distances_new.cpp	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc	file:
double3	reduce_src/neighborList.h	/^  typedef scitbx::vec3<double> double3;$/;"	t	namespace:cc
double3	reduce_src/neighborList.h	/^typedef scitbx::vec3<double> double3;$/;"	t
double3	reduce_src/old_neighborList.h	/^typedef scitbx::vec3<double> double3;$/;"	t
drop	toolclasses/Dict.cpp	/^bool Dict<K,T>::drop(const K &key) {$/;"	f	class:Dict
drop	toolclasses/List.cpp	/^bool List<T>::drop(DblLnkLstNode<T> *ptr) {$/;"	f	class:List
drop	toolclasses/List.cpp	/^bool List<T>::drop(int loc) {$/;"	f	class:List
drop	toolclasses/ListIter.cpp	/^bool NonConstListIter<T>::drop() {$/;"	f	class:NonConstListIter
drop	toolclasses/MultiDict.cpp	/^bool MultiDict<K,T>::drop(const K &key) {$/;"	f	class:MultiDict
dropBondedFromBumpingListForPDBrec	reduce_src/FlipMemo.cpp	/^void FlipMemo::dropBondedFromBumpingListForPDBrec($/;"	f	class:FlipMemo
dropBondedFromBumpingListForPDBrec	reduce_src/RotDonor.cpp	/^void RotDonor::dropBondedFromBumpingListForPDBrec($/;"	f	class:RotDonor
dropBondedFromBumpingListForPDBrec	reduce_src/RotMethyl.cpp	/^void RotMethyl::dropBondedFromBumpingListForPDBrec($/;"	f	class:RotMethyl
dropBondedFromBumpingListForPDBrec	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::dropBondedFromBumpingListForPDBrec($/;"	f	class:FlipMemo
dropBondedFromBumpingListForPDBrec	reduce_src/bkup/RotDonor.cpp	/^void RotDonor::dropBondedFromBumpingListForPDBrec($/;"	f	class:RotDonor
dropBondedFromBumpingListForPDBrec	reduce_src/bkup/RotMethyl.cpp	/^void RotMethyl::dropBondedFromBumpingListForPDBrec($/;"	f	class:RotMethyl
dropDotsScoredOnD3Edge	reduce_src/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::dropDotsScoredOnD3Edge($/;"	f	class:DegreeTwoEdge_ths
dropDotsScoredOnD3Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::dropDotsScoredOnD3Edge($/;"	f	class:DegreeTwoEdge_ths
dropDotsScoredOnD4Edge	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::dropDotsScoredOnD4Edge($/;"	f	class:DegreeThreeEdge_ths
dropDotsScoredOnD4Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::dropDotsScoredOnD4Edge($/;"	f	class:DegreeThreeEdge_ths
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropEdge	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::dropEdge( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:GraphToHoldScores
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::dropEdge( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:Vertex_ths
dropHydrogens	reduce_src/bkup/new_reduce.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/bkup/reduce.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/bkup/sym_add.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/bkup/sym_print.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/new_reduce.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/print_neighbors.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/reduce.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/sym_add.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/sym_print.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dropHydrogens	reduce_src/test_reduce.cpp	/^void dropHydrogens(std::list<PDBrec*>& rlst) {$/;"	f
dumpArray	toolclasses/DisjointSets.cpp	/^void DisjointSets::dumpArray(std::ostream& os) const {$/;"	f	class:DisjointSets
dumpStructure	toolclasses/Dict.cpp	/^void Dict<K,T>::dumpStructure(ostream& os) const {$/;"	f	class:Dict
dumpStructure	toolclasses/MultiDict.cpp	/^void MultiDict<K,T>::dumpStructure(ostream& os) const {$/;"	f	class:MultiDict
dupList	toolclasses/List.cpp	/^void List<T>::dupList(const List& l) {$/;"	f	class:List
duplicate	reduce_src/ElementInfo.h	/^   ElementInfo duplicate() {$/;"	f	class:ElementInfo
duplicate	reduce_src/bkup/ElementInfo.h	/^   ElementInfo duplicate() {$/;"	f	class:ElementInfo
duplicate	toolclasses/Stringclass.h	/^   Stringclass duplicate() const { Stringclass retval(rep->rep); return retval; }$/;"	f	class:Stringclass
e_out	libpdb/pdb_sprntf.cpp	/^e_out(int width, char *where)$/;"	f	file:
e_out	toolclasses/column_sprintf.cpp	/^e_out(int width, char *where)$/;"	f	file:
easy_run	run_tests.py	/^from libtbx import easy_run$/;"	i
electronicReference	reduce_src/bkup/new_reduce.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/bkup/reduce.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/bkup/sym_add.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/bkup/sym_print.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/new_reduce.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/print_neighbors.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/reduce.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/sym_add.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/sym_print.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
electronicReference	reduce_src/test_reduce.cpp	/^static const char *electronicReference = "http:\/\/kinemage.biochem.duke.edu";$/;"	v	file:
elem	reduce_src/AtomConn.h	/^   const ElementInfo& elem() const { return _elem;  }$/;"	f	class:atomPlacementPlan
elem	reduce_src/PDBrec.h	/^   const ElementInfo& elem() const { return _rep->_e;  }$/;"	f	class:PDBrec
elem	reduce_src/PDBrec.h	/^   void elem(const ElementInfo& e) { _rep->_e = e; }$/;"	f	class:PDBrec
elem	reduce_src/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
elem	reduce_src/bkup/AtomConn.h	/^   const ElementInfo& elem() const { return _elem;  }$/;"	f	class:atomPlacementPlan
elem	reduce_src/bkup/PDBrec.h	/^   const ElementInfo& elem() const { return _rep->_e;  }$/;"	f	class:PDBrec
elem	reduce_src/bkup/PDBrec.h	/^   void elem(const ElementInfo& e) { _rep->_e = e; }$/;"	f	class:PDBrec
elem	reduce_src/bkup/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
elemLabel	reduce_src/PDBrec.h	/^   const char*elemLabel()  const{ return _rep->_r.atom.element;            }$/;"	f	class:PDBrec
elemLabel	reduce_src/PDBrec.h	/^   void   elemLabel(const char* e) {$/;"	f	class:PDBrec
elemLabel	reduce_src/bkup/PDBrec.h	/^   const char*elemLabel()  const{ return _rep->_r.atom.element;            }$/;"	f	class:PDBrec
elemLabel	reduce_src/bkup/PDBrec.h	/^   void   elemLabel(const char* e) {$/;"	f	class:PDBrec
element	libpdb/pdb++.h	/^		char	element[3];$/;"	m	struct:PDB::Anisou
element	libpdb/pdb++.h	/^		char	element[3];$/;"	m	struct:PDB::Atom
element	reduce_src/ElementInfo.cpp	/^ElementInfo* StandardElementTable::element(const char *elementName) const {$/;"	f	class:StandardElementTable
element	reduce_src/bkup/ElementInfo.cpp	/^ElementInfo* StandardElementTable::element(const char *elementName) const {$/;"	f	class:StandardElementTable
eliminate	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::eliminate()$/;"	f	class:MoveableNode
eliminate	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::eliminate()$/;"	f	class:MoveableNode
eliminateOneStateVertex	reduce_src/MoveableNode.cpp	/^MoveableNode::eliminateOneStateVertex()$/;"	f	class:MoveableNode
eliminateOneStateVertex	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::eliminateOneStateVertex()$/;"	f	class:MoveableNode
eliminateQueuedNodes	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::eliminateQueuedNodes()$/;"	f	class:NodeAndEdgeManager
eliminateQueuedNodes	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::eliminateQueuedNodes()$/;"	f	class:NodeAndEdgeManager
eliminateSingleton	reduce_src/MoveableNode.cpp	/^MoveableNode::eliminateSingleton()$/;"	f	class:MoveableNode
eliminateSingleton	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::eliminateSingleton()$/;"	f	class:MoveableNode
eliminateThroughCycleReduction	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::eliminateThroughCycleReduction()$/;"	f	class:MoveableNode
eliminateThroughCycleReduction	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::eliminateThroughCycleReduction()$/;"	f	class:MoveableNode
eliminateThroughS3Reduction	reduce_src/MoveableNode.cpp	/^MoveableNode::eliminateThroughS3Reduction()$/;"	f	class:MoveableNode
eliminateThroughS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::eliminateThroughS3Reduction()$/;"	f	class:MoveableNode
eliminateThroughTreeReduction	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::eliminateThroughTreeReduction()$/;"	f	class:MoveableNode
eliminateThroughTreeReduction	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::eliminateThroughTreeReduction()$/;"	f	class:MoveableNode
empty	toolclasses/List.h	/^   bool empty() const { return _num_elem == 0; }$/;"	f	class:List
empty	toolclasses/Queue.h	/^   bool empty() const { return List<T>::empty(); }$/;"	f	class:Queue
empty	toolclasses/Seq.h	/^   int     empty() const { return _item == 0; }$/;"	f	class:Seq
empty	toolclasses/Stack.h	/^   bool empty() const { return List<T>::empty(); }$/;"	f	class:Stack
empty	toolclasses/Stringclass.h	/^   bool empty() const { return (rep->rep)[0] == '\\0'; }$/;"	f	class:Stringclass
enableAllStates	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::enableAllStates()$/;"	f	class:Vertex_ths
enableAllStates	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::enableAllStates()$/;"	f	class:Vertex_ths
enabledStates2OriginalStates_	reduce_src/GraphToHoldScores.h	/^	std::vector< int > enabledStates2OriginalStates_;$/;"	m	class:Vertex_ths
enabledStates2OriginalStates_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< int > enabledStates2OriginalStates_;$/;"	m	class:Vertex_ths
encode_pure	reduce_src/bkup/hybrid_36_c.c	/^encode_pure($/;"	f	file:
encode_pure	reduce_src/hybrid_36_c.c	/^encode_pure($/;"	f	file:
end	libpdb/pdb++.h	/^		End     end;    \/\/ added$/;"	m	union:PDB::__anon5
end	toolclasses/ListIter.h	/^   void end()   { _node = _list._last;  } \/\/ go to last entry$/;"	f	class:ListIter
end	toolclasses/VectIter.h	/^   void end()   { _elem = _vec.size()-1; } \/\/ go to last entry$/;"	f	class:VectIter
endOfLineInfo	libpdb/pdb++.h	/^	char endOfLineInfo[9]; \/\/ added to keep identifying info$/;"	m	class:PDB
endmdl	libpdb/pdb++.h	/^		Endmdl  endmdl; \/\/ added$/;"	m	union:PDB::__anon5
errmsg	toolclasses/utility.cpp	/^void errmsg(const char *message) {$/;"	f
estNumDots	reduce_src/DotSph.cpp	/^int estNumDots(float radius, float density) {$/;"	f
estNumDots	reduce_src/bkup/DotSph.cpp	/^int estNumDots(float radius, float density) {$/;"	f
establishHetDictionaryFileName	reduce_src/bkup/new_reduce.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/bkup/reduce.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/bkup/sym_add.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/bkup/sym_print.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/new_reduce.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/print_neighbors.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/reduce.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/sym_add.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/sym_print.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
establishHetDictionaryFileName	reduce_src/test_reduce.cpp	/^void establishHetDictionaryFileName(void) {$/;"	f
exampleAtom	reduce_src/FlipMemo.h	/^   virtual const PDBrec& exampleAtom() const { return _wrkAtom[1]; }$/;"	f	class:FlipMemo
exampleAtom	reduce_src/RotDonor.h	/^   virtual const PDBrec& exampleAtom() const { return heavyAtom(); }$/;"	f	class:RotDonor
exampleAtom	reduce_src/RotMethyl.h	/^   virtual const PDBrec& exampleAtom() const { return heavyAtom(); }$/;"	f	class:RotMethyl
exampleAtom	reduce_src/bkup/FlipMemo.h	/^   virtual const PDBrec& exampleAtom() const { return _wrkAtom[1]; }$/;"	f	class:FlipMemo
exampleAtom	reduce_src/bkup/RotDonor.h	/^   virtual const PDBrec& exampleAtom() const { return heavyAtom(); }$/;"	f	class:RotDonor
exampleAtom	reduce_src/bkup/RotMethyl.h	/^   virtual const PDBrec& exampleAtom() const { return heavyAtom(); }$/;"	f	class:RotMethyl
exclude	libpdb/pdb++.h	/^		char	exclude;	\/\/ * to exclude$/;"	m	struct:PDB::Formul
exclude	reduce_src/StdResH.h	/^   const std::string& exclude() const { return _exclude; }$/;"	f	class:StdResH
exclude	reduce_src/bkup/StdResH.h	/^   const std::string& exclude() const { return _exclude; }$/;"	f	class:StdResH
exists	toolclasses/Dict.cpp	/^bool Dict<K,T>::exists(const K &key) const {$/;"	f	class:Dict
exists	toolclasses/MultiDict.cpp	/^bool MultiDict<K,T>::exists(const K &key) const {$/;"	f	class:MultiDict
existsEdgeBetween	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::existsEdgeBetween(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
existsEdgeBetween	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::existsEdgeBetween(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
expdta	libpdb/pdb++.h	/^		Expdta	expdta;$/;"	m	union:PDB::__anon5
expected_md5_hexdigests	libtbx_refresh.py	/^    expected_md5_hexdigests=[$/;"	v
explRad	reduce_src/ElementInfo.h	/^   float explRad()  const { return _rep->_eRad; }$/;"	f	class:ElementInfo
explRad	reduce_src/bkup/ElementInfo.h	/^   float explRad()  const { return _rep->_eRad; }$/;"	f	class:ElementInfo
extendOrientations	reduce_src/FlipMemo.cpp	/^void FlipMemo::extendOrientations(bool val) {$/;"	f	class:FlipMemo
extendOrientations	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::extendOrientations(bool val) {$/;"	f	class:FlipMemo
fetch	reduce_src/DotSph.cpp	/^DotSph& DotSphManager::fetch(float rad) {$/;"	f	class:DotSphManager
fetch	reduce_src/bkup/DotSph.cpp	/^DotSph& DotSphManager::fetch(float rad) {$/;"	f	class:DotSphManager
file_size	run_tests.py	/^from libtbx.utils import Usage, file_size$/;"	i
filename	libpdb/pdb++.h	/^		char	filename[62];$/;"	m	struct:PDB::UserFile
fillAtomAndLocVectors	reduce_src/FlipMemo.cpp	/^void FlipMemo::fillAtomAndLocVectors() {$/;"	f	class:FlipMemo
fillAtomAndLocVectors	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::fillAtomAndLocVectors() {$/;"	f	class:FlipMemo
fill_with_stars	reduce_src/bkup/hybrid_36_c.c	/^fill_with_stars(unsigned width, char* result)$/;"	f	file:
fill_with_stars	reduce_src/hybrid_36_c.c	/^fill_with_stars(unsigned width, char* result)$/;"	f	file:
finalize	reduce_src/FlipMemo.cpp	/^void FlipMemo::finalize(int, bool, bool, bool, AtomPositions &, DotSphManager&) {$/;"	f	class:FlipMemo
finalize	reduce_src/RotDonor.cpp	/^void RotDonor::finalize(int nBondCutoff, bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:RotDonor
finalize	reduce_src/RotMethyl.cpp	/^void RotMethyl::finalize(int nBondCutoff, bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:RotMethyl
finalize	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::finalize(int, bool, bool, bool, AtomPositions &, DotSphManager&) {$/;"	f	class:FlipMemo
finalize	reduce_src/bkup/RotDonor.cpp	/^void RotDonor::finalize(int nBondCutoff, bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:RotDonor
finalize	reduce_src/bkup/RotMethyl.cpp	/^void RotMethyl::finalize(int nBondCutoff, bool useXplorNames, bool useOldNames, bool bbModel, $/;"	f	class:RotMethyl
finalizeMovers	reduce_src/AtomPositions.cpp	/^void AtomPositions::finalizeMovers() {$/;"	f	class:AtomPositions
finalizeMovers	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::finalizeMovers() {$/;"	f	class:AtomPositions
finalizeScoreVectors	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::finalizeScoreVectors()$/;"	f	class:GraphToHoldScores
finalizeScoreVectors	reduce_src/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeFourEdge_ths
finalizeScoreVectors	reduce_src/GraphToHoldScores.cpp	/^void DegreeThreeEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeThreeEdge_ths
finalizeScoreVectors	reduce_src/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeTwoEdge_ths
finalizeScoreVectors	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::finalizeScoreVectors()$/;"	f	class:Vertex_ths
finalizeScoreVectors	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::finalizeScoreVectors()$/;"	f	class:GraphToHoldScores
finalizeScoreVectors	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeFourEdge_ths
finalizeScoreVectors	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeThreeEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeThreeEdge_ths
finalizeScoreVectors	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::finalizeScoreVectors()$/;"	f	class:DegreeTwoEdge_ths
finalizeScoreVectors	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::finalizeScoreVectors()$/;"	f	class:Vertex_ths
find	reduce_src/bkup/neighborList.h	/^	int find(L atom){$/;"	f	class:NeighborList
find	reduce_src/bkup/neighborList.h	/^	int find(L atom, Point3d p){$/;"	f	class:NeighborList
find	reduce_src/neighborList.h	/^	int find(L atom){$/;"	f	class:NeighborList
find	reduce_src/neighborList.h	/^	int find(L atom, Point3d p){$/;"	f	class:NeighborList
findAndStandardize	reduce_src/bkup/reduce.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/bkup/sym_add.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/bkup/sym_print.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/print_neighbors.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/reduce.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/sym_add.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/sym_print.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAndStandardize	reduce_src/test_reduce.cpp	/^void findAndStandardize(const char* name, const char* resname,$/;"	f
findAtom	reduce_src/FlipMemo.cpp	/^int FlipMemo::findAtom( PDBrec * atom ) const$/;"	f	class:FlipMemo
findAtom	reduce_src/RotDonor.cpp	/^int RotDonor::findAtom( PDBrec* atom ) const$/;"	f	class:RotDonor
findAtom	reduce_src/RotMethyl.cpp	/^int RotMethyl::findAtom( PDBrec* atom ) const$/;"	f	class:RotMethyl
findAtom	reduce_src/bkup/FlipMemo.cpp	/^int FlipMemo::findAtom( PDBrec * atom ) const$/;"	f	class:FlipMemo
findAtom	reduce_src/bkup/RotDonor.cpp	/^int RotDonor::findAtom( PDBrec* atom ) const$/;"	f	class:RotDonor
findAtom	reduce_src/bkup/RotMethyl.cpp	/^int RotMethyl::findAtom( PDBrec* atom ) const$/;"	f	class:RotMethyl
findCliques	reduce_src/AtomPositions.cpp	/^CliqueList AtomPositions::findCliques(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff) const {$/;"	f	class:AtomPositions
findCliques	reduce_src/bkup/AtomPositions.cpp	/^CliqueList AtomPositions::findCliques(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff) const {$/;"	f	class:AtomPositions
findConnAtoms	reduce_src/bkup/reduce.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/bkup/sym_add.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/bkup/sym_print.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/print_neighbors.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/reduce.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/sym_add.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/sym_print.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findConnAtoms	reduce_src/test_reduce.cpp	/^int findConnAtoms(const atomPlacementPlan& pp, ResBlk& theRes, char hac,$/;"	f
findContained	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::findContained( std::list< AtomDescr > const & atoms )$/;"	f	class:DotsForAtom
findContained	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::findContained( std::list< AtomDescr > const & atoms )$/;"	f	class:DotsForAtom
findDeg2Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg2Edge( int fn, int sn ) const$/;"	f	class:GraphToHoldScores
findDeg2Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg2Edge( int fn, int sn ) const$/;"	f	class:GraphToHoldScores
findDeg3Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg3Edge( int fn, int sn, int tn ) const$/;"	f	class:GraphToHoldScores
findDeg3Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg3Edge( int fn, int sn, int tn ) const$/;"	f	class:GraphToHoldScores
findDeg4Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg4Edge( int fn, int sn, int tn, int fthn ) const$/;"	f	class:GraphToHoldScores
findDeg4Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::findDeg4Edge( int fn, int sn, int tn, int fthn ) const$/;"	f	class:GraphToHoldScores
findRoot	toolclasses/DisjointSets.cpp	/^int DisjointSets::findRoot(int x) {$/;"	f	class:DisjointSets
findTable	reduce_src/CTab.cpp	/^ResConn* CTab::findTable(const std::string &resname) {$/;"	f	class:CTab
findTable	reduce_src/bkup/CTab.cpp	/^ResConn* CTab::findTable(const std::string &resname) {$/;"	f	class:CTab
find_distances	reduce_src/bkup/findNeighbors.cpp	/^void find_distances($/;"	f
find_distances	reduce_src/bkup/find_distances.cpp	/^void find_distances($/;"	f
find_distances	reduce_src/bkup/find_distances_new.cpp	/^void find_distances($/;"	f
find_distances	reduce_src/findNeighbors.cpp	/^void find_distances($/;"	f
find_distances	reduce_src/find_distances.cpp	/^void find_distances($/;"	f
find_distances	reduce_src/find_distances_new.cpp	/^void find_distances($/;"	f
firstRec	reduce_src/ResBlk.h	/^   const PDBrec& firstRec() const { return _firstRec; }$/;"	f	class:ResBlk
firstRec	reduce_src/bkup/ResBlk.h	/^   const PDBrec& firstRec() const { return _firstRec; }$/;"	f	class:ResBlk
fixAtomName	reduce_src/ElementInfo.cpp	/^bool fixAtomName(const char* atomname, const char* resname,int position) {$/;"	f
fixAtomName	reduce_src/bkup/ElementInfo.cpp	/^bool fixAtomName(const char* atomname, const char* resname,int position) {$/;"	f
fixupAmbigAtomName	reduce_src/ElementInfo.cpp	/^bool fixupAmbigAtomName(char* atomname, const char* resname, char* segID) {$/;"	f
fixupAmbigAtomName	reduce_src/bkup/ElementInfo.cpp	/^bool fixupAmbigAtomName(char* atomname, const char* resname, char* segID) {$/;"	f
fixupAtomKey	reduce_src/ResBlk.cpp	/^std::string ResBlk::fixupAtomKey(const PDBrec &r) const {$/;"	f	class:ResBlk
fixupAtomKey	reduce_src/bkup/ResBlk.cpp	/^std::string ResBlk::fixupAtomKey(const PDBrec &r) const {$/;"	f	class:ResBlk
fixupHeavyAtomElementType	reduce_src/bkup/reduce.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/bkup/sym_add.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/bkup/sym_print.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/print_neighbors.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/reduce.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/sym_add.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/sym_print.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
fixupHeavyAtomElementType	reduce_src/test_reduce.cpp	/^void fixupHeavyAtomElementType(ResBlk& theRes, CTab& hetDB) {$/;"	f
flags	reduce_src/FlipMemo.h	/^   int flags;$/;"	m	struct:ResFlipInfo_t
flags	reduce_src/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
flags	reduce_src/bkup/FlipMemo.h	/^   int flags;$/;"	m	struct:ResFlipInfo_t
flags	reduce_src/bkup/StdResH.h	/^     double dist; double ang1; double ang2; int flags;$/;"	m	struct:HydrogenPlanTable::addPlan_args
flatRoot	toolclasses/DisjointSets.h	/^inline int DisjointSets::flatRoot(int x) const {$/;"	f	class:DisjointSets
flipMaxScore	reduce_src/Mover.h	/^   double      flipMaxScore(int f) const { return   _flipMaxScore[f!=0]; }$/;"	f	class:Mover
flipMaxScore	reduce_src/bkup/Mover.h	/^   double      flipMaxScore(int f) const { return   _flipMaxScore[f!=0]; }$/;"	f	class:Mover
flipState	reduce_src/FlipMemo.cpp	/^int FlipMemo::flipState() const {$/;"	f	class:FlipMemo
flipState	reduce_src/RotDonor.h	/^   virtual int flipState() const { return 0; }$/;"	f	class:RotDonor
flipState	reduce_src/RotMethyl.h	/^   virtual int flipState() const { return 0; }$/;"	f	class:RotMethyl
flipState	reduce_src/bkup/FlipMemo.cpp	/^int FlipMemo::flipState() const {$/;"	f	class:FlipMemo
flipState	reduce_src/bkup/RotDonor.h	/^   virtual int flipState() const { return 0; }$/;"	f	class:RotDonor
flipState	reduce_src/bkup/RotMethyl.h	/^   virtual int flipState() const { return 0; }$/;"	f	class:RotMethyl
flipStateHasBadBump	reduce_src/Mover.h	/^   bool flipStateHasBadBump(int f) const { return _flipMaxBadBump[f!=0]; }$/;"	f	class:Mover
flipStateHasBadBump	reduce_src/bkup/Mover.h	/^   bool flipStateHasBadBump(int f) const { return _flipMaxBadBump[f!=0]; }$/;"	f	class:Mover
focus	libpdb/pdb++.h	/^		Real	focus;$/;"	m	struct:PDB::UserFocus
forceClique	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::forceClique( std::list< int > const & movers_in_clique )$/;"	f	class:GraphToHoldScores
forceClique	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::forceClique( std::list< int > const & movers_in_clique )$/;"	f	class:GraphToHoldScores
forceOrientations	reduce_src/AtomPositions.cpp	/^int AtomPositions::forceOrientations(const std::string& ofilename, std::vector<std::string>& orientNotes) {$/;"	f	class:AtomPositions
forceOrientations	reduce_src/bkup/AtomPositions.cpp	/^int AtomPositions::forceOrientations(const std::string& ofilename, std::vector<std::string>& orientNotes) {$/;"	f	class:AtomPositions
formatClique	reduce_src/CliqueList.cpp	/^void CliqueList::formatClique(std::vector<std::string>& cliqueNotes, int c) const {$/;"	f	class:CliqueList
formatClique	reduce_src/bkup/CliqueList.cpp	/^void CliqueList::formatClique(std::vector<std::string>& cliqueNotes, int c) const {$/;"	f	class:CliqueList
formatSingles	reduce_src/CliqueList.cpp	/^void CliqueList::formatSingles(std::vector<std::string>& cliqueNotes) const {$/;"	f	class:CliqueList
formatSingles	reduce_src/bkup/CliqueList.cpp	/^void CliqueList::formatSingles(std::vector<std::string>& cliqueNotes) const {$/;"	f	class:CliqueList
formul	libpdb/pdb++.h	/^		Formul	formul;$/;"	m	union:PDB::__anon5
formula	libpdb/pdb++.h	/^		char	formula[52];$/;"	m	struct:PDB::Formul
foundInList	reduce_src/Mover.cpp	/^bool foundInList(const PDBrec& a, Point3d p, const std::list<PDBrec*>& lst) {$/;"	f
foundInList	reduce_src/bkup/Mover.cpp	/^bool foundInList(const PDBrec& a, Point3d p, const std::list<PDBrec*>& lst) {$/;"	f
freeDJsubsets	toolclasses/DisjointSets.cpp	/^void freeDJsubsets(int** ss) {$/;"	f
from3B	reduce_src/FlipMemo.h	/^   int from3B;   \/\/ first 1-3 bond neighbor record$/;"	m	struct:ResFlipInfo_t
from3B	reduce_src/bkup/FlipMemo.h	/^   int from3B;   \/\/ first 1-3 bond neighbor record$/;"	m	struct:ResFlipInfo_t
fromO	reduce_src/FlipMemo.h	/^   int fromO;    \/\/ first orientation$/;"	m	struct:ResFlipInfo_t
fromO	reduce_src/bkup/FlipMemo.h	/^   int fromO;    \/\/ first orientation$/;"	m	struct:ResFlipInfo_t
fromPP	reduce_src/FlipMemo.h	/^   int fromPP;   \/\/ first proton placement record$/;"	m	struct:ResFlipInfo_t
fromPP	reduce_src/bkup/FlipMemo.h	/^   int fromPP;   \/\/ first proton placement record$/;"	m	struct:ResFlipInfo_t
fromScat	reduce_src/FlipMemo.h	/^   int fromScat; \/\/ first scorable atom$/;"	m	struct:ResFlipInfo_t
fromScat	reduce_src/bkup/FlipMemo.h	/^   int fromScat; \/\/ first scorable atom$/;"	m	struct:ResFlipInfo_t
ftnote	libpdb/pdb++.h	/^		Ftnote	ftnote;$/;"	m	union:PDB::__anon5
fullName	reduce_src/ElementInfo.h	/^   char* fullName() const { return _rep->_fullName; }$/;"	f	class:ElementInfo
fullName	reduce_src/bkup/ElementInfo.h	/^   char* fullName() const { return _rep->_fullName; }$/;"	f	class:ElementInfo
gamma	libpdb/pdb++.h	/^		Real	alpha, beta, gamma;$/;"	m	struct:PDB::Cryst1
gamma	reduce_src/bkup/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/bkup/reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/bkup/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/bkup/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/new_reduce.cpp	/^	double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/print_neighbors.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/sym_add.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/sym_print.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
gamma	reduce_src/test_reduce.cpp	/^        double   alpha, beta, gamma;$/;"	m	struct:Cryst1	file:
genHashM	toolclasses/Hash.cpp	/^unsigned long genHashM( const unsigned long sz ) {$/;"	f
genHplans	reduce_src/CTab.cpp	/^std::list<atomPlacementPlan*> ResConn::genHplans(const char* resname) {$/;"	f	class:ResConn
genHplans	reduce_src/bkup/CTab.cpp	/^std::list<atomPlacementPlan*> ResConn::genHplans(const char* resname) {$/;"	f	class:ResConn
genHydrogens	reduce_src/bkup/reduce.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/bkup/sym_add.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/bkup/sym_print.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/print_neighbors.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/reduce.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/sym_add.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/sym_print.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
genHydrogens	reduce_src/test_reduce.cpp	/^void genHydrogens(const atomPlacementPlan& pp, ResBlk& theRes, bool o2prime,$/;"	f
generateWaterPhantomHs	reduce_src/AtomPositions.cpp	/^void AtomPositions::generateWaterPhantomHs(std::list<PDBrec*>& waters) {$/;"	f	class:AtomPositions
generateWaterPhantomHs	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::generateWaterPhantomHs(std::list<PDBrec*>& waters) {$/;"	f	class:AtomPositions
get	reduce_src/CTab.h	/^   AtomConn* get(const std::string &atomname) const {$/;"	f	class:ResConn
get	reduce_src/ResBlk.h	/^   void get(const std::string& atomname, PDBrec* sp) {$/;"	f	class:ResBlk
get	reduce_src/ResBlk.h	/^   void get(const std::string& atomname, std::list<PDBrec*>& sp) {$/;"	f	class:ResBlk
get	reduce_src/StdResH.h	/^   StdResH* get(const std::string& resName) const {$/;"	f	class:HydrogenPlanTable
get	reduce_src/bkup/CTab.h	/^   AtomConn* get(const std::string &atomname) const {$/;"	f	class:ResConn
get	reduce_src/bkup/ResBlk.h	/^   void get(const std::string& atomname, PDBrec* sp) {$/;"	f	class:ResBlk
get	reduce_src/bkup/ResBlk.h	/^   void get(const std::string& atomname, std::list<PDBrec*>& sp) {$/;"	f	class:ResBlk
get	reduce_src/bkup/StdResH.h	/^   StdResH* get(const std::string& resName) const {$/;"	f	class:HydrogenPlanTable
get	toolclasses/Dict.cpp	/^T* Dict<K,T>::get(const K &key) const {$/;"	f	class:Dict
get	toolclasses/Dict.cpp	/^bool Dict<K,T>::get(const K &key, T& retval) const {$/;"	f	class:Dict
get	toolclasses/MultiDict.cpp	/^Seq<T> MultiDict<K,T>::get(const K &key) const {$/;"	f	class:MultiDict
getAssignedState	reduce_src/GraphToHoldScores.cpp	/^int Vertex_ths::getAssignedState() const$/;"	f	class:Vertex_ths
getAssignedState	reduce_src/bkup/GraphToHoldScores.cpp	/^int Vertex_ths::getAssignedState() const$/;"	f	class:Vertex_ths
getAtDescOfAllPos	reduce_src/FlipMemo.cpp	/^std::list<AtomDescr> FlipMemo::getAtDescOfAllPos(float &maxVDWrad)$/;"	f	class:FlipMemo
getAtDescOfAllPos	reduce_src/RotDonor.cpp	/^std::list<AtomDescr> RotDonor::getAtDescOfAllPos(float &maxVDWrad) {$/;"	f	class:RotDonor
getAtDescOfAllPos	reduce_src/RotMethyl.cpp	/^std::list<AtomDescr> RotMethyl::getAtDescOfAllPos(float &maxVDWrad) {$/;"	f	class:RotMethyl
getAtDescOfAllPos	reduce_src/bkup/FlipMemo.cpp	/^std::list<AtomDescr> FlipMemo::getAtDescOfAllPos(float &maxVDWrad)$/;"	f	class:FlipMemo
getAtDescOfAllPos	reduce_src/bkup/RotDonor.cpp	/^std::list<AtomDescr> RotDonor::getAtDescOfAllPos(float &maxVDWrad) {$/;"	f	class:RotDonor
getAtDescOfAllPos	reduce_src/bkup/RotMethyl.cpp	/^std::list<AtomDescr> RotMethyl::getAtDescOfAllPos(float &maxVDWrad) {$/;"	f	class:RotMethyl
getAtRadius	reduce_src/AtomDescr.h	/^	float   getAtRadius() const {return _atRadius;} ;$/;"	f	class:AtomDescr
getAtRadius	reduce_src/bkup/AtomDescr.h	/^	float   getAtRadius() const {return _atRadius;} ;$/;"	f	class:AtomDescr
getAtomDescr	reduce_src/PDBrec.h	/^	AtomDescr getAtomDescr() const {$/;"	f	class:PDBrec
getAtomDescr	reduce_src/bkup/PDBrec.h	/^	AtomDescr getAtomDescr() const {$/;"	f	class:PDBrec
getAtomPos	reduce_src/AtomDescr.h	/^	Point3d  getAtomPos() const {return _atomPos;};$/;"	f	class:AtomDescr
getAtomPos	reduce_src/bkup/AtomDescr.h	/^	Point3d  getAtomPos() const {return _atomPos;};$/;"	f	class:AtomDescr
getAtomPositionsPointer	reduce_src/GraphToHoldScores.cpp	/^AtomPositions * GraphToHoldScores::getAtomPositionsPointer() const$/;"	f	class:GraphToHoldScores
getAtomPositionsPointer	reduce_src/bkup/GraphToHoldScores.cpp	/^AtomPositions * GraphToHoldScores::getAtomPositionsPointer() const$/;"	f	class:GraphToHoldScores
getAtomResNum	reduce_src/AtomDescr.h	/^	int      getAtomResNum() const {return _atomResNo;};$/;"	f	class:AtomDescr
getAtomResNum	reduce_src/bkup/AtomDescr.h	/^	int      getAtomResNum() const {return _atomResNo;};$/;"	f	class:AtomDescr
getAtoms	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::getAtoms( std::vector< AtomDescr > & atoms ) const$/;"	f	class:Vertex_ths
getAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::getAtoms( std::vector< AtomDescr > & atoms ) const$/;"	f	class:Vertex_ths
getAtomsInHighOrderOverlap	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::getAtomsInHighOrderOverlap() const$/;"	f	class:Vertex_ths
getAtomsInHighOrderOverlap	reduce_src/MoveableNode.h	/^   std::vector< std::pair< AtomDescr, DotsForAtom * > > getAtomsInHighOrderOverlap() {return _atomsInHighOrderOverlap;}$/;"	f	class:MoveableNode
getAtomsInHighOrderOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::getAtomsInHighOrderOverlap() const$/;"	f	class:Vertex_ths
getAtomsInHighOrderOverlap	reduce_src/bkup/MoveableNode.h	/^   std::vector< std::pair< AtomDescr, DotsForAtom * > > getAtomsInHighOrderOverlap() {return _atomsInHighOrderOverlap;}$/;"	f	class:MoveableNode
getAtomsInHighOrderOverlapForNode	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getAtomsInHighOrderOverlapForNode( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getAtomsInHighOrderOverlapForNode	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getAtomsInHighOrderOverlapForNode( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getConect	reduce_src/PDBrec.cpp	/^void PDBrec::getConect(int cvec[]) const {$/;"	f	class:PDBrec
getConect	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::getConect(int cvec[]) const {$/;"	f	class:PDBrec
getConect	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::getConect(int cvec[]) const {$/;"	f	class:PDBrec
getConect	reduce_src/test_PDBrec.cpp	/^void PDBrec::getConect(int cvec[]) const {$/;"	f	class:PDBrec
getD2EIteratorAtEnd	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD2EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getD2EIteratorAtEnd	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD2EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getD3EIteratorAtEnd	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD3EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getD3EIteratorAtEnd	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD3EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getD3Edge	reduce_src/MoveableNode.cpp	/^Degree3Hyperedge * NodeAndEdgeManager::getD3Edge( int fn, int sn, int tn )$/;"	f	class:NodeAndEdgeManager
getD3Edge	reduce_src/MoveableNode.cpp	/^MoveableNode::getD3Edge( int fn, int sn, int tn )$/;"	f	class:MoveableNode
getD3Edge	reduce_src/bkup/MoveableNode.cpp	/^Degree3Hyperedge * NodeAndEdgeManager::getD3Edge( int fn, int sn, int tn )$/;"	f	class:NodeAndEdgeManager
getD3Edge	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::getD3Edge( int fn, int sn, int tn )$/;"	f	class:MoveableNode
getD4EIteratorAtEnd	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD4EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getD4EIteratorAtEnd	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getD4EIteratorAtEnd() const$/;"	f	class:GraphToHoldScores
getDegree2Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree2Edge( int fn, int sn)$/;"	f	class:GraphToHoldScores
getDegree2Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree2Edge( int fn, int sn)$/;"	f	class:GraphToHoldScores
getDegree3Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree3Edge( int fn, int sn, int tn )$/;"	f	class:GraphToHoldScores
getDegree3Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree3Edge( int fn, int sn, int tn )$/;"	f	class:GraphToHoldScores
getDegree3HyperedgeList	reduce_src/MoveableNode.cpp	/^std::list< Degree3Hyperedge * > &  MoveableNode::getDegree3HyperedgeList()$/;"	f	class:MoveableNode
getDegree3HyperedgeList	reduce_src/bkup/MoveableNode.cpp	/^std::list< Degree3Hyperedge * > &  MoveableNode::getDegree3HyperedgeList()$/;"	f	class:MoveableNode
getDegree4Edge	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree4Edge( int fn, int sn, int tn, int fthn )$/;"	f	class:GraphToHoldScores
getDegree4Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getDegree4Edge( int fn, int sn, int tn, int fthn )$/;"	f	class:GraphToHoldScores
getDegree4HyperedgeList	reduce_src/MoveableNode.cpp	/^std::list< Degree4Hyperedge * > &  MoveableNode::getDegree4HyperedgeList()$/;"	f	class:MoveableNode
getDegree4HyperedgeList	reduce_src/bkup/MoveableNode.cpp	/^std::list< Degree4Hyperedge * > &  MoveableNode::getDegree4HyperedgeList()$/;"	f	class:MoveableNode
getDotsForAtom	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::getDotsForAtom( int vertex, int atom )$/;"	f	class:DegreeThreeEdge_ths
getDotsForAtom	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::getDotsForAtom( int vertex, int atom )$/;"	f	class:DegreeTwoEdge_ths
getDotsForAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::getDotsForAtom( int vertex, int atom )$/;"	f	class:DegreeThreeEdge_ths
getDotsForAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::getDotsForAtom( int vertex, int atom )$/;"	f	class:DegreeTwoEdge_ths
getEdgeBetweenMoveableNodes	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes* NodeAndEdgeManager::getEdgeBetweenMoveableNodes(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
getEdgeBetweenMoveableNodes	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes* NodeAndEdgeManager::getEdgeBetweenMoveableNodes(int firstNodeIndex, int secondNodeIndex)$/;"	f	class:NodeAndEdgeManager
getEdgeList	reduce_src/MoveableNode.cpp	/^std::list<EdgeBetweenMoveableNodes* >* MoveableNode::getEdgeList() {return &_edgeList;}$/;"	f	class:MoveableNode
getEdgeList	reduce_src/bkup/MoveableNode.cpp	/^std::list<EdgeBetweenMoveableNodes* >* MoveableNode::getEdgeList() {return &_edgeList;}$/;"	f	class:MoveableNode
getEdgeScore	reduce_src/MoveableNode.cpp	/^double EdgeBetweenMoveableNodes::getEdgeScore(NodeState firstNodeState, NodeState secondNodeState) {return _theEdgeScoreMatrix->getEdgeScore(firstNodeState,secondNodeState);}$/;"	f	class:EdgeBetweenMoveableNodes
getEdgeScore	reduce_src/MoveableNode.cpp	/^double EdgeBetweenMoveableNodes::getEdgeScore(int Node1sIndex, NodeState Node1sState, int Node2sIndex, NodeState Node2sState)$/;"	f	class:EdgeBetweenMoveableNodes
getEdgeScore	reduce_src/MoveableNode.cpp	/^double EdgeScoreMatrix::getEdgeScore(NodeState firstNodeState, NodeState secondNodeState)$/;"	f	class:EdgeScoreMatrix
getEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^double EdgeBetweenMoveableNodes::getEdgeScore(NodeState firstNodeState, NodeState secondNodeState) {return _theEdgeScoreMatrix->getEdgeScore(firstNodeState,secondNodeState);}$/;"	f	class:EdgeBetweenMoveableNodes
getEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^double EdgeBetweenMoveableNodes::getEdgeScore(int Node1sIndex, NodeState Node1sState, int Node2sIndex, NodeState Node2sState)$/;"	f	class:EdgeBetweenMoveableNodes
getEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^double EdgeScoreMatrix::getEdgeScore(NodeState firstNodeState, NodeState secondNodeState)$/;"	f	class:EdgeScoreMatrix
getFirstIndexFocusedD2E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD2E() const$/;"	f	class:GraphToHoldScores
getFirstIndexFocusedD2E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD2E() const$/;"	f	class:GraphToHoldScores
getFirstIndexFocusedD3E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getFirstIndexFocusedD3E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getFirstIndexFocusedD4E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getFirstIndexFocusedD4E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFirstIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getFirstNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getFirstNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getFirstNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeTwoEdge_ths
getFirstNodeIndex	reduce_src/MoveableNode.cpp	/^int    EdgeBetweenMoveableNodes::getFirstNodeIndex() {return _firstNodeIndex;}$/;"	f	class:EdgeBetweenMoveableNodes
getFirstNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getFirstNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getFirstNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getFirstNodeIndex() const$/;"	f	class:DegreeTwoEdge_ths
getFirstNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^int    EdgeBetweenMoveableNodes::getFirstNodeIndex() {return _firstNodeIndex;}$/;"	f	class:EdgeBetweenMoveableNodes
getFourthIndexFocusedD4E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFourthIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getFourthIndexFocusedD4E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getFourthIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getFourthNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getFourthNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getFourthNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getFourthNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getGfxType	libpdb/pdb_type.cpp	/^PDB::getGfxType(const char *buf)$/;"	f	class:PDB
getHasAnyDegree3Hyperedges	reduce_src/MoveableNode.cpp	/^bool MoveableNode::getHasAnyDegree3Hyperedges() const$/;"	f	class:MoveableNode
getHasAnyDegree3Hyperedges	reduce_src/bkup/MoveableNode.cpp	/^bool MoveableNode::getHasAnyDegree3Hyperedges() const$/;"	f	class:MoveableNode
getHasAnyDegree4Hyperedges	reduce_src/MoveableNode.cpp	/^bool MoveableNode::getHasAnyDegree4Hyperedges() const$/;"	f	class:MoveableNode
getHasAnyDegree4Hyperedges	reduce_src/bkup/MoveableNode.cpp	/^bool MoveableNode::getHasAnyDegree4Hyperedges() const$/;"	f	class:MoveableNode
getHasAnyHighOrderOverlap	reduce_src/GraphToHoldScores.cpp	/^bool Vertex_ths::getHasAnyHighOrderOverlap() const$/;"	f	class:Vertex_ths
getHasAnyHighOrderOverlap	reduce_src/MoveableNode.h	/^	bool getHasAnyHighOrderOverlap() const { return _hasAnyHighOrderOverlap;}$/;"	f	class:MoveableNode
getHasAnyHighOrderOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^bool Vertex_ths::getHasAnyHighOrderOverlap() const$/;"	f	class:Vertex_ths
getHasAnyHighOrderOverlap	reduce_src/bkup/MoveableNode.h	/^	bool getHasAnyHighOrderOverlap() const { return _hasAnyHighOrderOverlap;}$/;"	f	class:MoveableNode
getIndex	reduce_src/MoveableNode.cpp	/^int Degree3Hyperedge::getIndex( int state1, int state2, int state3) const$/;"	f	class:Degree3Hyperedge
getIndex	reduce_src/MoveableNode.cpp	/^int Degree4Hyperedge::getIndex( int state1, int state2, int state3, int state4) const$/;"	f	class:Degree4Hyperedge
getIndex	reduce_src/bkup/MoveableNode.cpp	/^int Degree3Hyperedge::getIndex( int state1, int state2, int state3) const$/;"	f	class:Degree3Hyperedge
getIndex	reduce_src/bkup/MoveableNode.cpp	/^int Degree4Hyperedge::getIndex( int state1, int state2, int state3, int state4) const$/;"	f	class:Degree4Hyperedge
getIndexOfOtherNode	reduce_src/MoveableNode.cpp	/^int	   EdgeBetweenMoveableNodes::getIndexOfOtherNode(int indexOfOneNode)$/;"	f	class:EdgeBetweenMoveableNodes
getIndexOfOtherNode	reduce_src/bkup/MoveableNode.cpp	/^int	   EdgeBetweenMoveableNodes::getIndexOfOtherNode(int indexOfOneNode)$/;"	f	class:EdgeBetweenMoveableNodes
getInstance	reduce_src/MoveableNode.cpp	/^NodeAndEdgeManager* NodeAndEdgeManager::getInstance()$/;"	f	class:NodeAndEdgeManager
getInstance	reduce_src/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes* QueueOfToBeEliminatedNodes::getInstance()$/;"	f	class:QueueOfToBeEliminatedNodes
getInstance	reduce_src/bkup/MoveableNode.cpp	/^NodeAndEdgeManager* NodeAndEdgeManager::getInstance()$/;"	f	class:NodeAndEdgeManager
getInstance	reduce_src/bkup/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes* QueueOfToBeEliminatedNodes::getInstance()$/;"	f	class:QueueOfToBeEliminatedNodes
getIsEliminated	reduce_src/MoveableNode.cpp	/^bool 				MoveableNode::getIsEliminated() {return _isEliminated;}$/;"	f	class:MoveableNode
getIsEliminated	reduce_src/MoveableNode.cpp	/^bool   EdgeBetweenMoveableNodes::getIsEliminated() {return _isEliminated;}$/;"	f	class:EdgeBetweenMoveableNodes
getIsEliminated	reduce_src/bkup/MoveableNode.cpp	/^bool 				MoveableNode::getIsEliminated() {return _isEliminated;}$/;"	f	class:MoveableNode
getIsEliminated	reduce_src/bkup/MoveableNode.cpp	/^bool   EdgeBetweenMoveableNodes::getIsEliminated() {return _isEliminated;}$/;"	f	class:EdgeBetweenMoveableNodes
getMaxFoundVDWRad	reduce_src/AtomPositions.h	/^   float & getMaxFoundVDWRad() { return _maxVDWFound;}$/;"	f	class:AtomPositions
getMaxFoundVDWRad	reduce_src/bkup/AtomPositions.h	/^   float & getMaxFoundVDWRad() { return _maxVDWFound;}$/;"	f	class:AtomPositions
getMoveableNode	reduce_src/MoveableNode.h	/^	MoveableNode* getMoveableNode( int node ) const { return _theMNVector[ node ]; }$/;"	f	class:NodeAndEdgeManager
getMoveableNode	reduce_src/bkup/MoveableNode.h	/^	MoveableNode* getMoveableNode( int node ) const { return _theMNVector[ node ]; }$/;"	f	class:NodeAndEdgeManager
getMover	reduce_src/GraphToHoldScores.cpp	/^Mover* Vertex_ths::getMover() const$/;"	f	class:Vertex_ths
getMover	reduce_src/MoveableNode.h	/^	Mover* getMover() {return _mover;}$/;"	f	class:MoveableNode
getMover	reduce_src/bkup/GraphToHoldScores.cpp	/^Mover* Vertex_ths::getMover() const$/;"	f	class:Vertex_ths
getMover	reduce_src/bkup/MoveableNode.h	/^	Mover* getMover() {return _mover;}$/;"	f	class:MoveableNode
getMoverForNode	reduce_src/GraphToHoldScores.cpp	/^Mover* GraphToHoldScores::getMoverForNode( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getMoverForNode	reduce_src/bkup/GraphToHoldScores.cpp	/^Mover* GraphToHoldScores::getMoverForNode( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getNBondCutoff	reduce_src/AtomPositions.h	/^   int getNBondCutoff() const {return _nBondCutoff;}$/;"	f	class:AtomPositions
getNBondCutoff	reduce_src/bkup/AtomPositions.h	/^   int getNBondCutoff() const {return _nBondCutoff;}$/;"	f	class:AtomPositions
getNodeHasAnyHighOrderOverlap	reduce_src/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getNodeHasAnyHighOrderOverlap( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getNodeHasAnyHighOrderOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^bool GraphToHoldScores::getNodeHasAnyHighOrderOverlap( int vertex_id ) const$/;"	f	class:GraphToHoldScores
getNodeIndex	reduce_src/MoveableNode.cpp	/^int		  NodeAndStatePair::getNodeIndex() {return _nodeIndex;}$/;"	f	class:NodeAndStatePair
getNodeIndex	reduce_src/MoveableNode.cpp	/^int  				MoveableNode::getNodeIndex() {return _index;}$/;"	f	class:MoveableNode
getNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^int		  NodeAndStatePair::getNodeIndex() {return _nodeIndex;}$/;"	f	class:NodeAndStatePair
getNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^int  				MoveableNode::getNodeIndex() {return _index;}$/;"	f	class:MoveableNode
getNodeScore	reduce_src/MoveableNode.cpp	/^double NodeScoreVector::getNodeScore(NodeState ownersState)$/;"	f	class:NodeScoreVector
getNodeScore	reduce_src/bkup/MoveableNode.cpp	/^double NodeScoreVector::getNodeScore(NodeState ownersState)$/;"	f	class:NodeScoreVector
getNodeScoreForState	reduce_src/GraphToHoldScores.cpp	/^float GraphToHoldScores::getNodeScoreForState( int vertex_id, int state) const$/;"	f	class:GraphToHoldScores
getNodeScoreForState	reduce_src/bkup/GraphToHoldScores.cpp	/^float GraphToHoldScores::getNodeScoreForState( int vertex_id, int state) const$/;"	f	class:GraphToHoldScores
getNodeState	reduce_src/MoveableNode.cpp	/^NodeState NodeAndStatePair::getNodeState() {return _nodeState;}$/;"	f	class:NodeAndStatePair
getNodeState	reduce_src/bkup/MoveableNode.cpp	/^NodeState NodeAndStatePair::getNodeState() {return _nodeState;}$/;"	f	class:NodeAndStatePair
getNodeStateInOptimalNetworkConf	reduce_src/MoveableNode.cpp	/^NodeState			MoveableNode::getNodeStateInOptimalNetworkConf(std::vector<NodeState>& theOptNetworkState)$/;"	f	class:MoveableNode
getNodeStateInOptimalNetworkConf	reduce_src/bkup/MoveableNode.cpp	/^NodeState			MoveableNode::getNodeStateInOptimalNetworkConf(std::vector<NodeState>& theOptNetworkState)$/;"	f	class:MoveableNode
getNodeStateScore	reduce_src/MoveableNode.cpp	/^double				MoveableNode::getNodeStateScore(NodeState theNodeState) {return _theNodeScoreVect->getNodeScore(theNodeState);}$/;"	f	class:MoveableNode
getNodeStateScore	reduce_src/bkup/MoveableNode.cpp	/^double				MoveableNode::getNodeStateScore(NodeState theNodeState) {return _theNodeScoreVect->getNodeScore(theNodeState);}$/;"	f	class:MoveableNode
getNumAtoms	reduce_src/GraphToHoldScores.cpp	/^int Vertex_ths::getNumAtoms() const$/;"	f	class:Vertex_ths
getNumAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^int Vertex_ths::getNumAtoms() const$/;"	f	class:Vertex_ths
getNumEnabledStates	reduce_src/GraphToHoldScores.cpp	/^int Vertex_ths::getNumEnabledStates() const$/;"	f	class:Vertex_ths
getNumEnabledStates	reduce_src/bkup/GraphToHoldScores.cpp	/^int Vertex_ths::getNumEnabledStates() const$/;"	f	class:Vertex_ths
getNumEnabledStatesForNode	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getNumEnabledStatesForNode( int vertex_index ) const$/;"	f	class:GraphToHoldScores
getNumEnabledStatesForNode	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getNumEnabledStatesForNode( int vertex_index ) const$/;"	f	class:GraphToHoldScores
getNumNodes	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getNumNodes() const$/;"	f	class:GraphToHoldScores
getNumNodes	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getNumNodes() const$/;"	f	class:GraphToHoldScores
getNumStates	reduce_src/GraphToHoldScores.cpp	/^int Vertex_ths::getNumStates() const$/;"	f	class:Vertex_ths
getNumStates	reduce_src/bkup/GraphToHoldScores.cpp	/^int Vertex_ths::getNumStates() const$/;"	f	class:Vertex_ths
getNumStatesForNode	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getNumStatesForNode(int vertex_index ) const$/;"	f	class:GraphToHoldScores
getNumStatesForNode	reduce_src/MoveableNode.cpp	/^NodeAndEdgeManager::getNumStatesForNode( int node ) const$/;"	f	class:NodeAndEdgeManager
getNumStatesForNode	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getNumStatesForNode(int vertex_index ) const$/;"	f	class:GraphToHoldScores
getNumStatesForNode	reduce_src/bkup/MoveableNode.cpp	/^NodeAndEdgeManager::getNumStatesForNode( int node ) const$/;"	f	class:NodeAndEdgeManager
getNumberOfEdges	reduce_src/MoveableNode.cpp	/^int					MoveableNode::getNumberOfEdges() {return _edgeList.size();}$/;"	f	class:MoveableNode
getNumberOfEdges	reduce_src/bkup/MoveableNode.cpp	/^int					MoveableNode::getNumberOfEdges() {return _edgeList.size();}$/;"	f	class:MoveableNode
getNumberOfPossibleStates	reduce_src/MoveableNode.cpp	/^NodeState			MoveableNode::getNumberOfPossibleStates() {return _maxNodeStates;}$/;"	f	class:MoveableNode
getNumberOfPossibleStates	reduce_src/bkup/MoveableNode.cpp	/^NodeState			MoveableNode::getNumberOfPossibleStates() {return _maxNodeStates;}$/;"	f	class:MoveableNode
getOptimalNetworkState	reduce_src/MoveableNode.h	/^	std::vector<NodeState> const & getOptimalNetworkState(){return _optimalNetworkStateVector;};	$/;"	f	class:NodeAndEdgeManager::std
getOptimalNetworkState	reduce_src/bkup/MoveableNode.h	/^	std::vector<NodeState> const & getOptimalNetworkState(){return _optimalNetworkStateVector;};	$/;"	f	class:NodeAndEdgeManager::std
getOptimumNodeState	reduce_src/MoveableNode.cpp	/^NodeState OptimizedNodeStateMatrix3::getOptimumNodeState($/;"	f	class:OptimizedNodeStateMatrix3
getOptimumNodeState	reduce_src/MoveableNode.cpp	/^NodeState OptimizedNodeStateMatrix::getOptimumNodeState(NodeState firstNodeState, NodeState secondNodeState)$/;"	f	class:OptimizedNodeStateMatrix
getOptimumNodeState	reduce_src/MoveableNode.cpp	/^NodeState OptimizedNodeStateVector::getOptimumNodeState(NodeState dependentNodeState)$/;"	f	class:OptimizedNodeStateVector
getOptimumNodeState	reduce_src/bkup/MoveableNode.cpp	/^NodeState OptimizedNodeStateMatrix3::getOptimumNodeState($/;"	f	class:OptimizedNodeStateMatrix3
getOptimumNodeState	reduce_src/bkup/MoveableNode.cpp	/^NodeState OptimizedNodeStateMatrix::getOptimumNodeState(NodeState firstNodeState, NodeState secondNodeState)$/;"	f	class:OptimizedNodeStateMatrix
getOptimumNodeState	reduce_src/bkup/MoveableNode.cpp	/^NodeState OptimizedNodeStateVector::getOptimumNodeState(NodeState dependentNodeState)$/;"	f	class:OptimizedNodeStateVector
getOptionsOnTheMac	reduce_src/bkup/new_reduce.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/bkup/reduce.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/bkup/sym_add.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/bkup/sym_print.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/new_reduce.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/print_neighbors.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/reduce.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/sym_add.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/sym_print.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOptionsOnTheMac	reduce_src/test_reduce.cpp	/^char *getOptionsOnTheMac() {$/;"	f
getOriginalAtomPtr	reduce_src/AtomDescr.h	/^	PDBrec* getOriginalAtomPtr() const {return _originalAtom;}$/;"	f	class:AtomDescr
getOriginalAtomPtr	reduce_src/bkup/AtomDescr.h	/^	PDBrec* getOriginalAtomPtr() const {return _originalAtom;}$/;"	f	class:AtomDescr
getOtherNode	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths * DegreeTwoEdge_ths::getOtherNode( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
getOtherNode	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths * DegreeTwoEdge_ths::getOtherNode( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
getOtherNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getOtherNodeIndex( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
getOtherNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getOtherNodeIndex( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
getPenalties	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::getPenalties( std::vector< float > & penalties ) const$/;"	f	class:Vertex_ths
getPenalties	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::getPenalties($/;"	f	class:GraphToHoldScores
getPenalties	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::getPenalties( std::vector< float > & penalties ) const$/;"	f	class:Vertex_ths
getPenalties	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::getPenalties($/;"	f	class:GraphToHoldScores
getPointerToOtherNode	reduce_src/MoveableNode.cpp	/^MoveableNode* EdgeBetweenMoveableNodes::getPointerToOtherNode(int indexOfOneNode)$/;"	f	class:EdgeBetweenMoveableNodes
getPointerToOtherNode	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode* EdgeBetweenMoveableNodes::getPointerToOtherNode(int indexOfOneNode)$/;"	f	class:EdgeBetweenMoveableNodes
getScore	reduce_src/MoveableNode.cpp	/^float Degree3Hyperedge::getScore( int state1, int state2, int state3) const$/;"	f	class:Degree3Hyperedge
getScore	reduce_src/MoveableNode.cpp	/^float Degree4Hyperedge::getScore( int state1, int state2, int state3, int state4) const$/;"	f	class:Degree4Hyperedge
getScore	reduce_src/bkup/MoveableNode.cpp	/^float Degree3Hyperedge::getScore( int state1, int state2, int state3) const$/;"	f	class:Degree3Hyperedge
getScore	reduce_src/bkup/MoveableNode.cpp	/^float Degree4Hyperedge::getScore( int state1, int state2, int state3, int state4) const$/;"	f	class:Degree4Hyperedge
getScoreForAssignedState	reduce_src/GraphToHoldScores.cpp	/^float DegreeFourEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeFourEdge_ths
getScoreForAssignedState	reduce_src/GraphToHoldScores.cpp	/^float DegreeThreeEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeThreeEdge_ths
getScoreForAssignedState	reduce_src/GraphToHoldScores.cpp	/^float DegreeTwoEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeTwoEdge_ths
getScoreForAssignedState	reduce_src/GraphToHoldScores.cpp	/^float Vertex_ths::getScoreForAssignedState() const$/;"	f	class:Vertex_ths
getScoreForAssignedState	reduce_src/bkup/GraphToHoldScores.cpp	/^float DegreeFourEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeFourEdge_ths
getScoreForAssignedState	reduce_src/bkup/GraphToHoldScores.cpp	/^float DegreeThreeEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeThreeEdge_ths
getScoreForAssignedState	reduce_src/bkup/GraphToHoldScores.cpp	/^float DegreeTwoEdge_ths::getScoreForAssignedState() const$/;"	f	class:DegreeTwoEdge_ths
getScoreForAssignedState	reduce_src/bkup/GraphToHoldScores.cpp	/^float Vertex_ths::getScoreForAssignedState() const$/;"	f	class:Vertex_ths
getScoreForEnabledState	reduce_src/GraphToHoldScores.cpp	/^float Vertex_ths::getScoreForEnabledState( int enabled_state ) const$/;"	f	class:Vertex_ths
getScoreForEnabledState	reduce_src/bkup/GraphToHoldScores.cpp	/^float Vertex_ths::getScoreForEnabledState( int enabled_state ) const$/;"	f	class:Vertex_ths
getScoreForEnabledStates	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeFourEdge_ths
getScoreForEnabledStates	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeThreeEdge_ths
getScoreForEnabledStates	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeTwoEdge_ths
getScoreForEnabledStates	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeFourEdge_ths
getScoreForEnabledStates	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeThreeEdge_ths
getScoreForEnabledStates	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::getScoreForEnabledStates($/;"	f	class:DegreeTwoEdge_ths
getScoreForFocusedD2E	reduce_src/GraphToHoldScores.cpp	/^float GraphToHoldScores::getScoreForFocusedD2E( int state1, int state2 ) const$/;"	f	class:GraphToHoldScores
getScoreForFocusedD2E	reduce_src/bkup/GraphToHoldScores.cpp	/^float GraphToHoldScores::getScoreForFocusedD2E( int state1, int state2 ) const$/;"	f	class:GraphToHoldScores
getScoreForFocusedD3E	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForFocusedD3E( int state1, int state2, int state3) const$/;"	f	class:GraphToHoldScores
getScoreForFocusedD3E	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForFocusedD3E( int state1, int state2, int state3) const$/;"	f	class:GraphToHoldScores
getScoreForFocusedD4E	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForFocusedD4E( int state1, int state2, int state3, int state4) const$/;"	f	class:GraphToHoldScores
getScoreForFocusedD4E	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForFocusedD4E( int state1, int state2, int state3, int state4) const$/;"	f	class:GraphToHoldScores
getScoreForStateAssignment	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForStateAssignment($/;"	f	class:GraphToHoldScores
getScoreForStateAssignment	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getScoreForStateAssignment($/;"	f	class:GraphToHoldScores
getScoreGivenSetVertexOrdering	reduce_src/MoveableNode.cpp	/^float Degree3Hyperedge::getScoreGivenSetVertexOrdering( int state_vert1, int state_vert2, int state_vert3) const$/;"	f	class:Degree3Hyperedge
getScoreGivenSetVertexOrdering	reduce_src/MoveableNode.cpp	/^float Degree4Hyperedge::getScoreGivenSetVertexOrdering( int state_vert1, int state_vert2, int state_vert3, int state_vert4) const$/;"	f	class:Degree4Hyperedge
getScoreGivenSetVertexOrdering	reduce_src/bkup/MoveableNode.cpp	/^float Degree3Hyperedge::getScoreGivenSetVertexOrdering( int state_vert1, int state_vert2, int state_vert3) const$/;"	f	class:Degree3Hyperedge
getScoreGivenSetVertexOrdering	reduce_src/bkup/MoveableNode.cpp	/^float Degree4Hyperedge::getScoreGivenSetVertexOrdering( int state_vert1, int state_vert2, int state_vert3, int state_vert4) const$/;"	f	class:Degree4Hyperedge
getScoreOfOptimalNetworkConfiguration	reduce_src/MoveableNode.cpp	/^double NodeAndEdgeManager::getScoreOfOptimalNetworkConfiguration()$/;"	f	class:NodeAndEdgeManager
getScoreOfOptimalNetworkConfiguration	reduce_src/bkup/MoveableNode.cpp	/^double NodeAndEdgeManager::getScoreOfOptimalNetworkConfiguration()$/;"	f	class:NodeAndEdgeManager
getSecondIndexFocusedD2E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD2E() const$/;"	f	class:GraphToHoldScores
getSecondIndexFocusedD2E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD2E() const$/;"	f	class:GraphToHoldScores
getSecondIndexFocusedD3E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getSecondIndexFocusedD3E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getSecondIndexFocusedD4E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getSecondIndexFocusedD4E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getSecondIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getSecondNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getSecondNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getSecondNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeTwoEdge_ths
getSecondNodeIndex	reduce_src/MoveableNode.cpp	/^int    EdgeBetweenMoveableNodes::getSecondNodeIndex() {return _secondNodeIndex;}$/;"	f	class:EdgeBetweenMoveableNodes
getSecondNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getSecondNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getSecondNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeTwoEdge_ths::getSecondNodeIndex() const$/;"	f	class:DegreeTwoEdge_ths
getSecondNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^int    EdgeBetweenMoveableNodes::getSecondNodeIndex() {return _secondNodeIndex;}$/;"	f	class:EdgeBetweenMoveableNodes
getThirdIndexFocusedD3E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getThirdIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getThirdIndexFocusedD3E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getThirdIndexFocusedD3E() const$/;"	f	class:GraphToHoldScores
getThirdIndexFocusedD4E	reduce_src/GraphToHoldScores.cpp	/^int GraphToHoldScores::getThirdIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getThirdIndexFocusedD4E	reduce_src/bkup/GraphToHoldScores.cpp	/^int GraphToHoldScores::getThirdIndexFocusedD4E() const$/;"	f	class:GraphToHoldScores
getThirdNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getThirdNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getThirdNodeIndex	reduce_src/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getThirdNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getThirdNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeFourEdge_ths::getThirdNodeIndex() const$/;"	f	class:DegreeFourEdge_ths
getThirdNodeIndex	reduce_src/bkup/GraphToHoldScores.cpp	/^int DegreeThreeEdge_ths::getThirdNodeIndex() const$/;"	f	class:DegreeThreeEdge_ths
getType	libpdb/pdb_type.cpp	/^PDB::getType(const char *buf)$/;"	f	class:PDB
getVertexIndex	reduce_src/MoveableNode.cpp	/^int Degree3Hyperedge::getVertexIndex( int ind )$/;"	f	class:Degree3Hyperedge
getVertexIndex	reduce_src/MoveableNode.cpp	/^int Degree4Hyperedge::getVertexIndex( int ind )$/;"	f	class:Degree4Hyperedge
getVertexIndex	reduce_src/bkup/MoveableNode.cpp	/^int Degree3Hyperedge::getVertexIndex( int ind )$/;"	f	class:Degree3Hyperedge
getVertexIndex	reduce_src/bkup/MoveableNode.cpp	/^int Degree4Hyperedge::getVertexIndex( int ind )$/;"	f	class:Degree4Hyperedge
getVertexPtr	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::getVertexPtr( int vertex ) const$/;"	f	class:GraphToHoldScores
getVertexPtr	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::getVertexPtr( int vertex ) const$/;"	f	class:GraphToHoldScores
get_chain_index	reduce_src/bkup/neighborList.h	/^static int get_chain_index(int index){$/;"	f
get_chain_index	reduce_src/neighborList.h	/^static int get_chain_index(int index){$/;"	f
get_neighbors	reduce_src/AtomPositions.h	/^   std::list< std::pair<PDBrec*,Point3d> > get_neighbors(const Point3d& p,$/;"	f	class:AtomPositions
get_neighbors	reduce_src/bkup/AtomPositions.h	/^   std::list< std::pair<PDBrec*,Point3d> > get_neighbors(const Point3d& p,$/;"	f	class:AtomPositions
get_neighbors	reduce_src/bkup/neighborList.h	/^	std::list< std::pair<L,Point3d> > get_neighbors(Point3d p, Coord min_range, Coord max_range=-1.0f){$/;"	f	class:NeighborList
get_neighbors	reduce_src/bkup/old_neighborList.cpp	/^std::list< std::pair<int,Point3d> > NeighborList::get_neighbors(int index, Coord min_range, Coord max_range){$/;"	f	class:NeighborList
get_neighbors	reduce_src/neighborList.h	/^	std::list< std::pair<L,Point3d> > get_neighbors(Point3d p, Coord min_range, Coord max_range=-1.0f){$/;"	f	class:NeighborList
get_neighbors	reduce_src/old_neighborList.cpp	/^std::list< std::pair<int,Point3d> > NeighborList::get_neighbors(int index, Coord min_range, Coord max_range){$/;"	f	class:NeighborList
gfxChars	libpdb/pdb_type.cpp	/^PDB::gfxChars(GfxType gt)$/;"	f	class:PDB
given	libpdb/pdb++.h	/^		int	given;$/;"	m	struct:PDB::Mtrix
halt	toolclasses/utility.cpp	/^void halt(const char *message) {$/;"	f
hasD3Edge	reduce_src/MoveableNode.cpp	/^bool MoveableNode::hasD3Edge( int fn, int sn, int tn )$/;"	f	class:MoveableNode
hasD3Edge	reduce_src/bkup/MoveableNode.cpp	/^bool MoveableNode::hasD3Edge( int fn, int sn, int tn )$/;"	f	class:MoveableNode
hasFeature	reduce_src/AtomConn.h	/^int hasFeature(int f) const { return _flags & f; }$/;"	f	class:atomPlacementPlan
hasFeature	reduce_src/bkup/AtomConn.h	/^int hasFeature(int f) const { return _flags & f; }$/;"	f	class:atomPlacementPlan
hasHires	reduce_src/FlipMemo.h	/^   virtual bool hasHires() const { return FALSE; }$/;"	f	class:FlipMemo
hasHires	reduce_src/RotDonor.h	/^   virtual bool hasHires() const { return TRUE; }$/;"	f	class:RotDonor
hasHires	reduce_src/RotMethyl.h	/^   virtual bool hasHires() const { return TRUE; }$/;"	f	class:RotMethyl
hasHires	reduce_src/bkup/FlipMemo.h	/^   virtual bool hasHires() const { return FALSE; }$/;"	f	class:FlipMemo
hasHires	reduce_src/bkup/RotDonor.h	/^   virtual bool hasHires() const { return TRUE; }$/;"	f	class:RotDonor
hasHires	reduce_src/bkup/RotMethyl.h	/^   virtual bool hasHires() const { return TRUE; }$/;"	f	class:RotMethyl
hasProp	reduce_src/ElementInfo.h	/^   int   hasProp(int p) const { return _rep->_flags & p; }$/;"	f	class:ElementInfo
hasProp	reduce_src/PDBrec.h	/^   bool hasProp(int p) const { return _rep->_e.hasProp(p);   }$/;"	f	class:PDBrec
hasProp	reduce_src/bkup/ElementInfo.h	/^   int   hasProp(int p) const { return _rep->_flags & p; }$/;"	f	class:ElementInfo
hasProp	reduce_src/bkup/PDBrec.h	/^   bool hasProp(int p) const { return _rep->_e.hasProp(p);   }$/;"	f	class:PDBrec
hash	reduce_src/LocBlk.h	/^inline unsigned long hash(const LocBlk& key, unsigned long M) {$/;"	f
hash	reduce_src/bkup/LocBlk.h	/^inline unsigned long hash(const LocBlk& key, unsigned long M) {$/;"	f
hash	toolclasses/Hash.cpp	/^unsigned long hash(char key, unsigned long M) {$/;"	f
hash	toolclasses/Hash.cpp	/^unsigned long hash(const char *key, unsigned long M) {$/;"	f
hash	toolclasses/Hash.cpp	/^unsigned long hash(long key, unsigned long M) {$/;"	f
haveReportedOptimalNetworkScoreForSingleton	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::haveReportedOptimalNetworkScoreForSingleton(double optScore)$/;"	f	class:NodeAndEdgeManager
haveReportedOptimalNetworkScoreForSingleton	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::haveReportedOptimalNetworkScoreForSingleton(double optScore)$/;"	f	class:NodeAndEdgeManager
hd	toolclasses/Queue.h	/^   const T& hd() const { return List<T>::operator*(); }$/;"	f	class:Queue
hd	toolclasses/Seq.h	/^   T hd() const {$/;"	f	class:Seq
header	libpdb/pdb++.h	/^		Header	header;$/;"	m	union:PDB::__anon5
heavyAtom	reduce_src/RotDonor.h	/^   const PDBrec& heavyAtom() const { return _heavyAtom; }$/;"	f	class:RotDonor
heavyAtom	reduce_src/RotMethyl.h	/^   const PDBrec& heavyAtom() const { return _heavyAtom; }$/;"	f	class:RotMethyl
heavyAtom	reduce_src/bkup/RotDonor.h	/^   const PDBrec& heavyAtom() const { return _heavyAtom; }$/;"	f	class:RotDonor
heavyAtom	reduce_src/bkup/RotMethyl.h	/^   const PDBrec& heavyAtom() const { return _heavyAtom; }$/;"	f	class:RotMethyl
helix	libpdb/pdb++.h	/^		Helix	helix;$/;"	m	union:PDB::__anon5
het	libpdb/pdb++.h	/^		Het	het;$/;"	m	union:PDB::__anon5
hetGrp	libpdb/pdb++.h	/^		Residue	hetGrp;$/;"	m	struct:PDB::Het
hetId	libpdb/pdb++.h	/^		RName	hetId;$/;"	m	struct:PDB::Formul
hetatm	libpdb/pdb++.h	/^		Hetatm	hetatm;$/;"	m	union:PDB::__anon5
hints	libtbx_refresh.py	/^    hints=[$/;"	v
hither	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
hname	reduce_src/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
hname	reduce_src/bkup/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
hsortFlat	toolclasses/DisjointSets.cpp	/^void DisjointSets::hsortFlat(int vec[], int len) const {$/;"	f	class:DisjointSets
hy36decode	reduce_src/bkup/hybrid_36_c.c	/^hy36decode(unsigned width, const char* s, unsigned s_size, int* result)$/;"	f
hy36decode	reduce_src/hybrid_36_c.c	/^hy36decode(unsigned width, const char* s, unsigned s_size, int* result)$/;"	f
hy36encode	reduce_src/bkup/hybrid_36_c.c	/^hy36encode(unsigned width, int value, char* result)$/;"	f
hy36encode	reduce_src/hybrid_36_c.c	/^hy36encode(unsigned width, int value, char* result)$/;"	f
hydrogen	libpdb/pdb++.h	/^			char	hydrogen[2][6];$/;"	m	struct:PDB::Conect::__anon2
id	libpdb/pdb++.h	/^		Id	id;$/;"	m	struct:PDB::Helix
id	libpdb/pdb++.h	/^		Id	id;$/;"	m	struct:PDB::Sheet
id	libpdb/pdb++.h	/^		Id	id;$/;"	m	struct:PDB::Site
id	libpdb/pdb++.h	/^		Id	id;$/;"	m	struct:PDB::Turn
id	libpdb/pdb++.h	/^		PName	id;$/;"	m	struct:PDB::Header
id	libpdb/pdb++.h	/^		PName	id;$/;"	m	struct:PDB::Sprsde
id	libpdb/pdb++.h	/^		char	id[8];$/;"	m	struct:PDB::Revdat
id	toolclasses/DisjointSets.cpp	/^int DisjointSets::id(int x) const {$/;"	f	class:DisjointSets
idMap	libpdb/pdb++.h	/^		PName	idMap[8];$/;"	m	struct:PDB::Obslte
implRad	reduce_src/ElementInfo.h	/^   float implRad()  const { return _rep->_iRad; }$/;"	f	class:ElementInfo
implRad	reduce_src/PDBrec.h	/^   float     implRad() const { return _rep->_e.implRad();    }$/;"	f	class:PDBrec
implRad	reduce_src/bkup/ElementInfo.h	/^   float implRad()  const { return _rep->_iRad; }$/;"	f	class:ElementInfo
implRad	reduce_src/bkup/PDBrec.h	/^   float     implRad() const { return _rep->_e.implRad();    }$/;"	f	class:PDBrec
impossibleCovalent	reduce_src/Mover.cpp	/^bool impossibleCovalent(const PDBrec& src, const PDBrec& targ, std::list<PDBrec*>& atmList) {$/;"	f
impossibleCovalent	reduce_src/bkup/Mover.cpp	/^bool impossibleCovalent(const PDBrec& src, const PDBrec& targ, std::list<PDBrec*>& atmList) {$/;"	f
incidentUpon	reduce_src/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::incidentUpon( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
incidentUpon	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::incidentUpon( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
incrementD2EIterator	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD2EIterator()$/;"	f	class:GraphToHoldScores
incrementD2EIterator	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD2EIterator()$/;"	f	class:GraphToHoldScores
incrementD3EIterator	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD3EIterator()$/;"	f	class:GraphToHoldScores
incrementD3EIterator	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD3EIterator()$/;"	f	class:GraphToHoldScores
incrementD4EIterator	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD4EIterator()$/;"	f	class:GraphToHoldScores
incrementD4EIterator	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::incrementD4EIterator()$/;"	f	class:GraphToHoldScores
index	reduce_src/BumperPoint.h	/^   int index() const {return _index;}$/;"	f	class:BumperPoint
index	reduce_src/PDBrec.h	/^   int index() const {return _index;}$/;"	f	class:PDBrec
index	reduce_src/bkup/BumperPoint.h	/^   int index() const {return _index;}$/;"	f	class:BumperPoint
index	reduce_src/bkup/PDBrec.h	/^   int index() const {return _index;}$/;"	f	class:PDBrec
index_	reduce_src/GraphToHoldScores.h	/^	int const index_;$/;"	m	class:Vertex_ths
index_	reduce_src/bkup/GraphToHoldScores.h	/^	int const index_;$/;"	m	class:Vertex_ths
indsCurrent_	reduce_src/GraphToHoldScores.h	/^	mutable bool indsCurrent_;$/;"	m	class:DotsForAtom
indsCurrent_	reduce_src/bkup/GraphToHoldScores.h	/^	mutable bool indsCurrent_;$/;"	m	class:DotsForAtom
indsOfDotsOn_	reduce_src/GraphToHoldScores.h	/^	mutable int * indsOfDotsOn_;$/;"	m	class:DotsForAtom
indsOfDotsOn_	reduce_src/bkup/GraphToHoldScores.h	/^	mutable int * indsOfDotsOn_;$/;"	m	class:DotsForAtom
informIncidentEdgesAboutBootedAtoms	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::informIncidentEdgesAboutBootedAtoms()$/;"	f	class:Vertex_ths
informIncidentEdgesAboutBootedAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::informIncidentEdgesAboutBootedAtoms()$/;"	f	class:Vertex_ths
init	reduce_src/bkup/neighborList.h	/^	void init(std::vector<L> atoms){$/;"	f	class:NeighborList
init	reduce_src/bkup/old_neighborList.cpp	/^int NeighborList::init(const std::vector<L> atoms, scitbx::af::double6 cell, char* space_grp){$/;"	f	class:NeighborList
init	reduce_src/neighborList.h	/^	void init(std::vector<L> atoms){$/;"	f	class:NeighborList
init	reduce_src/old_neighborList.cpp	/^int NeighborList::init(const std::vector<L> atoms, scitbx::af::double6 cell, char* space_grp){$/;"	f	class:NeighborList
initHasBadBump	reduce_src/Mover.h	/^   bool initHasBadBump() const { return _initHasBadBump; }$/;"	f	class:Mover
initHasBadBump	reduce_src/bkup/Mover.h	/^   bool initHasBadBump() const { return _initHasBadBump; }$/;"	f	class:Mover
initOrientation	reduce_src/Mover.h	/^   bool initOrientation(AtomPositions &xyz,$/;"	f	class:Mover
initOrientation	reduce_src/bkup/Mover.h	/^   bool initOrientation(AtomPositions &xyz,$/;"	f	class:Mover
initScore	reduce_src/Mover.h	/^   double   initScore() const { return _initScore; }$/;"	f	class:Mover
initScore	reduce_src/bkup/Mover.h	/^   double   initScore() const { return _initScore; }$/;"	f	class:Mover
init_neighborList	reduce_src/AtomPositions.h	/^   void init_neighborList(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff){$/;"	f	class:AtomPositions
init_neighborList	reduce_src/bkup/AtomPositions.h	/^   void init_neighborList(scitbx::af::double6 cell, char* space_grp, Coord distance_cutoff){$/;"	f	class:AtomPositions
initializeCliqueMovers	reduce_src/AtomPositions.cpp	/^AtomPositions::initializeCliqueMovers( $/;"	f	class:AtomPositions
initializeCliqueMovers	reduce_src/bkup/AtomPositions.cpp	/^AtomPositions::initializeCliqueMovers( $/;"	f	class:AtomPositions
initializeScoreIfNotSet	reduce_src/Mover.h	/^   void initializeScoreIfNotSet(double val, bool hasBadBump) {$/;"	f	class:Mover
initializeScoreIfNotSet	reduce_src/bkup/Mover.h	/^   void initializeScoreIfNotSet(double val, bool hasBadBump) {$/;"	f	class:Mover
initialize_everything	libpdb/pdb++.cpp	/^PDB::initialize_everything()$/;"	f	class:PDB
initiateCycleReduction	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateCycleReduction()$/;"	f	class:NodeAndEdgeManager
initiateCycleReduction	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateCycleReduction()$/;"	f	class:NodeAndEdgeManager
initiateSafeS3Reduction	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateSafeS3Reduction()$/;"	f	class:NodeAndEdgeManager
initiateSafeS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateSafeS3Reduction()$/;"	f	class:NodeAndEdgeManager
initiateTreeReduction	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateTreeReduction()$/;"	f	class:NodeAndEdgeManager
initiateTreeReduction	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateTreeReduction()$/;"	f	class:NodeAndEdgeManager
initiateUnsafeS3Reduction	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateUnsafeS3Reduction()$/;"	f	class:NodeAndEdgeManager
initiateUnsafeS3Reduction	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::initiateUnsafeS3Reduction()$/;"	f	class:NodeAndEdgeManager
inputRecords	reduce_src/bkup/new_reduce.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/bkup/reduce.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/bkup/sym_add.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/bkup/sym_print.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/new_reduce.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/print_neighbors.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/reduce.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/sym_add.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/sym_print.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
inputRecords	reduce_src/test_reduce.cpp	/^std::istream& inputRecords(std::istream& is, std::list<PDBrec*>& records) {$/;"	f
insCode	reduce_src/PDBrec.h	/^   char insCode()         const { return _rep->_r.atom.residue.insertCode; }$/;"	f	class:PDBrec
insCode	reduce_src/bkup/PDBrec.h	/^   char insCode()         const { return _rep->_r.atom.residue.insertCode; }$/;"	f	class:PDBrec
insert	reduce_src/ElementInfo.cpp	/^bool StandardElementTable::insert(int atno,$/;"	f	class:StandardElementTable
insert	reduce_src/bkup/ElementInfo.cpp	/^bool StandardElementTable::insert(int atno,$/;"	f	class:StandardElementTable
insert	reduce_src/bkup/neighborList.h	/^	void insert(L atom){$/;"	f	class:NeighborList
insert	reduce_src/neighborList.h	/^	void insert(L atom){$/;"	f	class:NeighborList
insert	toolclasses/MultiDict.h	/^   void insert(const T& v) { _value.insert(v); }$/;"	f	class:MultiLink
insert	toolclasses/Seq.h	/^   Seq& insert(const T& t) {$/;"	f	class:Seq
insertAfter	toolclasses/List.cpp	/^void List<T>::insertAfter(const T& obj, DblLnkLstNode<T>*ptr) {$/;"	f	class:List
insertAfter	toolclasses/ListIter.cpp	/^bool NonConstListIter<T>::insertAfter(const T& e) {$/;"	f	class:NonConstListIter
insertAtom	reduce_src/FlipMemo.cpp	/^void FlipMemo::insertAtom(PDBrec* r) {$/;"	f	class:FlipMemo
insertAtom	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::insertAtom(PDBrec* r) {$/;"	f	class:FlipMemo
insertBefore	toolclasses/List.cpp	/^void List<T>::insertBefore(const T& obj, DblLnkLstNode<T>*ptr) {$/;"	f	class:List
insertBefore	toolclasses/List.cpp	/^void List<T>::insertBefore(const T& obj, int loc) {$/;"	f	class:List
insertBefore	toolclasses/ListIter.cpp	/^bool NonConstListIter<T>::insertBefore(const T& e) {$/;"	f	class:NonConstListIter
insertClique	reduce_src/CliqueList.h	/^   void insertClique(const std::list<MoverPtr>& lst) { _cliques.push_front(lst); }$/;"	f	class:CliqueList
insertClique	reduce_src/bkup/CliqueList.h	/^   void insertClique(const std::list<MoverPtr>& lst) { _cliques.push_front(lst); }$/;"	f	class:CliqueList
insertCode	libpdb/pdb++.h	/^		char	   insertCode;$/;"	m	struct:PDB::Residue
insertFlip	reduce_src/AtomPositions.cpp	/^std::list<char> AtomPositions::insertFlip(const ResBlk& rblk) {$/;"	f	class:AtomPositions
insertFlip	reduce_src/AtomPositions.cpp	/^void AtomPositions::insertFlip(PDBrec* hr, std::list<char> alts_list) {$/;"	f	class:AtomPositions
insertFlip	reduce_src/bkup/AtomPositions.cpp	/^std::list<char> AtomPositions::insertFlip(const ResBlk& rblk) {$/;"	f	class:AtomPositions
insertFlip	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::insertFlip(PDBrec* hr, std::list<char> alts_list) {$/;"	f	class:AtomPositions
insertHatom	reduce_src/RotDonor.h	/^   void insertHatom(const PDBrec& ha) {$/;"	f	class:RotDonor
insertHatom	reduce_src/RotMethyl.h	/^   void insertHatom(const PDBrec& ha) {$/;"	f	class:RotMethyl
insertHatom	reduce_src/bkup/RotDonor.h	/^   void insertHatom(const PDBrec& ha) {$/;"	f	class:RotDonor
insertHatom	reduce_src/bkup/RotMethyl.h	/^   void insertHatom(const PDBrec& ha) {$/;"	f	class:RotMethyl
insertNewRec	reduce_src/ResBlk.h	/^   bool insertNewRec(std::list<PDBrec*>& records, PDBrec* rec) { \/\/ add a new atom to the list$/;"	f	class:ResBlk
insertNewRec	reduce_src/bkup/ResBlk.h	/^   bool insertNewRec(std::list<PDBrec*>& records, PDBrec* rec) { \/\/ add a new atom to the list$/;"	f	class:ResBlk
insertRot	reduce_src/AtomPositions.cpp	/^void AtomPositions::insertRot(const PDBrec& hr,$/;"	f	class:AtomPositions
insertRot	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::insertRot(const PDBrec& hr,$/;"	f	class:AtomPositions
insertSingleton	reduce_src/CliqueList.h	/^   void insertSingleton(const MoverPtr    ptr) { _singles.push_front(ptr); }$/;"	f	class:CliqueList
insertSingleton	reduce_src/bkup/CliqueList.h	/^   void insertSingleton(const MoverPtr    ptr) { _singles.push_front(ptr); }$/;"	f	class:CliqueList
insertStdResH	reduce_src/StdResH.cpp	/^HydrogenPlanTable::insertStdResH($/;"	f	class:HydrogenPlanTable
insertStdResH	reduce_src/bkup/StdResH.cpp	/^HydrogenPlanTable::insertStdResH($/;"	f	class:HydrogenPlanTable
instantiateVertices	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::instantiateVertices$/;"	f	class:GraphToHoldScores
instantiateVertices	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::instantiateVertices$/;"	f	class:GraphToHoldScores
interactingConfs	reduce_src/Mover.cpp	/^bool interactingConfs(const PDBrec& a, const PDBrec& b, bool onlyA) {$/;"	f
interactingConfs	reduce_src/bkup/Mover.cpp	/^bool interactingConfs(const PDBrec& a, const PDBrec& b, bool onlyA) {$/;"	f
intersect	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::intersect( DotsForAtom const & other, DotsForAtom & intersection ) const$/;"	f	class:DotsForAtom
intersect	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::intersect( DotsForAtom const & other, DotsForAtom & intersection ) const$/;"	f	class:DotsForAtom
intersects	reduce_src/AtomDescr.h	/^	bool intersects(const AtomDescr& a) const$/;"	f	class:AtomDescr
intersects	reduce_src/bkup/AtomDescr.h	/^	bool intersects(const AtomDescr& a) const$/;"	f	class:AtomDescr
invalid_number_literal	reduce_src/bkup/hybrid_36_c.c	/^const char* invalid_number_literal() { return "invalid number literal."; }$/;"	f	file:
invalid_number_literal	reduce_src/hybrid_36_c.c	/^const char* invalid_number_literal() { return "invalid number literal."; }$/;"	f	file:
invalidate	reduce_src/BumperPoint.h	/^   void invalidate() { _rep->_ok = FALSE; };$/;"	f	class:BumperPoint
invalidate	reduce_src/bkup/BumperPoint.h	/^   void invalidate() { _rep->_ok = FALSE; };$/;"	f	class:BumperPoint
invalidateRecord	reduce_src/PDBrec.h	/^   void invalidateRecord() {$/;"	f	class:PDBrec
invalidateRecord	reduce_src/bkup/PDBrec.h	/^   void invalidateRecord() {$/;"	f	class:PDBrec
isCharged	reduce_src/PDBrec.h	/^   bool isCharged() const {$/;"	f	class:PDBrec
isCharged	reduce_src/bkup/PDBrec.h	/^   bool isCharged() const {$/;"	f	class:PDBrec
isComplete	reduce_src/FlipMemo.h	/^   virtual bool isComplete() const { return _isComplete; }$/;"	f	class:FlipMemo
isComplete	reduce_src/RotDonor.h	/^   virtual bool isComplete() const { return TRUE; }$/;"	f	class:RotDonor
isComplete	reduce_src/RotMethyl.h	/^   virtual bool isComplete() const { return TRUE; } \/\/ rotates partial methyls$/;"	f	class:RotMethyl
isComplete	reduce_src/bkup/FlipMemo.h	/^   virtual bool isComplete() const { return _isComplete; }$/;"	f	class:FlipMemo
isComplete	reduce_src/bkup/RotDonor.h	/^   virtual bool isComplete() const { return TRUE; }$/;"	f	class:RotDonor
isComplete	reduce_src/bkup/RotMethyl.h	/^   virtual bool isComplete() const { return TRUE; } \/\/ rotates partial methyls$/;"	f	class:RotMethyl
isConnected	reduce_src/bkup/reduce.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/bkup/sym_add.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/bkup/sym_print.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/print_neighbors.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/reduce.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/sym_add.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/sym_print.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isConnected	reduce_src/test_reduce.cpp	/^bool isConnected(ResBlk* a, ResBlk* b) {$/;"	f
isDefaultO	reduce_src/FlipMemo.cpp	/^bool FlipMemo::isDefaultO(int oi, SearchStrategy ss) const {$/;"	f	class:FlipMemo
isDefaultO	reduce_src/RotDonor.h	/^inline bool RotDonor::isDefaultO(int, SearchStrategy) const {$/;"	f	class:RotDonor
isDefaultO	reduce_src/RotMethyl.cpp	/^bool RotMethyl::isDefaultO(int oi, SearchStrategy ss) const {$/;"	f	class:RotMethyl
isDefaultO	reduce_src/bkup/FlipMemo.cpp	/^bool FlipMemo::isDefaultO(int oi, SearchStrategy ss) const {$/;"	f	class:FlipMemo
isDefaultO	reduce_src/bkup/RotDonor.h	/^inline bool RotDonor::isDefaultO(int, SearchStrategy) const {$/;"	f	class:RotDonor
isDefaultO	reduce_src/bkup/RotMethyl.cpp	/^bool RotMethyl::isDefaultO(int oi, SearchStrategy ss) const {$/;"	f	class:RotMethyl
isEmpty	reduce_src/MoveableNode.cpp	/^bool QueueOfToBeEliminatedNodes::isEmpty()$/;"	f	class:QueueOfToBeEliminatedNodes
isEmpty	reduce_src/bkup/MoveableNode.cpp	/^bool QueueOfToBeEliminatedNodes::isEmpty()$/;"	f	class:QueueOfToBeEliminatedNodes
isHBDonorOrAcceptorFlipped	reduce_src/FlipMemo.cpp	/^bool FlipMemo::isHBDonorOrAcceptorFlipped(const PDBrec& a, bool useXplorNames, bool useOldNames, bool bbModel) {$/;"	f	class:FlipMemo
isHBDonorOrAcceptorFlipped	reduce_src/bkup/FlipMemo.cpp	/^bool FlipMemo::isHBDonorOrAcceptorFlipped(const PDBrec& a, bool useXplorNames, bool useOldNames, bool bbModel) {$/;"	f	class:FlipMemo
isHydrogen	reduce_src/ElementInfo.h	/^   int   isHydrogen()   const { return atno() == 1; }$/;"	f	class:ElementInfo
isHydrogen	reduce_src/PDBrec.h	/^   bool   isHydrogen() const { return _rep->_e.isHydrogen(); }$/;"	f	class:PDBrec
isHydrogen	reduce_src/bkup/ElementInfo.h	/^   int   isHydrogen()   const { return atno() == 1; }$/;"	f	class:ElementInfo
isHydrogen	reduce_src/bkup/PDBrec.h	/^   bool   isHydrogen() const { return _rep->_e.isHydrogen(); }$/;"	f	class:PDBrec
isNegative	reduce_src/PDBrec.h	/^   bool isNegative() const {$/;"	f	class:PDBrec
isNegative	reduce_src/bkup/PDBrec.h	/^   bool isNegative() const {$/;"	f	class:PDBrec
isPositive	reduce_src/PDBrec.h	/^   bool isPositive() const {$/;"	f	class:PDBrec
isPositive	reduce_src/bkup/PDBrec.h	/^   bool isPositive() const {$/;"	f	class:PDBrec
isWater	reduce_src/PDBrec.cpp	/^bool PDBrec::isWater() const {$/;"	f	class:PDBrec
isWater	reduce_src/bkup/PDBrec.cpp	/^bool PDBrec::isWater() const {$/;"	f	class:PDBrec
isWater	reduce_src/bkup/test_PDBrec.cpp	/^bool PDBrec::isWater() const {$/;"	f	class:PDBrec
isWater	reduce_src/test_PDBrec.cpp	/^bool PDBrec::isWater() const {$/;"	f	class:PDBrec
jrnl	libpdb/pdb++.h	/^		Jrnl	jrnl;$/;"	m	union:PDB::__anon5
junk	libpdb/pdb++.h	/^		char	junk[BufLen];$/;"	m	struct:PDB::Unknown
key	toolclasses/Dict.h	/^   const K& key() const { return _key;   } \/\/ access methods$/;"	f	class:DictLink
key	toolclasses/MultiDict.h	/^   const K& key() const { return _key;   } \/\/ access methods$/;"	f	class:MultiLink
kissEdge2bullsEye	reduce_src/Mover.cpp	/^double kissEdge2bullsEye(float ra, float rb, float rp) {$/;"	f
kissEdge2bullsEye	reduce_src/bkup/Mover.cpp	/^double kissEdge2bullsEye(float ra, float rb, float rp) {$/;"	f
last	toolclasses/Stringclass.h	/^   int last(const char ch) const { \/\/ find last character$/;"	f	class:Stringclass
left	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
len	toolclasses/Seq.h	/^   unsigned len() const { return _len; }$/;"	f	class:Seq
length	toolclasses/Point3d.h	/^   Coord length() const {$/;"	f	class:Point3d
length	toolclasses/Seq.cpp	/^int length(Seq<T> s) {$/;"	f
length	toolclasses/Stringclass.h	/^   int length() const { return ::strlen(rep->rep); }$/;"	f	class:Stringclass
lengthSquared	toolclasses/Point3d.h	/^   Coord lengthSquared() const {       \/\/ properties$/;"	f	class:Point3d
lerp	toolclasses/Point3d.cpp	/^Point3d lerp(const Point3d& lo, const Point3d& hi, Coord alpha) {$/;"	f
lerp	toolclasses/Point3d.h	/^inline Coord lerp(Coord lo, Coord hi, Coord a) {$/;"	f
libtbx	libtbx_refresh.py	/^import libtbx$/;"	i
limitConnections	reduce_src/AtomConn.cpp	/^void AtomConn::limitConnections(int n) {$/;"	f	class:AtomConn
limitConnections	reduce_src/bkup/AtomConn.cpp	/^void AtomConn::limitConnections(int n) {$/;"	f	class:AtomConn
limitOrientations	reduce_src/FlipMemo.cpp	/^void FlipMemo::limitOrientations(bool doflip, SearchStrategy ss) {$/;"	f	class:FlipMemo
limitOrientations	reduce_src/RotDonor.h	/^inline void RotDonor::limitOrientations(bool, SearchStrategy) {$/;"	f	class:RotDonor
limitOrientations	reduce_src/RotMethyl.h	/^inline void RotMethyl::limitOrientations(bool, SearchStrategy) {$/;"	f	class:RotMethyl
limitOrientations	reduce_src/bkup/FlipMemo.cpp	/^void FlipMemo::limitOrientations(bool doflip, SearchStrategy ss) {$/;"	f	class:FlipMemo
limitOrientations	reduce_src/bkup/RotDonor.h	/^inline void RotDonor::limitOrientations(bool, SearchStrategy) {$/;"	f	class:RotDonor
limitOrientations	reduce_src/bkup/RotMethyl.h	/^inline void RotMethyl::limitOrientations(bool, SearchStrategy) {$/;"	f	class:RotMethyl
linkData	toolclasses/List.h	/^   T& linkData(DblLnkLstNode<T> *ptr) const {$/;"	f	class:List
linkExists	reduce_src/Mover.h	/^   bool linkExists(const std::string &s) const {$/;"	f	class:Mover
linkExists	reduce_src/bkup/Mover.h	/^   bool linkExists(const std::string &s) const {$/;"	f	class:Mover
linkNext	toolclasses/List.h	/^   DblLnkLstNode<T> * linkNext(DblLnkLstNode<T> *ptr) const {$/;"	f	class:List
linkPrev	toolclasses/List.h	/^   DblLnkLstNode<T> * linkPrev(DblLnkLstNode<T> *ptr) const {$/;"	f	class:List
links	reduce_src/Mover.h	/^   std::map<std::string, MoverPtr> links() const {$/;"	f	class:Mover
links	reduce_src/bkup/Mover.h	/^   std::map<std::string, MoverPtr> links() const {$/;"	f	class:Mover
loc	reduce_src/BumperPoint.h	/^   const Point3d& loc() const { return _rep->_loc; }$/;"	f	class:BumperPoint
loc	reduce_src/LocBlk.h	/^   const Point3d& loc() const { return _rep; }$/;"	f	class:LocBlk
loc	reduce_src/PDBrec.h	/^   Point3d loc() const {$/;"	f	class:PDBrec
loc	reduce_src/PDBrec.h	/^   void loc(const Point3d& p) {$/;"	f	class:PDBrec
loc	reduce_src/bkup/BumperPoint.h	/^   const Point3d& loc() const { return _rep->_loc; }$/;"	f	class:BumperPoint
loc	reduce_src/bkup/LocBlk.h	/^   const Point3d& loc() const { return _rep; }$/;"	f	class:LocBlk
loc	reduce_src/bkup/PDBrec.h	/^   Point3d loc() const {$/;"	f	class:PDBrec
loc	reduce_src/bkup/PDBrec.h	/^   void loc(const Point3d& p) {$/;"	f	class:PDBrec
loc	toolclasses/Point3d.h	/^   const Point3d& loc() const { return *this; }$/;"	f	class:Point3d
locAtom	reduce_src/FlipMemo.cpp	/^bool FlipMemo::locAtom(int na, PDBrec& outrec) const {$/;"	f	class:FlipMemo
locAtom	reduce_src/bkup/FlipMemo.cpp	/^bool FlipMemo::locAtom(int na, PDBrec& outrec) const {$/;"	f	class:FlipMemo
lookForSharedDots	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::lookForSharedDots( $/;"	f	class:DegreeFourEdge_ths
lookForSharedDots	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::lookForSharedDots( $/;"	f	class:DegreeThreeEdge_ths
lookForSharedDots	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::lookForSharedDots( $/;"	f	class:DegreeFourEdge_ths
lookForSharedDots	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::lookForSharedDots( $/;"	f	class:DegreeThreeEdge_ths
lookupPDBatom	reduce_src/ElementInfo.cpp	/^ElementInfo* StandardElementTable::lookupPDBatom(const char* name, const char* resname) const {$/;"	f	class:StandardElementTable
lookupPDBatom	reduce_src/bkup/ElementInfo.cpp	/^ElementInfo* StandardElementTable::lookupPDBatom(const char* name, const char* resname) const {$/;"	f	class:StandardElementTable
m1	libpdb/pdb++.h	/^		Real	m1, m2, m3, v;$/;"	m	struct:PDB::Mtrix
m2	libpdb/pdb++.h	/^		Real	m1, m2, m3, v;$/;"	m	struct:PDB::Mtrix
m3	libpdb/pdb++.h	/^		Real	m1, m2, m3, v;$/;"	m	struct:PDB::Mtrix
main	reduce_src/bkup/findNeighbors.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/bkup/find_distances.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/bkup/find_distances_new.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/bkup/new_reduce.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/bkup/reduce.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/bkup/sym_add.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/bkup/sym_print.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/findNeighbors.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/find_distances.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/find_distances_new.cpp	/^int main(int argc, char *[])$/;"	f
main	reduce_src/new_reduce.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/print_neighbors.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/reduce.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/sym_add.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/sym_print.cpp	/^int main(int argc, char **argv) {$/;"	f
main	reduce_src/test_reduce.cpp	/^int main(int argc, char **argv) {$/;"	f
makeDots	reduce_src/DotSph.cpp	/^int makeDots(float radius, Point3d points[], int maxpnts) {$/;"	f
makeDots	reduce_src/bkup/DotSph.cpp	/^int makeDots(float radius, Point3d points[], int maxpnts) {$/;"	f
makeIdentity	toolclasses/Point3d.cpp	/^Matrix4d& Matrix4d::makeIdentity() { \/\/ build an identity matrix$/;"	f	class:Matrix4d
makeKey	reduce_src/StdResH.h	/^   std::string makeKey(const std::string& resName, const std::string& atomName) const {$/;"	f	class:StdResXtraInfo
makeKey	reduce_src/bkup/StdResH.h	/^   std::string makeKey(const std::string& resName, const std::string& atomName) const {$/;"	f	class:StdResXtraInfo
makeNonAdjustable	reduce_src/Mover.h	/^   void makeNonAdjustable() { _ok = FALSE; _adj = FALSE; }$/;"	f	class:Mover
makeNonAdjustable	reduce_src/bkup/Mover.h	/^   void makeNonAdjustable() { _ok = FALSE; _adj = FALSE; }$/;"	f	class:Mover
makeVec	toolclasses/Point3d.cpp	/^Vector3d makeVec(const Point3d& a, const Point3d& b) {$/;"	f
makebumpers	reduce_src/FlipMemo.cpp	/^int FlipMemo::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks, int rn, float& maxVDWrad) {$/;"	f	class:FlipMemo
makebumpers	reduce_src/RotDonor.cpp	/^int RotDonor::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks, $/;"	f	class:RotDonor
makebumpers	reduce_src/RotMethyl.cpp	/^int RotMethyl::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks,$/;"	f	class:RotMethyl
makebumpers	reduce_src/bkup/FlipMemo.cpp	/^int FlipMemo::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks, int rn, float& maxVDWrad) {$/;"	f	class:FlipMemo
makebumpers	reduce_src/bkup/RotDonor.cpp	/^int RotDonor::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks, $/;"	f	class:RotDonor
makebumpers	reduce_src/bkup/RotMethyl.cpp	/^int RotMethyl::makebumpers(std::multimap<LocBlk, BumperPoint*>& bblks, NeighborList<BumperPoint*>& sym_bblks,$/;"	f	class:RotMethyl
makeonly	toolclasses/Hdl.h	/^   void makeonly() { if (_u.makeonly()) { _p = new T(*_p); } }$/;"	f	class:Hdl
makeonly	toolclasses/UseCount.cpp	/^bool UseCount::makeonly() {$/;"	f	class:UseCount
manageMetals	reduce_src/AtomPositions.cpp	/^void AtomPositions::manageMetals(const ResBlk& rblk) {$/;"	f	class:AtomPositions
manageMetals	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::manageMetals(const ResBlk& rblk) {$/;"	f	class:AtomPositions
mark	reduce_src/PDBrec.h	/^   int mark() const { return _rep->_mark;  }$/;"	f	class:PDBrec
mark	reduce_src/PDBrec.h	/^   void mark(int k) { _rep->_mark = k; }$/;"	f	class:PDBrec
mark	reduce_src/bkup/PDBrec.h	/^   int mark() const { return _rep->_mark;  }$/;"	f	class:PDBrec
mark	reduce_src/bkup/PDBrec.h	/^   void mark(int k) { _rep->_mark = k; }$/;"	f	class:PDBrec
markFlipAtoms	reduce_src/FlipMemo.cpp	/^bool FlipMemo::markFlipAtoms() {$/;"	f	class:FlipMemo
markFlipAtoms	reduce_src/RotDonor.h	/^   virtual bool markFlipAtoms() { return FALSE; }$/;"	f	class:RotDonor
markFlipAtoms	reduce_src/RotMethyl.h	/^   virtual bool markFlipAtoms() { return FALSE; }$/;"	f	class:RotMethyl
markFlipAtoms	reduce_src/bkup/FlipMemo.cpp	/^bool FlipMemo::markFlipAtoms() {$/;"	f	class:FlipMemo
markFlipAtoms	reduce_src/bkup/RotDonor.h	/^   virtual bool markFlipAtoms() { return FALSE; }$/;"	f	class:RotDonor
markFlipAtoms	reduce_src/bkup/RotMethyl.h	/^   virtual bool markFlipAtoms() { return FALSE; }$/;"	f	class:RotMethyl
markname	libpdb/pdb++.h	/^		char	markname[58];$/;"	m	struct:PDB::UserMarkname
master	libpdb/pdb++.h	/^		Master	master;$/;"	m	union:PDB::__anon5
match	reduce_src/StdResH.h	/^   bool match(const std::string& s1, const std::string& s2) const {$/;"	f	class:StdResXtraInfo
match	reduce_src/bkup/StdResH.h	/^   bool match(const std::string& s1, const std::string& s2) const {$/;"	f	class:StdResXtraInfo
matchesAP86_CDoublePrime	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::matchesAP86_CDoublePrime( int node, int neighbors[3] )$/;"	f	class:NodeAndEdgeManager
matchesAP86_CDoublePrime	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::matchesAP86_CDoublePrime( int node, int neighbors[3] )$/;"	f	class:NodeAndEdgeManager
matchesAP86_CPrime	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::matchesAP86_CPrime( int node, int neighbors[3] )$/;"	f	class:NodeAndEdgeManager
matchesAP86_CPrime	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::matchesAP86_CPrime( int node, int neighbors[3] )$/;"	f	class:NodeAndEdgeManager
max	toolclasses/utility.h	/^inline T max(const T& a, const T& b, const T& c) {$/;"	f
maxCovalentRadius	reduce_src/ElementInfo.h	/^   float maxCovalentRadius() const { return _covMaxRad; }$/;"	f	class:ElementTable
maxCovalentRadius	reduce_src/bkup/ElementInfo.h	/^   float maxCovalentRadius() const { return _covMaxRad; }$/;"	f	class:ElementTable
maxExplicitRadius	reduce_src/ElementInfo.h	/^   float maxExplicitRadius() const { return _explMaxRad; }$/;"	f	class:ElementTable
maxExplicitRadius	reduce_src/bkup/ElementInfo.h	/^   float maxExplicitRadius() const { return _explMaxRad; }$/;"	f	class:ElementTable
maxImplicitRadius	reduce_src/ElementInfo.h	/^   float maxImplicitRadius() const { return _implMaxRad; }$/;"	f	class:ElementTable
maxImplicitRadius	reduce_src/bkup/ElementInfo.h	/^   float maxImplicitRadius() const { return _implMaxRad; }$/;"	f	class:ElementTable
median	toolclasses/utility.h	/^inline const T& median(const T& a, const T& b, const T& c) {$/;"	f
merge	toolclasses/List.cpp	/^DblLnkLstNode<T>* List<T>::merge(DblLnkLstNode<T> *x, DblLnkLstNode<T> *y) {$/;"	f	class:List
merge	toolclasses/Seq.cpp	/^Seq<T> merge(Seq<T> x, Seq<T> y) {$/;"	f
mergesort	toolclasses/List.cpp	/^DblLnkLstNode<T>* List<T>::mergesort(DblLnkLstNode<T> *x) {$/;"	f	class:List
mergesort	toolclasses/Seq.cpp	/^Seq<T> mergesort(Seq<T>& x) {$/;"	f
min	toolclasses/utility.h	/^inline T min(const T& a, const T& b, const T& c) {$/;"	f
modType	libpdb/pdb++.h	/^		char	modType;$/;"	m	struct:PDB::Revdat
model	libpdb/pdb++.h	/^		Model	model;$/;"	m	union:PDB::__anon5
model	libpdb/pdb++.h	/^		int	model;			\/\/ not in version 5$/;"	m	struct:PDB::UserFile
model	libpdb/pdb++.h	/^		int	model;			\/\/ version 5 -- obsolete$/;"	m	struct:PDB::UserEndObj
model	libpdb/pdb++.h	/^		int	model;			\/\/ version 5 -- obsolete$/;"	m	struct:PDB::UserObject
modelNum	reduce_src/PDBrec.h	/^   int modelNum() const { return _rep->_r.model.num; }$/;"	f	class:PDBrec
modelNum	reduce_src/bkup/PDBrec.h	/^   int modelNum() const { return _rep->_r.model.num; }$/;"	f	class:PDBrec
modification	libpdb/pdb++.h	/^		int	modification;$/;"	m	struct:PDB::Revdat
mover_	reduce_src/GraphToHoldScores.h	/^	Mover* mover_;$/;"	m	class:Vertex_ths
mover_	reduce_src/bkup/GraphToHoldScores.h	/^	Mover* mover_;$/;"	m	class:Vertex_ths
mover_atoms_atom_overlaps_	reduce_src/GraphToHoldScores.h	/^	std::vector< std::list< AtomDescr > > mover_atoms_atom_overlaps_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
mover_atoms_atom_overlaps_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< std::list< AtomDescr > > mover_atoms_atom_overlaps_[ 2 ];$/;"	m	class:DegreeTwoEdge_ths
movers_	reduce_src/GraphToHoldScores.h	/^	Mover* movers_[2];$/;"	m	class:DegreeTwoEdge_ths
movers_	reduce_src/GraphToHoldScores.h	/^	Mover* movers_[3];$/;"	m	class:DegreeThreeEdge_ths
movers_	reduce_src/GraphToHoldScores.h	/^	Mover* movers_[4];$/;"	m	class:DegreeFourEdge_ths
movers_	reduce_src/bkup/GraphToHoldScores.h	/^	Mover* movers_[2];$/;"	m	class:DegreeTwoEdge_ths
movers_	reduce_src/bkup/GraphToHoldScores.h	/^	Mover* movers_[3];$/;"	m	class:DegreeThreeEdge_ths
movers_	reduce_src/bkup/GraphToHoldScores.h	/^	Mover* movers_[4];$/;"	m	class:DegreeFourEdge_ths
mpLess	reduce_src/Mover.h	/^struct mpLess { $/;"	s
mpLess	reduce_src/bkup/Mover.h	/^struct mpLess { $/;"	s
mpSeqSort	reduce_src/Mover.cpp	/^void mpSeqSort(std::list<MoverPtr>& x) {$/;"	f
mpSeqSort	reduce_src/bkup/Mover.cpp	/^void mpSeqSort(std::list<MoverPtr>& x) {$/;"	f
mtrix	libpdb/pdb++.h	/^		Mtrix	mtrix;$/;"	m	union:PDB::__anon5
mtxdes	libpdb/pdb++.h	/^		Mtxdes	mtxdes;$/;"	m	union:PDB::__anon5
name	libpdb/pdb++.h	/^			AName	name;$/;"	m	struct:PDB::Sheet::__anon3
name	libpdb/pdb++.h	/^		AName	name;$/;"	m	struct:PDB::Anisou
name	libpdb/pdb++.h	/^		AName	name;$/;"	m	struct:PDB::Atom
name	libpdb/pdb++.h	/^		RName	   name;$/;"	m	struct:PDB::Residue
name	libpdb/pdb++.h	/^		char	name[39];$/;"	m	struct:PDB::UserCName
name	libpdb/pdb++.h	/^		char	name[54];$/;"	m	struct:PDB::UserGfxFont
name	reduce_src/AtomConn.h	/^   const std::string& name() const { return _name; }$/;"	f	class:AtomConn
name	reduce_src/StdResH.h	/^   const std::string& name() const { return _name; }$/;"	f	class:StdResH
name	reduce_src/bkup/AtomConn.h	/^   const std::string& name() const { return _name; }$/;"	f	class:AtomConn
name	reduce_src/bkup/StdResH.h	/^   const std::string& name() const { return _name; }$/;"	f	class:StdResH
names	libpdb/pdb++.h	/^		RName	names[13];$/;"	m	struct:PDB::Seqres
neighbors	reduce_src/AtomPositions.h	/^   std::list<PDBrec*> neighbors(const Point3d& p,$/;"	f	class:AtomPositions
neighbors	reduce_src/FlipMemo.cpp	/^std::list<PDBrec*> FlipMemo::neighbors(int na, int nbdist) const {$/;"	f	class:FlipMemo
neighbors	reduce_src/bkup/AtomPositions.h	/^   std::list<PDBrec*> neighbors(const Point3d& p,$/;"	f	class:AtomPositions
neighbors	reduce_src/bkup/FlipMemo.cpp	/^std::list<PDBrec*> FlipMemo::neighbors(int na, int nbdist) const {$/;"	f	class:FlipMemo
neighbors	reduce_src/bkup/neighbors.cpp	/^std::list<L> neighbors(const Point3d& p, Coord minrange, Coord maxrange,$/;"	f
neighbors	reduce_src/neighbors.cpp	/^std::list<L> neighbors(const Point3d& p, Coord minrange, Coord maxrange,$/;"	f
next	toolclasses/Dict.cpp	/^bool DictIterator<K,T>::next(K &nextkey) {$/;"	f	class:DictIterator
next	toolclasses/Dict.h	/^   DictLink<K,T> * next(DictLink<K,T> *nxt) { \/\/ update link$/;"	f	class:DictLink
next	toolclasses/Dict.h	/^   DictLink<K,T>* next() const { return _next; }$/;"	f	class:DictLink
next	toolclasses/ListIter.cpp	/^bool ListIter<T>::next(T& e) {   \/\/ return current entry and advance$/;"	f	class:ListIter
next	toolclasses/MultiDict.cpp	/^int MultiDictIterator<K,T>::next(K &nextkey) {$/;"	f	class:MultiDictIterator
next	toolclasses/MultiDict.h	/^   MultiLink<K,T> * next(MultiLink<K,T> *nxt) { \/\/ update link$/;"	f	class:MultiLink
next	toolclasses/MultiDict.h	/^   MultiLink<K,T>* next() const { return _next; }$/;"	f	class:MultiLink
next	toolclasses/Seq.h	/^   static Seq_item<T>* next(Seq_item<T>* it) { return (it?it->_next:0); }$/;"	f	class:Seq
next	toolclasses/VectIter.h	/^   bool next(T& e) {                   \/\/ return the entry and advance$/;"	f	class:VectIter
nextNodeForReduction	reduce_src/MoveableNode.cpp	/^int  QueueOfToBeEliminatedNodes::nextNodeForReduction() $/;"	f	class:QueueOfToBeEliminatedNodes
nextNodeForReduction	reduce_src/bkup/MoveableNode.cpp	/^int  QueueOfToBeEliminatedNodes::nextNodeForReduction() $/;"	f	class:QueueOfToBeEliminatedNodes
nextOrientation	reduce_src/Mover.h	/^   bool nextOrientation(AtomPositions &xyz,$/;"	f	class:Mover
nextOrientation	reduce_src/bkup/Mover.h	/^   bool nextOrientation(AtomPositions &xyz,$/;"	f	class:Mover
ngbr_struct	reduce_src/bkup/neighborList.h	/^	cc::point_neighbors<> ngbr_struct;$/;"	m	class:NeighborList
ngbr_struct	reduce_src/neighborList.h	/^	cc::point_neighbors<> ngbr_struct;$/;"	m	class:NeighborList
ngbr_struct_size	reduce_src/AtomPositions.h	/^   int ngbr_struct_size(){return _sym_neighbor_list.total_size();}$/;"	f	class:AtomPositions
ngbr_struct_size	reduce_src/bkup/AtomPositions.h	/^   int ngbr_struct_size(){return _sym_neighbor_list.total_size();}$/;"	f	class:AtomPositions
nodeInRange	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::nodeInRange( int node ) const$/;"	f	class:GraphToHoldScores
nodeInRange	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::nodeInRange( int node ) const$/;"	f	class:GraphToHoldScores
normal	toolclasses/Point3d.cpp	/^Vector3d Point3d::normal() const {$/;"	f	class:Point3d
normalize	toolclasses/Point3d.cpp	/^Vector3d& Point3d::normalize() {$/;"	f	class:Point3d
note	toolclasses/utility.cpp	/^void note(const char *message) {$/;"	f
noteAddedInTally	reduce_src/bkup/reduce.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/bkup/sym_add.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/bkup/sym_print.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/print_neighbors.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/reduce.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/sym_add.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/sym_print.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteAddedInTally	reduce_src/test_reduce.cpp	/^void noteAddedInTally(const PDBrec& theH) {$/;"	f
noteBootedAtoms	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::noteBootedAtoms($/;"	f	class:DegreeFourEdge_ths
noteBootedAtoms	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::noteBootedAtoms($/;"	f	class:DegreeThreeEdge_ths
noteBootedAtoms	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::noteBootedAtoms($/;"	f	class:DegreeTwoEdge_ths
noteBootedAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::noteBootedAtoms($/;"	f	class:DegreeFourEdge_ths
noteBootedAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::noteBootedAtoms($/;"	f	class:DegreeThreeEdge_ths
noteBootedAtoms	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::noteBootedAtoms($/;"	f	class:DegreeTwoEdge_ths
noteEffort	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::noteEffort( double effort )$/;"	f	class:NodeAndEdgeManager
noteEffort	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::noteEffort( double effort )$/;"	f	class:NodeAndEdgeManager
noteRemovedInTally	reduce_src/bkup/reduce.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/bkup/sym_add.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/bkup/sym_print.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/print_neighbors.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/reduce.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/sym_add.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/sym_print.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteRemovedInTally	reduce_src/test_reduce.cpp	/^void noteRemovedInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/bkup/reduce.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/bkup/sym_add.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/bkup/sym_print.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/print_neighbors.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/reduce.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/sym_add.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/sym_print.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteStdInTally	reduce_src/test_reduce.cpp	/^void noteStdInTally(const PDBrec& theH) {$/;"	f
noteWaterInfo	reduce_src/bkup/reduce.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/bkup/sym_add.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/bkup/sym_print.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/print_neighbors.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/reduce.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/sym_add.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/sym_print.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
noteWaterInfo	reduce_src/test_reduce.cpp	/^void noteWaterInfo(ResBlk& r, std::list<PDBrec*>& waters) {$/;"	f
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeFourEdge_ths
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::nothingToScore() const$/;"	f	class:DegreeFourEdge_ths
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeThreeEdge_ths
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::nothingToScore() const$/;"	f	class:DegreeThreeEdge_ths
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeTwoEdge_ths
nothingToScore	reduce_src/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::nothingToScore() const$/;"	f	class:DegreeTwoEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeFourEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::nothingToScore() const$/;"	f	class:DegreeFourEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeThreeEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::nothingToScore() const$/;"	f	class:DegreeThreeEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::nothingToScore( int vertex ) const$/;"	f	class:DegreeTwoEdge_ths
nothingToScore	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::nothingToScore() const$/;"	f	class:DegreeTwoEdge_ths
num	libpdb/pdb++.h	/^		int	num;$/;"	m	struct:PDB::Agrdes
num	libpdb/pdb++.h	/^		int	num;$/;"	m	struct:PDB::Model
numAtoms	libpdb/pdb++.h	/^		int	numAtoms;$/;"	m	struct:PDB::Het
numBmpr	reduce_src/FlipMemo.h	/^   int numBmpr;  \/\/ num orig atoms which bump or re-orient$/;"	m	struct:ResFlipInfo_t
numBmpr	reduce_src/bkup/FlipMemo.h	/^   int numBmpr;  \/\/ num orig atoms which bump or re-orient$/;"	m	struct:ResFlipInfo_t
numChanges	reduce_src/AtomPositions.h	/^   int numChanges() const { return _motionDesc.size(); }$/;"	f	class:AtomPositions
numChanges	reduce_src/bkup/AtomPositions.h	/^   int numChanges() const { return _motionDesc.size(); }$/;"	f	class:AtomPositions
numCliques	reduce_src/CliqueList.h	/^   int numCliques()    { return _cliques.size(); }$/;"	f	class:CliqueList
numCliques	reduce_src/bkup/CliqueList.h	/^   int numCliques()    { return _cliques.size(); }$/;"	f	class:CliqueList
numComponents	libpdb/pdb++.h	/^		int	numComponents;$/;"	m	struct:PDB::Aggrgt
numConect	libpdb/pdb++.h	/^		int	numConect;$/;"	m	struct:PDB::Master
numConn	reduce_src/CTab.cpp	/^int CTab::numConn(const std::string &resname, const std::string &atomname) {$/;"	f	class:CTab
numConn	reduce_src/bkup/CTab.cpp	/^int CTab::numConn(const std::string &resname, const std::string &atomname) {$/;"	f	class:CTab
numCoordinate	libpdb/pdb++.h	/^		int	numCoordinate;$/;"	m	struct:PDB::Master
numDotsOn	reduce_src/GraphToHoldScores.cpp	/^int DotsForAtom::numDotsOn() const$/;"	f	class:DotsForAtom
numDotsOn	reduce_src/bkup/GraphToHoldScores.cpp	/^int DotsForAtom::numDotsOn() const$/;"	f	class:DotsForAtom
numDotsOn_	reduce_src/GraphToHoldScores.h	/^	int numDotsOn_;$/;"	m	class:DotsForAtom
numDotsOn_	reduce_src/bkup/GraphToHoldScores.h	/^	int numDotsOn_;$/;"	m	class:DotsForAtom
numDots_	reduce_src/GraphToHoldScores.h	/^	int numDots_;$/;"	m	class:DotsForAtom
numDots_	reduce_src/bkup/GraphToHoldScores.h	/^	int numDots_;$/;"	m	class:DotsForAtom
numEnabledStates_	reduce_src/GraphToHoldScores.h	/^	int numEnabledStates_;$/;"	m	class:Vertex_ths
numEnabledStates_	reduce_src/bkup/GraphToHoldScores.h	/^	int numEnabledStates_;$/;"	m	class:Vertex_ths
numFtnote	libpdb/pdb++.h	/^		int	numFtnote;$/;"	m	struct:PDB::Master
numGroups	toolclasses/DisjointSets.cpp	/^int DisjointSets::numGroups(int singletons) const {$/;"	f	class:DisjointSets
numHeavy	reduce_src/FlipMemo.h	/^   int numHeavy; \/\/ number of heavy atoms moved$/;"	m	struct:ResFlipInfo_t
numHeavy	reduce_src/bkup/FlipMemo.h	/^   int numHeavy; \/\/ number of heavy atoms moved$/;"	m	struct:ResFlipInfo_t
numHelix	libpdb/pdb++.h	/^		int	numHelix;$/;"	m	struct:PDB::Master
numHet	libpdb/pdb++.h	/^		int	numHet;$/;"	m	struct:PDB::Master
numLinks	reduce_src/Mover.h	/^   int  numLinks() const { return _links.size(); }$/;"	f	class:Mover
numLinks	reduce_src/bkup/Mover.h	/^   int  numLinks() const { return _links.size(); }$/;"	f	class:Mover
numO	reduce_src/FlipMemo.h	/^   int numO;     \/\/ number of orientations$/;"	m	struct:ResFlipInfo_t
numO	reduce_src/bkup/FlipMemo.h	/^   int numO;     \/\/ number of orientations$/;"	m	struct:ResFlipInfo_t
numOrientations	reduce_src/FlipMemo.h	/^   virtual int numOrientations($/;"	f	class:FlipMemo
numOrientations	reduce_src/RotDonor.cpp	/^int RotDonor::numOrientations(SearchStrategy ss) const {$/;"	f	class:RotDonor
numOrientations	reduce_src/RotMethyl.cpp	/^int RotMethyl::numOrientations(SearchStrategy ss) const {$/;"	f	class:RotMethyl
numOrientations	reduce_src/bkup/FlipMemo.h	/^   virtual int numOrientations($/;"	f	class:FlipMemo
numOrientations	reduce_src/bkup/RotDonor.cpp	/^int RotDonor::numOrientations(SearchStrategy ss) const {$/;"	f	class:RotDonor
numOrientations	reduce_src/bkup/RotMethyl.cpp	/^int RotMethyl::numOrientations(SearchStrategy ss) const {$/;"	f	class:RotMethyl
numPP	reduce_src/FlipMemo.h	/^   int numPP;    \/\/ number of proton placement recs$/;"	m	struct:ResFlipInfo_t
numPP	reduce_src/bkup/FlipMemo.h	/^   int numPP;    \/\/ number of proton placement recs$/;"	m	struct:ResFlipInfo_t
numPnts	reduce_src/FlipMemo.h	/^   int numPnts;  \/\/ number$/;"	m	struct:ResFlipInfo_t
numPnts	reduce_src/bkup/FlipMemo.h	/^   int numPnts;  \/\/ number$/;"	m	struct:ResFlipInfo_t
numRemark	libpdb/pdb++.h	/^		int	numRemark;$/;"	m	struct:PDB::Master
numScat	reduce_src/FlipMemo.h	/^   int numScat;  \/\/ number of scorable atoms$/;"	m	struct:ResFlipInfo_t
numScat	reduce_src/bkup/FlipMemo.h	/^   int numScat;  \/\/ number of scorable atoms$/;"	m	struct:ResFlipInfo_t
numScore	reduce_src/FlipMemo.h	/^   int numScore; \/\/ number of atoms to be scored$/;"	m	struct:ResFlipInfo_t
numScore	reduce_src/bkup/FlipMemo.h	/^   int numScore; \/\/ number of atoms to be scored$/;"	m	struct:ResFlipInfo_t
numScoreAtoms	reduce_src/FlipMemo.h	/^   int numScoreAtoms() const {$/;"	f	class:FlipMemo
numScoreAtoms	reduce_src/bkup/FlipMemo.h	/^   int numScoreAtoms() const {$/;"	f	class:FlipMemo
numSeqres	libpdb/pdb++.h	/^		int	numSeqres;$/;"	m	struct:PDB::Master
numSheet	libpdb/pdb++.h	/^		int	numSheet;$/;"	m	struct:PDB::Master
numSingletons	reduce_src/CliqueList.h	/^   int numSingletons() { return _singles.size(); }$/;"	f	class:CliqueList
numSingletons	reduce_src/bkup/CliqueList.h	/^   int numSingletons() { return _singles.size(); }$/;"	f	class:CliqueList
numSite	libpdb/pdb++.h	/^		int	numSite;$/;"	m	struct:PDB::Master
numTer	libpdb/pdb++.h	/^		int	numTer;$/;"	m	struct:PDB::Master
numTransform	libpdb/pdb++.h	/^		int	numTransform;$/;"	m	struct:PDB::Master
numTurn	libpdb/pdb++.h	/^		int	numTurn;$/;"	m	struct:PDB::Master
numXO	reduce_src/FlipMemo.h	/^   int numXO;    \/\/ number of orient. w\/extended$/;"	m	struct:ResFlipInfo_t
numXO	reduce_src/bkup/FlipMemo.h	/^   int numXO;    \/\/ number of orient. w\/extended$/;"	m	struct:ResFlipInfo_t
num_atoms_	reduce_src/GraphToHoldScores.h	/^	int num_atoms_[2];$/;"	m	class:DegreeTwoEdge_ths
num_atoms_	reduce_src/GraphToHoldScores.h	/^	int num_atoms_[3];$/;"	m	class:DegreeThreeEdge_ths
num_atoms_	reduce_src/GraphToHoldScores.h	/^	int num_atoms_[4];$/;"	m	class:DegreeFourEdge_ths
num_atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_atoms_[2];$/;"	m	class:DegreeTwoEdge_ths
num_atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_atoms_[3];$/;"	m	class:DegreeThreeEdge_ths
num_atoms_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_atoms_[4];$/;"	m	class:DegreeFourEdge_ths
num_conn	reduce_src/AtomConn.h	/^   int num_conn() const { return _neighbor.size(); }$/;"	f	class:AtomConn
num_conn	reduce_src/bkup/AtomConn.h	/^   int num_conn() const { return _neighbor.size(); }$/;"	f	class:AtomConn
num_deg2edges_	reduce_src/GraphToHoldScores.h	/^	int num_deg2edges_;$/;"	m	class:GraphToHoldScores
num_deg2edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_deg2edges_;$/;"	m	class:GraphToHoldScores
num_deg3edges_	reduce_src/GraphToHoldScores.h	/^	int num_deg3edges_;$/;"	m	class:GraphToHoldScores
num_deg3edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_deg3edges_;$/;"	m	class:GraphToHoldScores
num_deg4edges_	reduce_src/GraphToHoldScores.h	/^	int num_deg4edges_;$/;"	m	class:GraphToHoldScores
num_deg4edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_deg4edges_;$/;"	m	class:GraphToHoldScores
num_incident_d2edges_	reduce_src/GraphToHoldScores.h	/^	int num_incident_d2edges_;$/;"	m	class:Vertex_ths
num_incident_d2edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_incident_d2edges_;$/;"	m	class:Vertex_ths
num_incident_d3edges_	reduce_src/GraphToHoldScores.h	/^	int num_incident_d3edges_;$/;"	m	class:Vertex_ths
num_incident_d3edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_incident_d3edges_;$/;"	m	class:Vertex_ths
num_incident_d4edges_	reduce_src/GraphToHoldScores.h	/^	int num_incident_d4edges_;$/;"	m	class:Vertex_ths
num_incident_d4edges_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_incident_d4edges_;$/;"	m	class:Vertex_ths
num_states_	reduce_src/GraphToHoldScores.h	/^	int num_states_;$/;"	m	class:Vertex_ths
num_states_	reduce_src/GraphToHoldScores.h	/^	int num_states_[2];$/;"	m	class:DegreeTwoEdge_ths
num_states_	reduce_src/GraphToHoldScores.h	/^	int num_states_[3];$/;"	m	class:DegreeThreeEdge_ths
num_states_	reduce_src/GraphToHoldScores.h	/^	int num_states_[4];$/;"	m	class:DegreeFourEdge_ths
num_states_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_states_;$/;"	m	class:Vertex_ths
num_states_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_states_[2];$/;"	m	class:DegreeTwoEdge_ths
num_states_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_states_[3];$/;"	m	class:DegreeThreeEdge_ths
num_states_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_states_[4];$/;"	m	class:DegreeFourEdge_ths
num_vertices_	reduce_src/GraphToHoldScores.h	/^	int num_vertices_;$/;"	m	class:GraphToHoldScores
num_vertices_	reduce_src/bkup/GraphToHoldScores.h	/^	int num_vertices_;$/;"	m	class:GraphToHoldScores
o1	libpdb/pdb++.h	/^		Real	o1, o2, o3, t;$/;"	m	struct:PDB::Origx
o2	libpdb/pdb++.h	/^		Real	o1, o2, o3, t;$/;"	m	struct:PDB::Origx
o3	libpdb/pdb++.h	/^		Real	o1, o2, o3, t;$/;"	m	struct:PDB::Origx
obslte	libpdb/pdb++.h	/^		Obslte	obslte;$/;"	m	union:PDB::__anon5
obtainAtomsFromMover	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::obtainAtomsFromMover()$/;"	f	class:Vertex_ths
obtainAtomsFromMover	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::obtainAtomsFromMover()$/;"	f	class:Vertex_ths
obtainAtomsFromMovers	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::obtainAtomsFromMovers()$/;"	f	class:GraphToHoldScores
obtainAtomsFromMovers	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::obtainAtomsFromMovers()$/;"	f	class:GraphToHoldScores
occupancy	libpdb/pdb++.h	/^		Real	occupancy, tempFactor;$/;"	m	struct:PDB::Atom
occupancy	reduce_src/PDBrec.h	/^   float occupancy()      const { return _rep->_r.atom.occupancy;          }$/;"	f	class:PDBrec
occupancy	reduce_src/PDBrec.h	/^   void occupancy(float o)         { _rep->_r.atom.occupancy = o;      }$/;"	f	class:PDBrec
occupancy	reduce_src/bkup/PDBrec.h	/^   float occupancy()      const { return _rep->_r.atom.occupancy;          }$/;"	f	class:PDBrec
occupancy	reduce_src/bkup/PDBrec.h	/^   void occupancy(float o)         { _rep->_r.atom.occupancy = o;      }$/;"	f	class:PDBrec
ok	reduce_src/CTab.h	/^   bool ok() const { return _fp != NULL; }$/;"	f	class:CTab
ok	reduce_src/bkup/CTab.h	/^   bool ok() const { return _fp != NULL; }$/;"	f	class:CTab
okToPlaceHydHere	reduce_src/bkup/reduce.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/bkup/sym_add.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/bkup/sym_print.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/print_neighbors.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/reduce.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/sym_add.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/sym_print.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
okToPlaceHydHere	reduce_src/test_reduce.cpp	/^bool okToPlaceHydHere(const PDBrec& theHatom, const atomPlacementPlan& pp,$/;"	f
oldId	libpdb/pdb++.h	/^		PName	oldId;$/;"	m	struct:PDB::Obslte
one_char_chain	reduce_src/PDBrec.h	/^   char one_char_chain()  const { return _rep->_r.atom.residue.chainId[1]; }$/;"	f	class:PDBrec
one_char_chain	reduce_src/bkup/PDBrec.h	/^   char one_char_chain()  const { return _rep->_r.atom.residue.chainId[1]; }$/;"	f	class:PDBrec
only	toolclasses/UseCount.h	/^   bool only() { return *_p == 1; }$/;"	f	class:UseCount
operator !=	libpdb/pdb++.h	/^	inline bool operator!=(const PDB &r) const {$/;"	f	class:PDB
operator !=	reduce_src/AtomDescr.h	/^	bool operator!=(const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator !=	reduce_src/DotSph.h	/^   bool operator!=(const DotSph& s) { return *(_rep) != *(s._rep); }$/;"	f	class:DotSph
operator !=	reduce_src/DotSph.h	/^   bool operator!=(const DotSphRep& d) {$/;"	f	class:DotSphRep
operator !=	reduce_src/ElementInfo.h	/^   int operator!=(const ElementInfo& a) const {$/;"	f	class:ElementInfo
operator !=	reduce_src/ElementInfo.h	/^   int operator!=(const char *s) const {$/;"	f	class:ElementInfo
operator !=	reduce_src/bkup/AtomDescr.h	/^	bool operator!=(const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator !=	reduce_src/bkup/DotSph.h	/^   bool operator!=(const DotSph& s) { return *(_rep) != *(s._rep); }$/;"	f	class:DotSph
operator !=	reduce_src/bkup/DotSph.h	/^   bool operator!=(const DotSphRep& d) {$/;"	f	class:DotSphRep
operator !=	reduce_src/bkup/ElementInfo.h	/^   int operator!=(const ElementInfo& a) const {$/;"	f	class:ElementInfo
operator !=	reduce_src/bkup/ElementInfo.h	/^   int operator!=(const char *s) const {$/;"	f	class:ElementInfo
operator !=	toolclasses/Hdl.h	/^inline bool operator!=(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator !=	toolclasses/List.cpp	/^bool    List<T>::operator != (const List& l) const {$/;"	f	class:List
operator !=	toolclasses/Seq.cpp	/^int operator!=(const Seq<T>& op1, const Seq<T>& op2) {$/;"	f
operator !=	toolclasses/Seq.cpp	/^int operator!=(const Seq_item<T>& op1, const Seq_item<T>& op2) {$/;"	f
operator !=	toolclasses/Stringclass.h	/^   int operator!=(const Stringclass& s) const {$/;"	f	class:Stringclass
operator !=	toolclasses/Stringclass.h	/^   int operator!=(const char *s) const {$/;"	f	class:Stringclass
operator ()	reduce_src/Mover.h	/^	bool operator()(MoverPtr x, MoverPtr y) { $/;"	f	struct:mpLess
operator ()	reduce_src/bkup/Mover.h	/^	bool operator()(MoverPtr x, MoverPtr y) { $/;"	f	struct:mpLess
operator ()	toolclasses/Stringclass.cpp	/^Stringclass Stringclass::operator()(int fr, int sz) const {$/;"	f	class:Stringclass
operator ()	toolclasses/utility.h	/^	void operator() (const T* ptr) const {$/;"	f	struct:DeleteObject
operator *	toolclasses/Hdl.h	/^   const T& operator*() const { return *_p; }$/;"	f	class:Hdl
operator *	toolclasses/List.h	/^   const T& operator*() const { assert(_num_elem > 0); return _first->_data; }$/;"	f	class:List
operator *	toolclasses/ListIter.h	/^   const T& operator *() const {$/;"	f	class:ListIter
operator *	toolclasses/Point3d.cpp	/^Matrix4d Matrix4d::operator*(const Matrix4d& m2) const {$/;"	f	class:Matrix4d
operator *	toolclasses/Point3d.cpp	/^Vector3d Matrix4d::operator*(const Vector3d& v) const {$/;"	f	class:Matrix4d
operator *	toolclasses/Point3d.h	/^   Point3d operator*(Coord s) const {$/;"	f	class:Point3d
operator *	toolclasses/Seq.h	/^   const T& operator*() const {$/;"	f	class:Seq
operator *	toolclasses/VectIter.h	/^   const T& operator *() const{      \/\/ data access$/;"	f	class:VectIter
operator *	toolclasses/Vector.h	/^   const T& operator*() { assert(_num_elem > 0); return _array[0]; }$/;"	f	class:Vector
operator *=	toolclasses/Point3d.cpp	/^Point3d& Point3d::operator*=(Coord s) {$/;"	f	class:Point3d
operator +	toolclasses/Point3d.h	/^   Point3d operator+(const Point3d& p) const {$/;"	f	class:Point3d
operator +	toolclasses/Seq.cpp	/^Seq<T> operator+(const Seq<T>& op1, const Seq<T>& op2) {$/;"	f
operator +	toolclasses/Stringclass.cpp	/^Stringclass Stringclass::operator+(const Stringclass& s) const {$/;"	f	class:Stringclass
operator +	toolclasses/Stringclass.cpp	/^Stringclass operator+(const Stringclass& S, const char* s) {$/;"	f
operator +	toolclasses/Stringclass.cpp	/^Stringclass operator+(const char* s, const Stringclass& S) {$/;"	f
operator ++	toolclasses/ListIter.cpp	/^bool ListIter<T>::operator++() {    \/\/ advance to next entry (prefix)$/;"	f	class:ListIter
operator ++	toolclasses/ListIter.cpp	/^bool ListIter<T>::operator++(int) { \/\/ advance to next entry (postfix)$/;"	f	class:ListIter
operator ++	toolclasses/Seq.cpp	/^Seq<T> Seq<T>::operator++(int) {$/;"	f	class:Seq
operator ++	toolclasses/Seq.cpp	/^Seq<T>& Seq<T>::operator++() {$/;"	f	class:Seq
operator ++	toolclasses/VectIter.h	/^   bool operator++()    { _elem++; return valid(); }$/;"	f	class:VectIter
operator ++	toolclasses/VectIter.h	/^   bool operator++(int) { _elem++; return valid(); }$/;"	f	class:VectIter
operator +=	toolclasses/List.cpp	/^List<T>& List<T>::operator+=(const List& l) {$/;"	f	class:List
operator +=	toolclasses/Point3d.cpp	/^Point3d& Point3d::operator+=(const Point3d& p) {$/;"	f	class:Point3d
operator +=	toolclasses/Seq.cpp	/^Seq<T>& Seq<T>::operator+=(Seq<T> s) {$/;"	f	class:Seq
operator +=	toolclasses/Vector.cpp	/^Vector<T>& Vector<T>::operator += (const Vector& v) {$/;"	f	class:Vector
operator -	toolclasses/Point3d.h	/^   Point3d operator-() const {$/;"	f	class:Point3d
operator -	toolclasses/Point3d.h	/^   Point3d operator-(const Point3d& p) const {$/;"	f	class:Point3d
operator --	toolclasses/ListIter.cpp	/^bool ListIter<T>::operator--() {    \/\/ retreat to prev entry (prefix)$/;"	f	class:ListIter
operator --	toolclasses/ListIter.cpp	/^bool ListIter<T>::operator--(int) { \/\/ retreat to prev entry (postfix)$/;"	f	class:ListIter
operator --	toolclasses/VectIter.h	/^   bool operator--()    { _elem--; return valid(); }$/;"	f	class:VectIter
operator --	toolclasses/VectIter.h	/^   bool operator--(int) { _elem--; return valid(); }$/;"	f	class:VectIter
operator -=	toolclasses/Point3d.cpp	/^Point3d& Point3d::operator-=(const Point3d& p) {$/;"	f	class:Point3d
operator /	toolclasses/Point3d.h	/^   Point3d operator\/(Coord s) const {$/;"	f	class:Point3d
operator /=	toolclasses/Point3d.cpp	/^Point3d& Point3d::operator\/=(Coord s) {$/;"	f	class:Point3d
operator <	reduce_src/AtomConn.h	/^   bool operator<(const AtomConn& a) const { return _order < a._order; }$/;"	f	class:AtomConn
operator <	reduce_src/AtomDescr.h	/^	bool operator < (const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator <	reduce_src/LocBlk.h	/^   bool operator < (const LocBlk& b) const {$/;"	f	class:LocBlk
operator <	reduce_src/bkup/AtomConn.h	/^   bool operator<(const AtomConn& a) const { return _order < a._order; }$/;"	f	class:AtomConn
operator <	reduce_src/bkup/AtomDescr.h	/^	bool operator < (const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator <	reduce_src/bkup/LocBlk.h	/^   bool operator < (const LocBlk& b) const {$/;"	f	class:LocBlk
operator <	toolclasses/Hdl.h	/^inline bool operator<(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator <	toolclasses/List.cpp	/^bool List<T>::operator < (const List& l) const {$/;"	f	class:List
operator <	toolclasses/Stringclass.h	/^   int operator<(const Stringclass& s) const {$/;"	f	class:Stringclass
operator <	toolclasses/Stringclass.h	/^   int operator<(const char *s) const {$/;"	f	class:Stringclass
operator <<	libpdb/pdb++.h	/^operator<<(std::ostream &s, const PDB &p)$/;"	f
operator <<	reduce_src/AtomDescr.cpp	/^std::ostream& operator<<(std::ostream& os, const AtomDescr& A)$/;"	f
operator <<	reduce_src/GraphToHoldScores.cpp	/^operator << (std::ostream & os, DotsForAtom const & dots )$/;"	f
operator <<	reduce_src/PDBrec.h	/^inline std::ostream& operator << (std::ostream& s, const PDBrec& pdbrec) {$/;"	f
operator <<	reduce_src/bkup/AtomDescr.cpp	/^std::ostream& operator<<(std::ostream& os, const AtomDescr& A)$/;"	f
operator <<	reduce_src/bkup/GraphToHoldScores.cpp	/^operator << (std::ostream & os, DotsForAtom const & dots )$/;"	f
operator <<	reduce_src/bkup/PDBrec.h	/^inline std::ostream& operator << (std::ostream& s, const PDBrec& pdbrec) {$/;"	f
operator <<	toolclasses/List.cpp	/^ostream& operator << (ostream& s, const List<T>& l) {$/;"	f
operator <<	toolclasses/Point3d.cpp	/^std::ostream& operator<<(std::ostream& os, const Matrix4d& m) {$/;"	f
operator <<	toolclasses/Point3d.cpp	/^std::ostream& operator<<(std::ostream& os, const Point3d& p) {$/;"	f
operator <<	toolclasses/Queue.h	/^inline ostream& operator << (ostream& s, const Queue<T>& l) {$/;"	f
operator <<	toolclasses/Stack.h	/^inline ostream& operator << (ostream& s, const Stack<T>& l) {$/;"	f
operator <<	toolclasses/Stringclass.cpp	/^std::ostream& operator<<(std::ostream& os, const Stringclass& s) {$/;"	f
operator <<	toolclasses/Vector.cpp	/^ostream& operator << (ostream& s, const Vector<T>& v) {$/;"	f
operator <=	toolclasses/Hdl.h	/^inline bool operator<=(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator =	reduce_src/AtomConn.cpp	/^AtomConn& AtomConn::operator=(const AtomConn& a) {$/;"	f	class:AtomConn
operator =	reduce_src/AtomConn.cpp	/^atomPlacementPlan& atomPlacementPlan::operator=(const atomPlacementPlan& a) {$/;"	f	class:atomPlacementPlan
operator =	reduce_src/CliqueList.h	/^   CliqueList& operator=(const CliqueList& cl) {$/;"	f	class:CliqueList
operator =	reduce_src/DotSph.cpp	/^DotSphManager& DotSphManager::operator=(const DotSphManager& m) {$/;"	f	class:DotSphManager
operator =	reduce_src/ElementInfo.h	/^   ElementInfo& operator=(const ElementInfo& a) {$/;"	f	class:ElementInfo
operator =	reduce_src/GraphToHoldScores.cpp	/^DotsForAtom::operator = ( DotsForAtom const & rhs )$/;"	f	class:DotsForAtom
operator =	reduce_src/LocBlk.h	/^   LocBlk& operator=(const LocBlk& b) { _rep=b._rep; return *this; }$/;"	f	class:LocBlk
operator =	reduce_src/LocBlk.h	/^   LocBlk& operator=(const Point3d& p) {$/;"	f	class:LocBlk
operator =	reduce_src/PDBrec.h	/^   PDBrec& operator=(const PDBrec& a) {$/;"	f	class:PDBrec
operator =	reduce_src/bkup/AtomConn.cpp	/^AtomConn& AtomConn::operator=(const AtomConn& a) {$/;"	f	class:AtomConn
operator =	reduce_src/bkup/AtomConn.cpp	/^atomPlacementPlan& atomPlacementPlan::operator=(const atomPlacementPlan& a) {$/;"	f	class:atomPlacementPlan
operator =	reduce_src/bkup/CliqueList.h	/^   CliqueList& operator=(const CliqueList& cl) {$/;"	f	class:CliqueList
operator =	reduce_src/bkup/DotSph.cpp	/^DotSphManager& DotSphManager::operator=(const DotSphManager& m) {$/;"	f	class:DotSphManager
operator =	reduce_src/bkup/ElementInfo.h	/^   ElementInfo& operator=(const ElementInfo& a) {$/;"	f	class:ElementInfo
operator =	reduce_src/bkup/GraphToHoldScores.cpp	/^DotsForAtom::operator = ( DotsForAtom const & rhs )$/;"	f	class:DotsForAtom
operator =	reduce_src/bkup/LocBlk.h	/^   LocBlk& operator=(const LocBlk& b) { _rep=b._rep; return *this; }$/;"	f	class:LocBlk
operator =	reduce_src/bkup/LocBlk.h	/^   LocBlk& operator=(const Point3d& p) {$/;"	f	class:LocBlk
operator =	reduce_src/bkup/PDBrec.h	/^   PDBrec& operator=(const PDBrec& a) {$/;"	f	class:PDBrec
operator =	toolclasses/DisjointSets.cpp	/^DisjointSets& DisjointSets::operator=(const DisjointSets& ds) {$/;"	f	class:DisjointSets
operator =	toolclasses/Hdl.cpp	/^Hdl<T>& Hdl<T>::operator=(const Hdl& h) {$/;"	f	class:Hdl
operator =	toolclasses/List.cpp	/^List<T>& List<T>::operator = (const List& l) {$/;"	f	class:List
operator =	toolclasses/Point3d.h	/^   Point3d& operator=(const Point3d& p) { \/\/ assignment$/;"	f	class:Point3d
operator =	toolclasses/Seq.cpp	/^Seq<T>& Seq<T>::operator=(const Seq<T>& s) {$/;"	f	class:Seq
operator =	toolclasses/Stringclass.h	/^   Stringclass& operator=(const Stringclass& s) {$/;"	f	class:Stringclass
operator =	toolclasses/Vector.cpp	/^Vector<T>& Vector<T>::operator = (const Vector& v) {$/;"	f	class:Vector
operator ==	libpdb/pdb++.h	/^	inline bool operator==(const PDB &r) const {$/;"	f	class:PDB
operator ==	reduce_src/AtomDescr.h	/^	bool operator==(const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator ==	reduce_src/DotSph.h	/^   bool operator==(const DotSph& s) { return *(_rep) == *(s._rep); }$/;"	f	class:DotSph
operator ==	reduce_src/DotSph.h	/^   bool operator==(const DotSphRep& d) { \/\/comparison operators$/;"	f	class:DotSphRep
operator ==	reduce_src/ElementInfo.h	/^      int operator==(const ElementInfoRep& r) const {$/;"	f	class:ElementInfo::ElementInfoRep
operator ==	reduce_src/ElementInfo.h	/^      int operator==(const char *s) const {$/;"	f	class:ElementInfo::ElementInfoRep
operator ==	reduce_src/ElementInfo.h	/^   int operator==(const ElementInfo& a) const {$/;"	f	class:ElementInfo
operator ==	reduce_src/ElementInfo.h	/^   int operator==(const char *s) const {$/;"	f	class:ElementInfo
operator ==	reduce_src/LocBlk.h	/^   bool operator == (const LocBlk& b) const {$/;"	f	class:LocBlk
operator ==	reduce_src/PDBrec.h	/^   bool operator==(const PDBrec& a) const { return _rep->_r == a._rep->_r; }$/;"	f	class:PDBrec
operator ==	reduce_src/bkup/AtomDescr.h	/^	bool operator==(const AtomDescr& rhs) const$/;"	f	class:AtomDescr
operator ==	reduce_src/bkup/DotSph.h	/^   bool operator==(const DotSph& s) { return *(_rep) == *(s._rep); }$/;"	f	class:DotSph
operator ==	reduce_src/bkup/DotSph.h	/^   bool operator==(const DotSphRep& d) { \/\/comparison operators$/;"	f	class:DotSphRep
operator ==	reduce_src/bkup/ElementInfo.h	/^      int operator==(const ElementInfoRep& r) const {$/;"	f	class:ElementInfo::ElementInfoRep
operator ==	reduce_src/bkup/ElementInfo.h	/^      int operator==(const char *s) const {$/;"	f	class:ElementInfo::ElementInfoRep
operator ==	reduce_src/bkup/ElementInfo.h	/^   int operator==(const ElementInfo& a) const {$/;"	f	class:ElementInfo
operator ==	reduce_src/bkup/ElementInfo.h	/^   int operator==(const char *s) const {$/;"	f	class:ElementInfo
operator ==	reduce_src/bkup/LocBlk.h	/^   bool operator == (const LocBlk& b) const {$/;"	f	class:LocBlk
operator ==	reduce_src/bkup/PDBrec.h	/^   bool operator==(const PDBrec& a) const { return _rep->_r == a._rep->_r; }$/;"	f	class:PDBrec
operator ==	toolclasses/Hdl.h	/^inline bool operator==(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator ==	toolclasses/List.cpp	/^bool List<T>::operator == (const List& l) const {$/;"	f	class:List
operator ==	toolclasses/Seq.cpp	/^int operator==(const Seq<T>& op1, const Seq<T>& op2) {$/;"	f
operator ==	toolclasses/Seq.cpp	/^int operator==(const Seq_item<T>& op1, const Seq_item<T>& op2) {$/;"	f
operator ==	toolclasses/Stringclass.h	/^   int operator==(const Stringclass& s) const {$/;"	f	class:Stringclass
operator ==	toolclasses/Stringclass.h	/^   int operator==(const char *s) const {$/;"	f	class:Stringclass
operator >	toolclasses/Hdl.h	/^inline bool operator>(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator >	toolclasses/Stringclass.h	/^   int operator>(const Stringclass& s) const {$/;"	f	class:Stringclass
operator >	toolclasses/Stringclass.h	/^   int operator>(const char *s) const {$/;"	f	class:Stringclass
operator >=	toolclasses/Hdl.h	/^inline bool operator>=(const Hdl<T>& op1, const Hdl<T>& op2) {$/;"	f
operator >>	libpdb/pdbinput.cpp	/^operator>>(std::istream &s, PDB &p)$/;"	f
operator []	reduce_src/DotSph.h	/^   const Point3d& operator[](int i) const {$/;"	f	class:DotSph
operator []	reduce_src/bkup/DotSph.h	/^   const Point3d& operator[](int i) const {$/;"	f	class:DotSph
operator []	toolclasses/DisjointSets.h	/^   int operator[](int x) { return findRoot(x); }$/;"	f	class:DisjointSets
operator []	toolclasses/List.cpp	/^T& List<T>::operator [] (int index) {$/;"	f	class:List
operator []	toolclasses/List.cpp	/^const T& List<T>::operator [] (int index) const {$/;"	f	class:List
operator []	toolclasses/Stringclass.h	/^   char operator[](const int i) const { return rep->rep[i]; };$/;"	f	class:Stringclass
operator []	toolclasses/Stringclass.h	/^   int operator[](const Stringclass& s) const {$/;"	f	class:Stringclass
operator []	toolclasses/Stringclass.h	/^   int operator[](const char *s) const { \/\/ find substring$/;"	f	class:Stringclass
operator []	toolclasses/Stringclass.h	/^   int operator[](const char ch) const { \/\/ find character$/;"	f	class:Stringclass
operator []	toolclasses/Vector.cpp	/^T& Vector<T>::operator[](int index) {$/;"	f	class:Vector
operator []	toolclasses/Vector.cpp	/^const T& Vector<T>::operator [] (int index) const {$/;"	f	class:Vector
operator bool	toolclasses/ListIter.h	/^   operator bool() const { return _node != NULL; }$/;"	f	class:ListIter
operator bool	toolclasses/Seq.h	/^   operator bool() const { return _item != 0; }$/;"	f	class:Seq
operator bool	toolclasses/VectIter.h	/^   operator bool() const { return valid(); }$/;"	f	class:VectIter
operator const char *	toolclasses/Stringclass.h	/^   operator const char *() const { return rep->rep; }$/;"	f	class:Stringclass
order	reduce_src/AtomConn.h	/^   int order() const { return _order; }$/;"	f	class:AtomConn
order	reduce_src/bkup/AtomConn.h	/^   int order() const { return _order; }$/;"	f	class:AtomConn
orientClique	reduce_src/AtomPositions.cpp	/^int AtomPositions::orientClique(const std::list<MoverPtr>& clique, int limit) {$/;"	f	class:AtomPositions
orientClique	reduce_src/bkup/AtomPositions.cpp	/^int AtomPositions::orientClique(const std::list<MoverPtr>& clique, int limit) {$/;"	f	class:AtomPositions
orientSingles	reduce_src/AtomPositions.cpp	/^int AtomPositions::orientSingles(const std::list<MoverPtr>& singles) {$/;"	f	class:AtomPositions
orientSingles	reduce_src/bkup/AtomPositions.cpp	/^int AtomPositions::orientSingles(const std::list<MoverPtr>& singles) {$/;"	f	class:AtomPositions
orientation	reduce_src/Mover.h	/^   int orientation(SearchStrategy ss=Mover::LOW_RES) const {$/;"	f	class:Mover
orientation	reduce_src/bkup/Mover.h	/^   int orientation(SearchStrategy ss=Mover::LOW_RES) const {$/;"	f	class:Mover
orientationAngle	reduce_src/RotDonor.cpp	/^double RotDonor::orientationAngle(int oi, SearchStrategy ss) const {$/;"	f	class:RotDonor
orientationAngle	reduce_src/RotMethyl.cpp	/^double RotMethyl::orientationAngle(int oi, SearchStrategy ss) const {$/;"	f	class:RotMethyl
orientationAngle	reduce_src/bkup/RotDonor.cpp	/^double RotDonor::orientationAngle(int oi, SearchStrategy ss) const {$/;"	f	class:RotDonor
orientationAngle	reduce_src/bkup/RotMethyl.cpp	/^double RotMethyl::orientationAngle(int oi, SearchStrategy ss) const {$/;"	f	class:RotMethyl
orientationPenalty	reduce_src/FlipMemo.cpp	/^double FlipMemo::orientationPenalty(float pmag) const {$/;"	f	class:FlipMemo
orientationPenalty	reduce_src/RotDonor.h	/^   double orientationPenalty(float) const { return 0.0; }$/;"	f	class:RotDonor
orientationPenalty	reduce_src/RotMethyl.cpp	/^double RotMethyl::orientationPenalty(float pmag) const {$/;"	f	class:RotMethyl
orientationPenalty	reduce_src/RotMethyl.cpp	/^double RotMethyl::orientationPenalty(float) const {$/;"	f	class:RotMethyl
orientationPenalty	reduce_src/bkup/FlipMemo.cpp	/^double FlipMemo::orientationPenalty(float pmag) const {$/;"	f	class:FlipMemo
orientationPenalty	reduce_src/bkup/RotDonor.h	/^   double orientationPenalty(float) const { return 0.0; }$/;"	f	class:RotDonor
orientationPenalty	reduce_src/bkup/RotMethyl.cpp	/^double RotMethyl::orientationPenalty(float pmag) const {$/;"	f	class:RotMethyl
orientationPenalty	reduce_src/bkup/RotMethyl.cpp	/^double RotMethyl::orientationPenalty(float) const {$/;"	f	class:RotMethyl
origx	libpdb/pdb++.h	/^		Origx	origx;$/;"	m	union:PDB::__anon5
os	libtbx_refresh.py	/^import os$/;"	i
os	run_tests.py	/^import sys, os$/;"	i
outexp	libpdb/pdb_sprntf.cpp	/^outexp(double value, int width, int nplace, char fill_char, int left_justify,$/;"	f	file:
outexp	toolclasses/column_sprintf.cpp	/^outexp(double value, int width, int nplace, char fill_char, int left_justify,$/;"	f	file:
outfloat	libpdb/pdb_sprntf.cpp	/^outfloat(double value, int width, int nplace, char fill_char, int left_justify,$/;"	f	file:
outfloat	toolclasses/column_sprintf.cpp	/^outfloat(double value, int width, int nplace, char fill_char, int left_justify,$/;"	f	file:
outint	libpdb/pdb_sprntf.cpp	/^outint(int value, int width, int radix, char fill_char, char hex,$/;"	f	file:
outint	toolclasses/column_sprintf.cpp	/^outint(int value, int width, int radix, char fill_char, char hex,$/;"	f	file:
outputNotice	reduce_src/AtomPositions.h	/^	bool outputNotice() const {return _outputNotice;}$/;"	f	class:AtomPositions
outputNotice	reduce_src/bkup/AtomPositions.h	/^	bool outputNotice() const {return _outputNotice;}$/;"	f	class:AtomPositions
outputRecords	reduce_src/bkup/new_reduce.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/bkup/reduce.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/bkup/sym_add.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/bkup/sym_print.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/new_reduce.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/print_neighbors.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/reduce.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/sym_add.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/sym_print.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outputRecords	reduce_src/test_reduce.cpp	/^std::ostream& outputRecords(std::ostream& os, const std::list<PDBrec*>& l) {$/;"	f
outstr	libpdb/pdb_sprntf.cpp	/^outstr(char *s, int width, int maxstr, char fill_char, int left_justify, char *p)$/;"	f	file:
outstr	toolclasses/column_sprintf.cpp	/^outstr(char *s, int width, int maxstr, char fill_char, int left_justify, char *p)$/;"	f	file:
outunsigned	libpdb/pdb_sprntf.cpp	/^outunsigned(unsigned int value, int width, char fill_char, int left_justify,$/;"	f	file:
outunsigned	toolclasses/column_sprintf.cpp	/^outunsigned(unsigned int value, int width, char fill_char, int left_justify,$/;"	f	file:
owner_	reduce_src/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeFourEdge_ths
owner_	reduce_src/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeThreeEdge_ths
owner_	reduce_src/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeTwoEdge_ths
owner_	reduce_src/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:Vertex_ths
owner_	reduce_src/bkup/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeFourEdge_ths
owner_	reduce_src/bkup/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeThreeEdge_ths
owner_	reduce_src/bkup/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:DegreeTwoEdge_ths
owner_	reduce_src/bkup/GraphToHoldScores.h	/^	GraphToHoldScores * owner_;$/;"	m	class:Vertex_ths
owntail	toolclasses/Seq.cpp	/^Seq_item<T>* Seq<T>::owntail() {$/;"	f	class:Seq
parseCommandLine	reduce_src/bkup/new_reduce.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/bkup/reduce.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/bkup/sym_add.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/bkup/sym_print.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/new_reduce.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/print_neighbors.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/reduce.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/sym_add.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/sym_print.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseCommandLine	reduce_src/test_reduce.cpp	/^char* parseCommandLine(int argc, char **argv) {$/;"	f
parseInteger	toolclasses/utility.cpp	/^int parseInteger(const char *str, int start, int len) {$/;"	f
parseReal	toolclasses/utility.cpp	/^double parseReal(const char *str, int start, int len) {$/;"	f
partiallyInvalidateRecord	reduce_src/PDBrec.h	/^   void partiallyInvalidateRecord() {$/;"	f	class:PDBrec
partiallyInvalidateRecord	reduce_src/bkup/PDBrec.h	/^   void partiallyInvalidateRecord() {$/;"	f	class:PDBrec
path	libtbx_refresh.py	/^    path = "include\/iotbx\/pdb\/hybrid_36_c.c"$/;"	v
path	libtbx_refresh.py	/^    path = "pdb\/hybrid_36_c.c"$/;"	v
path	libtbx_refresh.py	/^    path=self.env.under_dist(module_name="iotbx", path=path),$/;"	v
pdbRecordFormat	libpdb/pdb_chars.cpp	/^static char const * const pdbRecordFormat[PDB::NUM_TYPES] = {$/;"	v	file:
pdbRecordFormat	libpdb/pdb_read.cpp	/^static char const * const pdbRecordFormat[PDB::NUM_TYPES] = {$/;"	v	file:
pdbrun5	libpdb/pdb_chars.cpp	/^static char const * const pdbrun5[PDB::NUM_USER] = {$/;"	v	file:
pdbrun5	libpdb/pdb_read.cpp	/^static char const * const pdbrun5[PDB::NUM_USER] = {$/;"	v	file:
pdbrun5Type	libpdb/pdb_type.cpp	/^pdbrun5Type(const char *buf)$/;"	f	file:
pdbrun6	libpdb/pdb_chars.cpp	/^static char const * const pdbrun6[PDB::NUM_USER] = {$/;"	v	file:
pdbrun6	libpdb/pdb_read.cpp	/^static char const * const pdbrun6[PDB::NUM_USER] = {$/;"	v	file:
pdbrun6Type	libpdb/pdb_type.cpp	/^pdbrun6Type(const char *buf)$/;"	f	file:
pdbrunInputVersion	libpdb/pdb++.h	/^	static int	pdbrunInputVersion, pdbrunOutputVersion;$/;"	m	class:PDB
pdbrunInputVersion	libpdb/pdb_type.cpp	/^int PDB::pdbrunInputVersion = PDB::PDBRUNVersion;	\/\/ just in case$/;"	m	class:PDB	file:
pdbrunOutputVersion	libpdb/pdb++.h	/^	static int	pdbrunInputVersion, pdbrunOutputVersion;$/;"	m	class:PDB
pdbrunOutputVersion	libpdb/pdb_type.cpp	/^int PDB::pdbrunOutputVersion = PDB::PDBRUNVersion;	\/\/ just in case$/;"	m	class:PDB	file:
penalties_	reduce_src/GraphToHoldScores.h	/^	std::vector< float > penalties_;$/;"	m	class:Vertex_ths
penalties_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< float > penalties_;$/;"	m	class:Vertex_ths
placeH	reduce_src/AtomConn.cpp	/^bool atomPlacementPlan::placeH(const std::vector<Point3d>& loc, Point3d& hpos) const {$/;"	f	class:atomPlacementPlan
placeH	reduce_src/bkup/AtomConn.cpp	/^bool atomPlacementPlan::placeH(const std::vector<Point3d>& loc, Point3d& hpos) const {$/;"	f	class:atomPlacementPlan
planHplacement	reduce_src/CTab.cpp	/^atomPlacementPlan* ResConn::planHplacement(const std::string &atomname, const char* resname) const {$/;"	f	class:ResConn
planHplacement	reduce_src/bkup/CTab.cpp	/^atomPlacementPlan* ResConn::planHplacement(const std::string &atomname, const char* resname) const {$/;"	f	class:ResConn
plans	reduce_src/StdResH.h	/^   std::list<atomPlacementPlan*> plans() { return _plans; }$/;"	f	class:StdResH
plans	reduce_src/bkup/StdResH.h	/^   std::list<atomPlacementPlan*> plans() { return _plans; }$/;"	f	class:StdResH
points	reduce_src/DotSph.h	/^   const Point3d* points() const { return _p; }$/;"	f	class:DotSphRep
points	reduce_src/bkup/DotSph.h	/^   const Point3d* points() const { return _p; }$/;"	f	class:DotSphRep
pop	toolclasses/Stack.h	/^   T pop() {$/;"	f	class:Stack
pos_in_owners_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeFourEdge_ths
pos_in_owners_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeThreeEdge_ths
pos_in_owners_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeTwoEdge_ths
pos_in_owners_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeFourEdge_ths
pos_in_owners_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeThreeEdge_ths
pos_in_owners_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* >::iterator pos_in_owners_edge_list_;$/;"	m	class:DegreeTwoEdge_ths
pos_in_verts_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* >::iterator pos_in_verts_edge_list_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
pos_in_verts_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* >::iterator pos_in_verts_edge_list_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
pos_in_verts_edge_list_	reduce_src/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* >::iterator pos_in_verts_edge_list_[2];$/;"	m	class:DegreeTwoEdge_ths
pos_in_verts_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeFourEdge_ths* >::iterator pos_in_verts_edge_list_[ 4 ];$/;"	m	class:DegreeFourEdge_ths
pos_in_verts_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeThreeEdge_ths* >::iterator pos_in_verts_edge_list_[ 3 ];$/;"	m	class:DegreeThreeEdge_ths
pos_in_verts_edge_list_	reduce_src/bkup/GraphToHoldScores.h	/^	std::list< DegreeTwoEdge_ths* >::iterator pos_in_verts_edge_list_[2];$/;"	m	class:DegreeTwoEdge_ths
prepend	toolclasses/List.cpp	/^void List<T>::prepend(const T& obj) {$/;"	f	class:List
prev	toolclasses/ListIter.cpp	/^bool ListIter<T>::prev(T& e) {   \/\/ return current entry and retreat$/;"	f	class:ListIter
prev	toolclasses/VectIter.h	/^   bool prev(T& e) {                   \/\/ return the entry and retreat$/;"	f	class:VectIter
primitive	libpdb/pdb++.h	/^		GfxType	primitive;$/;"	m	struct:PDB::UserGfxBegin
print	reduce_src/GraphToHoldScores.cpp	/^DotsForAtom::print( std::ostream & os ) const$/;"	f	class:DotsForAtom
print	reduce_src/bkup/GraphToHoldScores.cpp	/^DotsForAtom::print( std::ostream & os ) const$/;"	f	class:DotsForAtom
print	reduce_src/bkup/neighborList.h	/^	void print(int seq, std::ostream &os){$/;"	f	class:NeighborList
print	reduce_src/bkup/print.h	/^inline void print(std::ostream &of, Point3d p){$/;"	f
print	reduce_src/neighborList.h	/^	void print(int seq, std::ostream &os){$/;"	f	class:NeighborList
print	reduce_src/print.h	/^inline void print(std::ostream &of, Point3d p){$/;"	f
print_all	reduce_src/AtomPositions.h	/^   void print_all(std::ostream& out,std::ostream& pdbout){_sym_neighbor_list.print_all(out, pdbout);}$/;"	f	class:AtomPositions
print_all	reduce_src/bkup/AtomPositions.h	/^   void print_all(std::ostream& out,std::ostream& pdbout){_sym_neighbor_list.print_all(out, pdbout);}$/;"	f	class:AtomPositions
print_all	reduce_src/bkup/neighborList.h	/^	void print_all(std::ostream& out, std::ostream& pdbout){$/;"	f	class:NeighborList
print_all	reduce_src/neighborList.h	/^	void print_all(std::ostream& out, std::ostream& pdbout){$/;"	f	class:NeighborList
print_all_sym_ngbrs	reduce_src/AtomPositions.h	/^   void print_all_sym_ngbrs(float cutoff,std::ostream& pdbout){_sym_neighbor_list.print_all_sym_ngbrs(cutoff, pdbout);}$/;"	f	class:AtomPositions
print_all_sym_ngbrs	reduce_src/neighborList.h	/^	void print_all_sym_ngbrs(float cutoff, std::ostream& pdbout){$/;"	f	class:NeighborList
processPDBfile	reduce_src/bkup/new_reduce.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/bkup/reduce.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/bkup/sym_add.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/bkup/sym_print.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/new_reduce.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/print_neighbors.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/reduce.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/sym_add.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/sym_print.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
processPDBfile	reduce_src/test_reduce.cpp	/^void processPDBfile(std::istream& ifs, char *pdbFile, std::ostream& ofs) {$/;"	f
push	toolclasses/Stack.h	/^   void push(T obj) { insertBefore(obj, List<T>::START); }$/;"	f	class:Stack
put	reduce_src/AtomPositions.h	/^   void put(PDBrec* r) {$/;"	f	class:AtomPositions
put	reduce_src/CTab.h	/^   bool put(AtomConn *value) {$/;"	f	class:ResConn
put	reduce_src/bkup/AtomPositions.h	/^   void put(PDBrec* r) {$/;"	f	class:AtomPositions
put	reduce_src/bkup/CTab.h	/^   bool put(AtomConn *value) {$/;"	f	class:ResConn
put	toolclasses/Dict.cpp	/^bool Dict<K,T>::put(const K& key, T* vp) {$/;"	f	class:Dict
put	toolclasses/Dict.cpp	/^bool Dict<K,T>::put(const K& key, const T& value) {$/;"	f	class:Dict
put	toolclasses/MultiDict.cpp	/^int MultiDict<K,T>::put(const K& key, const T& value) {$/;"	f	class:MultiDict
r	reduce_src/PDBrec.h	/^   const PDB& r() const { return _rep->_r;     } \/\/ read-only access$/;"	f	class:PDBrec
r	reduce_src/bkup/PDBrec.h	/^   const PDB& r() const { return _rep->_r;     } \/\/ read-only access$/;"	f	class:PDBrec
rType	libpdb/pdb++.h	/^	RecordType	rType;$/;"	m	class:PDB
radFuzz	reduce_src/DotSph.cpp	/^float DotSphManager::radFuzz(float rf) {$/;"	f	class:DotSphManager
radFuzz	reduce_src/bkup/DotSph.cpp	/^float DotSphManager::radFuzz(float rf) {$/;"	f	class:DotSphManager
radius	libpdb/pdb++.h	/^		Real	radius;$/;"	m	struct:PDB::UserRadius
radius	reduce_src/DotSph.h	/^   float radius()  const { return _rad; }$/;"	f	class:DotSphRep
radius	reduce_src/DotSph.h	/^   float radius()  const { return _rep->radius(); }$/;"	f	class:DotSph
radius	reduce_src/bkup/DotSph.h	/^   float radius()  const { return _rad; }$/;"	f	class:DotSphRep
radius	reduce_src/bkup/DotSph.h	/^   float radius()  const { return _rep->radius(); }$/;"	f	class:DotSph
random	run_tests.py	/^import random$/;"	i
reattach	toolclasses/UseCount.cpp	/^bool UseCount::reattach(const UseCount& u) {$/;"	f	class:UseCount
recName	reduce_src/PDBrec.cpp	/^std::string PDBrec::recName() const {$/;"	f	class:PDBrec
recName	reduce_src/bkup/PDBrec.cpp	/^std::string PDBrec::recName() const {$/;"	f	class:PDBrec
recName	reduce_src/bkup/test_PDBrec.cpp	/^std::string PDBrec::recName() const {$/;"	f	class:PDBrec
recName	reduce_src/test_PDBrec.cpp	/^std::string PDBrec::recName() const {$/;"	f	class:PDBrec
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Aggrgt
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Agrdes
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Author
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Cmpont
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Conect
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Cryst1
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::End
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Endmdl
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Formul
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Header
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Helix
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Het
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Master
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Model
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Mtrix
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Obslte
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Origx
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Revdat
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Scale
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Seqres
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Sheet
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Site
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Sprsde
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Ssbond
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Symop
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Ter
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Trnsfm
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Turn
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::Tvect
reclabel	libpdb/pdb++.h	/^		char	reclabel[8];$/;"	m	struct:PDB::User
reclabel	reduce_src/bkup/new_reduce.cpp	/^	char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/bkup/reduce.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/bkup/sym_add.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/bkup/sym_print.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/new_reduce.cpp	/^	char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/print_neighbors.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/sym_add.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/sym_print.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
reclabel	reduce_src/test_reduce.cpp	/^        char    reclabel[8];$/;"	m	struct:Cryst1	file:
recordSkipInfo	reduce_src/bkup/reduce.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/bkup/sym_add.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/bkup/sym_print.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/print_neighbors.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/reduce.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/sym_add.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/sym_print.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
recordSkipInfo	reduce_src/test_reduce.cpp	/^void recordSkipInfo(bool skipH, std::vector<std::string>& fixNotes,$/;"	f
reduceChanges	reduce_src/bkup/new_reduce.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/bkup/reduce.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/bkup/sym_add.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/bkup/sym_print.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/new_reduce.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/print_neighbors.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/reduce.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/sym_add.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/sym_print.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceChanges	reduce_src/test_reduce.cpp	/^void reduceChanges(bool showAll) { \/*changes*\/$/;"	f
reduceHelp	reduce_src/bkup/new_reduce.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/bkup/reduce.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/bkup/sym_add.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/bkup/sym_print.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/new_reduce.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/print_neighbors.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/reduce.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/sym_add.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/sym_print.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceHelp	reduce_src/test_reduce.cpp	/^void reduceHelp(bool showAll) { \/*help*\/$/;"	f
reduceList	reduce_src/bkup/reduce.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/bkup/sym_add.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/bkup/sym_print.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/print_neighbors.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/reduce.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/sym_add.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/sym_print.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
reduceList	reduce_src/test_reduce.cpp	/^void reduceList(CTab& hetdatabase, std::list<PDBrec*>& rlst,$/;"	f
referenceString	reduce_src/bkup/new_reduce.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/bkup/reduce.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/bkup/sym_add.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/bkup/sym_print.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/new_reduce.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/print_neighbors.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/reduce.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/sym_add.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/sym_print.cpp	/^static const char *referenceString =$/;"	v	file:
referenceString	reduce_src/test_reduce.cpp	/^static const char *referenceString =$/;"	v	file:
related	toolclasses/DisjointSets.cpp	/^int DisjointSets::related(int x, int y) {$/;"	f	class:DisjointSets
relocate	reduce_src/CTab.h	/^   bool relocate(FILE *stream) const{$/;"	f	class:FileLoc
relocate	reduce_src/bkup/CTab.h	/^   bool relocate(FILE *stream) const{$/;"	f	class:FileLoc
remark	libpdb/pdb++.h	/^		Remark	remark;$/;"	m	union:PDB::__anon5
rememberOrientation	reduce_src/Mover.h	/^   void rememberOrientation(int oi,$/;"	f	class:Mover
rememberOrientation	reduce_src/bkup/Mover.h	/^   void rememberOrientation(int oi,$/;"	f	class:Mover
remove	toolclasses/Queue.h	/^   T remove() {$/;"	f	class:Queue
removeDotsScoredOnD2Edge	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::removeDotsScoredOnD2Edge($/;"	f	class:Vertex_ths
removeDotsScoredOnD2Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::removeDotsScoredOnD2Edge($/;"	f	class:Vertex_ths
renumberAndReconnect	reduce_src/bkup/reduce.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/bkup/sym_add.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/bkup/sym_print.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/print_neighbors.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/reduce.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/sym_add.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/sym_print.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAndReconnect	reduce_src/test_reduce.cpp	/^void renumberAndReconnect(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/bkup/reduce.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/bkup/sym_add.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/bkup/sym_print.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/print_neighbors.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/reduce.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/sym_add.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/sym_print.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
renumberAtoms	reduce_src/test_reduce.cpp	/^void renumberAtoms(std::list<PDBrec*>& rlst) {$/;"	f
rep	toolclasses/Stringclass.h	/^      char *rep;$/;"	m	class:Stringclass::StringRep
rep	toolclasses/Stringclass.h	/^   StringRep *rep;$/;"	m	class:Stringclass
reposition	reduce_src/AtomPositions.cpp	/^void AtomPositions::reposition(const Point3d& prev, const PDBrec& rec) {$/;"	f	class:AtomPositions
reposition	reduce_src/bkup/AtomPositions.cpp	/^void AtomPositions::reposition(const Point3d& prev, const PDBrec& rec) {$/;"	f	class:AtomPositions
reposition	reduce_src/bkup/neighborList.h	/^	void reposition(int seq, Point3d p, L atom){$/;"	f	class:NeighborList
reposition	reduce_src/neighborList.h	/^	void reposition(int seq, Point3d p, L atom){$/;"	f	class:NeighborList
reset	toolclasses/Dict.cpp	/^void Dict<K,T>::reset() {$/;"	f	class:Dict
reset	toolclasses/Dict.h	/^   void reset() { _i = 0; _p = NULL; }$/;"	f	class:DictIterator
reset	toolclasses/ListIter.h	/^   void reset() { _node = _list._first; } \/\/ go to the first entry$/;"	f	class:ListIter
reset	toolclasses/MultiDict.cpp	/^void MultiDict<K,T>::reset() {$/;"	f	class:MultiDict
reset	toolclasses/MultiDict.h	/^   void reset() { _i = 0; _p = NULL; }$/;"	f	class:MultiDictIterator
reset	toolclasses/VectIter.h	/^   void reset() { _elem = 0; } \/\/ go to first entry$/;"	f	class:VectIter
resetFlipMaxScore	reduce_src/Mover.cpp	/^void Mover::resetFlipMaxScore(int f) {$/;"	f	class:Mover
resetFlipMaxScore	reduce_src/bkup/Mover.cpp	/^void Mover::resetFlipMaxScore(int f) {$/;"	f	class:Mover
resetMarks	reduce_src/Mover.cpp	/^void resetMarks(std::list< std::pair<PDBrec*,Point3d> >& lst) {$/;"	f
resetMarks	reduce_src/bkup/Mover.cpp	/^void resetMarks(std::list< std::pair<PDBrec*,Point3d> >& lst) {$/;"	f
residue	libpdb/pdb++.h	/^			Residue	residue;$/;"	m	struct:PDB::Sheet::__anon3
residue	libpdb/pdb++.h	/^		Residue	residue;$/;"	m	struct:PDB::Anisou
residue	libpdb/pdb++.h	/^		Residue	residue;$/;"	m	struct:PDB::Atom
residue	libpdb/pdb++.h	/^		Residue	residue;$/;"	m	struct:PDB::Ter
residues	libpdb/pdb++.h	/^		Residue	residues[2];$/;"	m	struct:PDB::Cmpont
residues	libpdb/pdb++.h	/^		Residue	residues[2];$/;"	m	struct:PDB::Helix
residues	libpdb/pdb++.h	/^		Residue	residues[2];$/;"	m	struct:PDB::Sheet
residues	libpdb/pdb++.h	/^		Residue	residues[2];$/;"	m	struct:PDB::Ssbond
residues	libpdb/pdb++.h	/^		Residue	residues[2];$/;"	m	struct:PDB::Turn
residues	libpdb/pdb++.h	/^		Residue	residues[4];$/;"	m	struct:PDB::Site
resize	toolclasses/Vector.cpp	/^void Vector<T>::resize(int new_n) {$/;"	f	class:Vector
resname	reduce_src/CTab.h	/^   const char*  resname() const { return _resname;       }$/;"	f	class:ResConn
resname	reduce_src/PDBrec.h	/^   const char*  resname() const { return _rep->_r.atom.residue.name;       }$/;"	f	class:PDBrec
resname	reduce_src/bkup/CTab.h	/^   const char*  resname() const { return _resname;       }$/;"	f	class:ResConn
resname	reduce_src/bkup/PDBrec.h	/^   const char*  resname() const { return _rep->_r.atom.residue.name;       }$/;"	f	class:PDBrec
resno	reduce_src/PDBrec.h	/^   int  resno()           const { $/;"	f	class:PDBrec
resno	reduce_src/bkup/PDBrec.h	/^   int  resno()           const { $/;"	f	class:PDBrec
resultSerialNum	libpdb/pdb++.h	/^		int	resultSerialNum;$/;"	m	struct:PDB::Trnsfm
rev	toolclasses/List.cpp	/^void List<T>::rev() {$/;"	f	class:List
rev	toolclasses/Seq.cpp	/^Seq<T>& Seq<T>::rev() {$/;"	f	class:Seq
rev	toolclasses/Vector.cpp	/^void Vector<T>::rev(int len, int offset) {$/;"	f	class:Vector
revalidateRecord	reduce_src/PDBrec.h	/^   void revalidateRecord() {$/;"	f	class:PDBrec
revalidateRecord	reduce_src/bkup/PDBrec.h	/^   void revalidateRecord() {$/;"	f	class:PDBrec
revdat	libpdb/pdb++.h	/^		Revdat	revdat;$/;"	m	union:PDB::__anon5
rgb	libpdb/pdb++.h	/^		Real	rgb[3];$/;"	m	struct:PDB::UserBgColor
rgb	libpdb/pdb++.h	/^		Real	rgb[3];$/;"	m	struct:PDB::UserCName
rgb	libpdb/pdb++.h	/^		Real	rgb[3];$/;"	m	struct:PDB::UserColor
right	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
rname	reduce_src/FlipMemo.h	/^   const char* rname;  \/\/ residue name$/;"	m	struct:ResFlipInfo_t
rname	reduce_src/FlipMemo.h	/^   const char* rname;$/;"	m	struct:ProtonLoc_t
rname	reduce_src/bkup/FlipMemo.h	/^   const char* rname;  \/\/ residue name$/;"	m	struct:ResFlipInfo_t
rname	reduce_src/bkup/FlipMemo.h	/^   const char* rname;$/;"	m	struct:ProtonLoc_t
rnum	reduce_src/BumperPoint.h	/^   int     rnum() const { return _rep->_rnum; };$/;"	f	class:BumperPoint
rnum	reduce_src/bkup/BumperPoint.h	/^   int     rnum() const { return _rep->_rnum; };$/;"	f	class:BumperPoint
rootUnion	toolclasses/DisjointSets.cpp	/^void DisjointSets::rootUnion(int root1, int root2) {$/;"	f	class:DisjointSets
rotate	toolclasses/Point3d.cpp	/^Point3d Point3d::rotate(Coord theta,$/;"	f	class:Point3d
rowNum	libpdb/pdb++.h	/^		int	rowNum;$/;"	m	struct:PDB::Mtrix
rowNum	libpdb/pdb++.h	/^		int	rowNum;$/;"	m	struct:PDB::Origx
rowNum	libpdb/pdb++.h	/^		int	rowNum;$/;"	m	struct:PDB::Scale
rowNum	libpdb/pdb++.h	/^		int	rowNum;$/;"	m	struct:PDB::Symop
rt_mx_dist2	reduce_src/bkup/neighborList.h	/^static double rt_mx_dist2(scitbx::af::tiny<float, 12> m1,scitbx::af::tiny<float, 12> m2){$/;"	f
rt_mx_dist2	reduce_src/neighborList.h	/^static double rt_mx_dist2(scitbx::af::tiny<float, 12> m1,scitbx::af::tiny<float, 12> m2){$/;"	f
run	run_tests.py	/^def run(args):$/;"	f
s1	libpdb/pdb++.h	/^		Real	s1, s2, s3, t;$/;"	m	struct:PDB::Symop
s1	libpdb/pdb++.h	/^		Real	s1, s2, s3, u;$/;"	m	struct:PDB::Scale
s2	libpdb/pdb++.h	/^		Real	s1, s2, s3, t;$/;"	m	struct:PDB::Symop
s2	libpdb/pdb++.h	/^		Real	s1, s2, s3, u;$/;"	m	struct:PDB::Scale
s3	libpdb/pdb++.h	/^		Real	s1, s2, s3, t;$/;"	m	struct:PDB::Symop
s3	libpdb/pdb++.h	/^		Real	s1, s2, s3, u;$/;"	m	struct:PDB::Scale
safeS3ReductionHasBegun	reduce_src/MoveableNode.cpp	/^bool NodeAndEdgeManager::safeS3ReductionHasBegun() const$/;"	f	class:NodeAndEdgeManager
safeS3ReductionHasBegun	reduce_src/bkup/MoveableNode.cpp	/^bool NodeAndEdgeManager::safeS3ReductionHasBegun() const$/;"	f	class:NodeAndEdgeManager
salt	libpdb/pdb++.h	/^			char	salt[6];$/;"	m	struct:PDB::Conect::__anon2
sameEdge	reduce_src/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::sameEdge( int vertex1, int vertex2, int vertex3, int vertex4 ) const$/;"	f	class:DegreeFourEdge_ths
sameEdge	reduce_src/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::sameEdge( int vertex1, int vertex2, int vertex3 ) const$/;"	f	class:DegreeThreeEdge_ths
sameEdge	reduce_src/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::sameEdge( int vertex1, int vertex2 ) const$/;"	f	class:DegreeTwoEdge_ths
sameEdge	reduce_src/MoveableNode.cpp	/^bool Degree3Hyperedge::sameEdge(int fn, int sn, int tn ) const$/;"	f	class:Degree3Hyperedge
sameEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeFourEdge_ths::sameEdge( int vertex1, int vertex2, int vertex3, int vertex4 ) const$/;"	f	class:DegreeFourEdge_ths
sameEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeThreeEdge_ths::sameEdge( int vertex1, int vertex2, int vertex3 ) const$/;"	f	class:DegreeThreeEdge_ths
sameEdge	reduce_src/bkup/GraphToHoldScores.cpp	/^bool DegreeTwoEdge_ths::sameEdge( int vertex1, int vertex2 ) const$/;"	f	class:DegreeTwoEdge_ths
sameEdge	reduce_src/bkup/MoveableNode.cpp	/^bool Degree3Hyperedge::sameEdge(int fn, int sn, int tn ) const$/;"	f	class:Degree3Hyperedge
sameres	reduce_src/ResBlk.cpp	/^bool sameres(const PDBrec &r1, const PDBrec &rn, bool is_sym) {$/;"	f
sameres	reduce_src/bkup/ResBlk.cpp	/^bool sameres(const PDBrec &r1, const PDBrec &rn, bool is_sym) {$/;"	f
scale	libpdb/pdb++.h	/^		Scale	scale;$/;"	m	union:PDB::__anon5
scale	reduce_src/LocBlk.h	/^   static Coord scale(Coord c) { return c*LocBlkGrain; }$/;"	f	class:LocBlk
scale	reduce_src/bkup/LocBlk.h	/^   static Coord scale(Coord c) { return c*LocBlkGrain; }$/;"	f	class:LocBlk
scaleTo	toolclasses/Point3d.cpp	/^Vector3d& Point3d::scaleTo(Coord newlen) {$/;"	f	class:Point3d
scaled	toolclasses/Point3d.cpp	/^Vector3d Point3d::scaled(Coord newlen) const {$/;"	f	class:Point3d
scanAndGroupRecords	reduce_src/bkup/new_reduce.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/bkup/reduce.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/bkup/sym_add.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/bkup/sym_print.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/new_reduce.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/print_neighbors.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/reduce.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/sym_add.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/sym_print.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
scanAndGroupRecords	reduce_src/test_reduce.cpp	/^void scanAndGroupRecords(std::list<PDBrec*>& rlst, AtomPositions& xyz,$/;"	f
score	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::score()$/;"	f	class:DegreeFourEdge_ths
score	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::score()$/;"	f	class:DegreeThreeEdge_ths
score	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::score()$/;"	f	class:DegreeTwoEdge_ths
score	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::score()$/;"	f	class:GraphToHoldScores
score	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::score()$/;"	f	class:Vertex_ths
score	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::score()$/;"	f	class:DegreeFourEdge_ths
score	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::score()$/;"	f	class:DegreeThreeEdge_ths
score	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::score()$/;"	f	class:DegreeTwoEdge_ths
score	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::score()$/;"	f	class:GraphToHoldScores
score	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::score()$/;"	f	class:Vertex_ths
scoreAtomsAndDotsInAtomsToScoreVector_	reduce_src/AtomPositions.h	/^	bool scoreAtomsAndDotsInAtomsToScoreVector_;$/;"	m	class:AtomPositions
scoreAtomsAndDotsInAtomsToScoreVector_	reduce_src/bkup/AtomPositions.h	/^	bool scoreAtomsAndDotsInAtomsToScoreVector_;$/;"	m	class:AtomPositions
scoreAtomsInAtomsInHighOrderOverlapList_	reduce_src/AtomPositions.h	/^	bool scoreAtomsInAtomsInHighOrderOverlapList_;$/;"	m	class:AtomPositions
scoreAtomsInAtomsInHighOrderOverlapList_	reduce_src/bkup/AtomPositions.h	/^	bool scoreAtomsInAtomsInHighOrderOverlapList_;$/;"	m	class:AtomPositions
scoreThisAngle	reduce_src/RotDonor.cpp	/^double RotDonor::scoreThisAngle(AtomPositions &xyz,	DotSphManager& dotBucket,$/;"	f	class:RotDonor
scoreThisAngle	reduce_src/RotMethyl.cpp	/^double RotMethyl::scoreThisAngle(AtomPositions &xyz, DotSphManager& dotBucket,$/;"	f	class:RotMethyl
scoreThisAngle	reduce_src/bkup/RotDonor.cpp	/^double RotDonor::scoreThisAngle(AtomPositions &xyz,	DotSphManager& dotBucket,$/;"	f	class:RotDonor
scoreThisAngle	reduce_src/bkup/RotMethyl.cpp	/^double RotMethyl::scoreThisAngle(AtomPositions &xyz, DotSphManager& dotBucket,$/;"	f	class:RotMethyl
scores_	reduce_src/GraphToHoldScores.h	/^	float* scores_;$/;"	m	class:Vertex_ths
scores_	reduce_src/GraphToHoldScores.h	/^	float** scores_;$/;"	m	class:DegreeTwoEdge_ths
scores_	reduce_src/bkup/GraphToHoldScores.h	/^	float* scores_;$/;"	m	class:Vertex_ths
scores_	reduce_src/bkup/GraphToHoldScores.h	/^	float** scores_;$/;"	m	class:DegreeTwoEdge_ths
scores_table_	reduce_src/GraphToHoldScores.h	/^	float*** scores_table_;$/;"	m	class:DegreeThreeEdge_ths
scores_table_	reduce_src/GraphToHoldScores.h	/^	float**** scores_table_;$/;"	m	class:DegreeFourEdge_ths
scores_table_	reduce_src/bkup/GraphToHoldScores.h	/^	float*** scores_table_;$/;"	m	class:DegreeThreeEdge_ths
scores_table_	reduce_src/bkup/GraphToHoldScores.h	/^	float**** scores_table_;$/;"	m	class:DegreeFourEdge_ths
scratch	libpdb/pdb_sprntf.cpp	/^static char	scratch[256];$/;"	v	file:
scratch	toolclasses/column_sprintf.cpp	/^static char	scratch[256];$/;"	v	file:
search	toolclasses/List.cpp	/^int List<T>::search(const T& obj) const {$/;"	f	class:List
segID	libpdb/pdb++.h	/^		char	segID[5];$/;"	m	struct:PDB::Anisou
segID	libpdb/pdb++.h	/^		char	segID[5];$/;"	m	struct:PDB::Atom
segidLabel	reduce_src/PDBrec.cpp	/^void PDBrec::segidLabel(const char* s) {$/;"	f	class:PDBrec
segidLabel	reduce_src/PDBrec.h	/^   const char*segidLabel() const{ return _rep->_r.atom.segID;              }$/;"	f	class:PDBrec
segidLabel	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::segidLabel(const char* s) {$/;"	f	class:PDBrec
segidLabel	reduce_src/bkup/PDBrec.h	/^   const char*segidLabel() const{ return _rep->_r.atom.segID;              }$/;"	f	class:PDBrec
segidLabel	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::segidLabel(const char* s) {$/;"	f	class:PDBrec
segidLabel	reduce_src/test_PDBrec.cpp	/^void PDBrec::segidLabel(const char* s) {$/;"	f	class:PDBrec
sense	libpdb/pdb++.h	/^		int	sense;$/;"	m	struct:PDB::Sheet
seqNum	libpdb/pdb++.h	/^		Hy36seqNum	seqNum;$/;"	m	struct:PDB::Cmpont
seqNum	libpdb/pdb++.h	/^		Hy36seqNum	seqNum;$/;"	m	struct:PDB::Site
seqNum	libpdb/pdb++.h	/^		Hy36seqNum	seqNum;$/;"	m	struct:PDB::Ssbond
seqNum	libpdb/pdb++.h	/^		Hy36seqNum	seqNum;$/;"	m	struct:PDB::Turn
seqNum	libpdb/pdb++.h	/^		Hy36seqNum seqNum;$/;"	m	struct:PDB::Residue
seqres	libpdb/pdb++.h	/^		Seqres	seqres;$/;"	m	union:PDB::__anon5
serialNum	libpdb/pdb++.h	/^		Hy36Num	serialNum;$/;"	m	struct:PDB::Anisou
serialNum	libpdb/pdb++.h	/^		Hy36Num	serialNum;$/;"	m	struct:PDB::Atom
serialNum	libpdb/pdb++.h	/^		Hy36Num	serialNum;$/;"	m	struct:PDB::Conect
serialNum	libpdb/pdb++.h	/^		Hy36Num	serialNum;$/;"	m	struct:PDB::Ter
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Aggrgt
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Helix
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Mtrix
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Seqres
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Symop
serialNum	libpdb/pdb++.h	/^		int	serialNum;$/;"	m	struct:PDB::Tvect
setAllStatesEnabled	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::setAllStatesEnabled()$/;"	f	class:GraphToHoldScores
setAllStatesEnabled	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::setAllStatesEnabled()$/;"	f	class:GraphToHoldScores
setAtRadius	reduce_src/AtomDescr.h	/^	void setAtRadius(float atRadius) {_atRadius = atRadius; _atRadiusSqr = atRadius*atRadius; return;};$/;"	f	class:AtomDescr
setAtRadius	reduce_src/bkup/AtomDescr.h	/^	void setAtRadius(float atRadius) {_atRadius = atRadius; _atRadiusSqr = atRadius*atRadius; return;};$/;"	f	class:AtomDescr
setAtom	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::setAtom( AtomDescr theAtom )$/;"	f	class:DotsForAtom
setAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::setAtom( AtomDescr theAtom )$/;"	f	class:DotsForAtom
setAtomHas4WayOverlap	reduce_src/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::setAtomHas4WayOverlap($/;"	f	class:DegreeFourEdge_ths
setAtomHas4WayOverlap	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeFourEdge_ths::setAtomHas4WayOverlap($/;"	f	class:DegreeFourEdge_ths
setAtomPos	reduce_src/AtomDescr.h	/^	void setAtomPos(Point3d sn) {_atomPos = sn; return;}$/;"	f	class:AtomDescr
setAtomPos	reduce_src/bkup/AtomDescr.h	/^	void setAtomPos(Point3d sn) {_atomPos = sn; return;}$/;"	f	class:AtomDescr
setAtomResNum	reduce_src/AtomDescr.h	/^	void setAtomResNum(int rn) {_atomResNo = rn; return;};$/;"	f	class:AtomDescr
setAtomResNum	reduce_src/bkup/AtomDescr.h	/^	void setAtomResNum(int rn) {_atomResNo = rn; return;};$/;"	f	class:AtomDescr
setAtomsInHighOrderOverlap	reduce_src/MoveableNode.h	/^	void setAtomsInHighOrderOverlap( $/;"	f	class:MoveableNode
setAtomsInHighOrderOverlap	reduce_src/bkup/MoveableNode.h	/^	void setAtomsInHighOrderOverlap( $/;"	f	class:MoveableNode
setBestOrientation	reduce_src/Mover.h	/^   void setBestOrientation(int io, double val, bool hasBadBump,$/;"	f	class:Mover
setBestOrientation	reduce_src/bkup/Mover.h	/^   void setBestOrientation(int io, double val, bool hasBadBump,$/;"	f	class:Mover
setConect	reduce_src/PDBrec.cpp	/^void PDBrec::setConect(int cvec[]) {$/;"	f	class:PDBrec
setConect	reduce_src/bkup/PDBrec.cpp	/^void PDBrec::setConect(int cvec[]) {$/;"	f	class:PDBrec
setConect	reduce_src/bkup/test_PDBrec.cpp	/^void PDBrec::setConect(int cvec[]) {$/;"	f	class:PDBrec
setConect	reduce_src/test_PDBrec.cpp	/^void PDBrec::setConect(int cvec[]) {$/;"	f	class:PDBrec
setD2EIteratorAtBegining	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD2EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setD2EIteratorAtBegining	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD2EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setD3EIteratorAtBegining	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD3EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setD3EIteratorAtBegining	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD3EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setD4EIteratorAtBegining	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD4EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setD4EIteratorAtBegining	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::setD4EIteratorAtBegining()$/;"	f	class:GraphToHoldScores
setDotManager	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::setDotManager( DotSphManager * dotSphereManager )$/;"	f	class:DotsForAtom
setDotManager	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::setDotManager( DotSphManager * dotSphereManager )$/;"	f	class:DotsForAtom
setEdgeScore	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::setEdgeScore($/;"	f	class:EdgeBetweenMoveableNodes
setEdgeScore	reduce_src/MoveableNode.cpp	/^void   EdgeScoreMatrix::setEdgeScore(NodeState firstNodeState, NodeState secondNodeState, double theScore)$/;"	f	class:EdgeScoreMatrix
setEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::setEdgeScore($/;"	f	class:EdgeBetweenMoveableNodes
setEdgeScore	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeScoreMatrix::setEdgeScore(NodeState firstNodeState, NodeState secondNodeState, double theScore)$/;"	f	class:EdgeScoreMatrix
setFirstNodeIndex	reduce_src/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setFirstNodeIndex(int firstNodeIndex) {_firstNodeIndex = firstNodeIndex; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setFirstNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setFirstNodeIndex(int firstNodeIndex) {_firstNodeIndex = firstNodeIndex; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setFirstNodePtr	reduce_src/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setFirstNodePtr(MoveableNode* firstNode) {_firstNode = firstNode; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setFirstNodePtr	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setFirstNodePtr(MoveableNode* firstNode) {_firstNode = firstNode; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setHydAngle	reduce_src/FlipMemo.h	/^   virtual void setHydAngle(double, AtomPositions &) {\/*do nothing*\/}$/;"	f	class:FlipMemo
setHydAngle	reduce_src/RotDonor.cpp	/^void RotDonor::setHydAngle(PDBrec& theAtom, double oldAng, double newAng,$/;"	f	class:RotDonor
setHydAngle	reduce_src/RotDonor.cpp	/^void RotDonor::setHydAngle(double newAng, AtomPositions &xyz) {$/;"	f	class:RotDonor
setHydAngle	reduce_src/RotMethyl.cpp	/^void RotMethyl::setHydAngle(PDBrec& theAtom, double oldAng, double newAng,$/;"	f	class:RotMethyl
setHydAngle	reduce_src/RotMethyl.cpp	/^void RotMethyl::setHydAngle(double newAng, AtomPositions &xyz) {$/;"	f	class:RotMethyl
setHydAngle	reduce_src/bkup/FlipMemo.h	/^   virtual void setHydAngle(double, AtomPositions &) {\/*do nothing*\/}$/;"	f	class:FlipMemo
setHydAngle	reduce_src/bkup/RotDonor.cpp	/^void RotDonor::setHydAngle(PDBrec& theAtom, double oldAng, double newAng,$/;"	f	class:RotDonor
setHydAngle	reduce_src/bkup/RotDonor.cpp	/^void RotDonor::setHydAngle(double newAng, AtomPositions &xyz) {$/;"	f	class:RotDonor
setHydAngle	reduce_src/bkup/RotMethyl.cpp	/^void RotMethyl::setHydAngle(PDBrec& theAtom, double oldAng, double newAng,$/;"	f	class:RotMethyl
setHydAngle	reduce_src/bkup/RotMethyl.cpp	/^void RotMethyl::setHydAngle(double newAng, AtomPositions &xyz) {$/;"	f	class:RotMethyl
setIsEliminated	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::setIsEliminated(bool eliminationState) {_isEliminated = eliminationState; return;}$/;"	f	class:MoveableNode
setIsEliminated	reduce_src/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setIsEliminated(bool isEliminated) {_isEliminated = isEliminated; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setIsEliminated	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::setIsEliminated(bool eliminationState) {_isEliminated = eliminationState; return;}$/;"	f	class:MoveableNode
setIsEliminated	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setIsEliminated(bool isEliminated) {_isEliminated = isEliminated; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setMaxNodeStates	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateVector::setMaxNodeStates(NodeState maxNodeStates)$/;"	f	class:OptimizedNodeStateVector
setMaxNodeStates	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateVector::setMaxNodeStates(NodeState maxNodeStates)$/;"	f	class:OptimizedNodeStateVector
setMover	reduce_src/GraphToHoldScores.cpp	/^void Vertex_ths::setMover( Mover* mover )$/;"	f	class:Vertex_ths
setMover	reduce_src/MoveableNode.h	/^	void setMover( Mover* mover ) {_mover = mover;}$/;"	f	class:MoveableNode
setMover	reduce_src/bkup/GraphToHoldScores.cpp	/^void Vertex_ths::setMover( Mover* mover )$/;"	f	class:Vertex_ths
setMover	reduce_src/bkup/MoveableNode.h	/^	void setMover( Mover* mover ) {_mover = mover;}$/;"	f	class:MoveableNode
setMoverAtomHas3Way	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::setMoverAtomHas3Way($/;"	f	class:DegreeThreeEdge_ths
setMoverAtomHas3Way	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::setMoverAtomHas3Way($/;"	f	class:DegreeThreeEdge_ths
setNaturalVertexOrder	reduce_src/MoveableNode.cpp	/^void Degree3Hyperedge::setNaturalVertexOrder() const$/;"	f	class:Degree3Hyperedge
setNaturalVertexOrder	reduce_src/MoveableNode.cpp	/^void Degree4Hyperedge::setNaturalVertexOrder() const$/;"	f	class:Degree4Hyperedge
setNaturalVertexOrder	reduce_src/bkup/MoveableNode.cpp	/^void Degree3Hyperedge::setNaturalVertexOrder() const$/;"	f	class:Degree3Hyperedge
setNaturalVertexOrder	reduce_src/bkup/MoveableNode.cpp	/^void Degree4Hyperedge::setNaturalVertexOrder() const$/;"	f	class:Degree4Hyperedge
setNegative	reduce_src/PDBrec.h	/^   void setNegative()    { _rep->_recMods |= NegativeChargeFlag; }$/;"	f	class:PDBrec
setNegative	reduce_src/bkup/PDBrec.h	/^   void setNegative()    { _rep->_recMods |= NegativeChargeFlag; }$/;"	f	class:PDBrec
setNodeIndex	reduce_src/MoveableNode.cpp	/^void				MoveableNode::setNodeIndex(int i) {_index = i; return;}$/;"	f	class:MoveableNode
setNodeIndex	reduce_src/MoveableNode.cpp	/^void	  NodeAndStatePair::setNodeIndex(int index) {_nodeIndex = index; return;}$/;"	f	class:NodeAndStatePair
setNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^void				MoveableNode::setNodeIndex(int i) {_index = i; return;}$/;"	f	class:MoveableNode
setNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^void	  NodeAndStatePair::setNodeIndex(int index) {_nodeIndex = index; return;}$/;"	f	class:NodeAndStatePair
setNodeScore	reduce_src/MoveableNode.cpp	/^void   NodeScoreVector::setNodeScore(NodeState ownersState, double theScore)$/;"	f	class:NodeScoreVector
setNodeScore	reduce_src/bkup/MoveableNode.cpp	/^void   NodeScoreVector::setNodeScore(NodeState ownersState, double theScore)$/;"	f	class:NodeScoreVector
setNodeState	reduce_src/MoveableNode.cpp	/^void	  NodeAndStatePair::setNodeState(NodeState state) {_nodeState = state; return;}$/;"	f	class:NodeAndStatePair
setNodeState	reduce_src/bkup/MoveableNode.cpp	/^void	  NodeAndStatePair::setNodeState(NodeState state) {_nodeState = state; return;}$/;"	f	class:NodeAndStatePair
setNodeStateScore	reduce_src/MoveableNode.cpp	/^void				MoveableNode::setNodeStateScore(NodeState theNodeState, double theScore) $/;"	f	class:MoveableNode
setNodeStateScore	reduce_src/bkup/MoveableNode.cpp	/^void				MoveableNode::setNodeStateScore(NodeState theNodeState, double theScore) $/;"	f	class:MoveableNode
setNotNegative	reduce_src/PDBrec.h	/^   void setNotNegative() { _rep->_recMods ^= NegativeChargeFlag; }$/;"	f	class:PDBrec
setNotNegative	reduce_src/bkup/PDBrec.h	/^   void setNotNegative() { _rep->_recMods ^= NegativeChargeFlag; }$/;"	f	class:PDBrec
setNotPositive	reduce_src/PDBrec.h	/^   void setNotPositive() { _rep->_recMods ^= PositiveChargeFlag; }$/;"	f	class:PDBrec
setNotPositive	reduce_src/bkup/PDBrec.h	/^   void setNotPositive() { _rep->_recMods ^= PositiveChargeFlag; }$/;"	f	class:PDBrec
setNumStatesForNodes	reduce_src/AtomPositions.cpp	/^AtomPositions::setNumStatesForNodes( $/;"	f	class:AtomPositions
setNumStatesForNodes	reduce_src/bkup/AtomPositions.cpp	/^AtomPositions::setNumStatesForNodes( $/;"	f	class:AtomPositions
setNumberOfPossibleStates	reduce_src/MoveableNode.cpp	/^void 				MoveableNode::setNumberOfPossibleStates(NodeState maxStates) {$/;"	f	class:MoveableNode
setNumberOfPossibleStates	reduce_src/bkup/MoveableNode.cpp	/^void 				MoveableNode::setNumberOfPossibleStates(NodeState maxStates) {$/;"	f	class:MoveableNode
setOptimizedNodeState	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateVector::setOptimizedNodeState(NodeState dependentNodeState, NodeState ownerNodeState)$/;"	f	class:OptimizedNodeStateVector
setOptimizedNodeState	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateVector::setOptimizedNodeState(NodeState dependentNodeState, NodeState ownerNodeState)$/;"	f	class:OptimizedNodeStateVector
setOptimumNodeState	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateMatrix3::setOptimumNodeState($/;"	f	class:OptimizedNodeStateMatrix3
setOptimumNodeState	reduce_src/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::setOptimumNodeState(NodeState firstNodeState, NodeState secondNodeState, NodeState ownerNodeState)$/;"	f	class:OptimizedNodeStateMatrix
setOptimumNodeState	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateMatrix3::setOptimumNodeState($/;"	f	class:OptimizedNodeStateMatrix3
setOptimumNodeState	reduce_src/bkup/MoveableNode.cpp	/^void OptimizedNodeStateMatrix::setOptimumNodeState(NodeState firstNodeState, NodeState secondNodeState, NodeState ownerNodeState)$/;"	f	class:OptimizedNodeStateMatrix
setOrientation	reduce_src/FlipMemo.cpp	/^bool FlipMemo::setOrientation(int oi, AtomPositions &xyz, SearchStrategy ss) {$/;"	f	class:FlipMemo
setOrientation	reduce_src/RotDonor.cpp	/^bool RotDonor::setOrientation(int oi, float delta, AtomPositions &xyz,$/;"	f	class:RotDonor
setOrientation	reduce_src/RotDonor.h	/^   virtual bool setOrientation(int oi, AtomPositions &xyz,$/;"	f	class:RotDonor
setOrientation	reduce_src/RotMethyl.cpp	/^bool RotMethyl::setOrientation(int oi, float delta, AtomPositions &xyz,$/;"	f	class:RotMethyl
setOrientation	reduce_src/RotMethyl.h	/^   virtual bool setOrientation(int oi, AtomPositions &xyz,$/;"	f	class:RotMethyl
setOrientation	reduce_src/bkup/FlipMemo.cpp	/^bool FlipMemo::setOrientation(int oi, AtomPositions &xyz, SearchStrategy ss) {$/;"	f	class:FlipMemo
setOrientation	reduce_src/bkup/RotDonor.cpp	/^bool RotDonor::setOrientation(int oi, float delta, AtomPositions &xyz,$/;"	f	class:RotDonor
setOrientation	reduce_src/bkup/RotDonor.h	/^   virtual bool setOrientation(int oi, AtomPositions &xyz,$/;"	f	class:RotDonor
setOrientation	reduce_src/bkup/RotMethyl.cpp	/^bool RotMethyl::setOrientation(int oi, float delta, AtomPositions &xyz,$/;"	f	class:RotMethyl
setOrientation	reduce_src/bkup/RotMethyl.h	/^   virtual bool setOrientation(int oi, AtomPositions &xyz,$/;"	f	class:RotMethyl
setOriginalAtomPtr	reduce_src/AtomDescr.h	/^	void setOriginalAtomPtr(PDBrec* originalAtom) {_originalAtom = originalAtom;}$/;"	f	class:AtomDescr
setOriginalAtomPtr	reduce_src/bkup/AtomDescr.h	/^	void setOriginalAtomPtr(PDBrec* originalAtom) {_originalAtom = originalAtom;}$/;"	f	class:AtomDescr
setPosInOwnersEdgeList	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::setPosInOwnersEdgeList( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:DegreeFourEdge_ths
setPosInOwnersEdgeList	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::setPosInOwnersEdgeList( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:DegreeThreeEdge_ths
setPosInOwnersEdgeList	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::setPosInOwnersEdgeList( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:DegreeTwoEdge_ths
setPosInOwnersEdgeList	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::setPosInOwnersEdgeList( std::list< DegreeFourEdge_ths * >::iterator iter )$/;"	f	class:DegreeFourEdge_ths
setPosInOwnersEdgeList	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::setPosInOwnersEdgeList( std::list< DegreeThreeEdge_ths * >::iterator iter )$/;"	f	class:DegreeThreeEdge_ths
setPosInOwnersEdgeList	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::setPosInOwnersEdgeList( std::list< DegreeTwoEdge_ths * >::iterator iter )$/;"	f	class:DegreeTwoEdge_ths
setPositive	reduce_src/PDBrec.h	/^   void setPositive()    { _rep->_recMods |= PositiveChargeFlag; }$/;"	f	class:PDBrec
setPositive	reduce_src/bkup/PDBrec.h	/^   void setPositive()    { _rep->_recMods |= PositiveChargeFlag; }$/;"	f	class:PDBrec
setScore	reduce_src/MoveableNode.cpp	/^void Degree3Hyperedge::setScore( int state1, int state2, int state3, float energy)$/;"	f	class:Degree3Hyperedge
setScore	reduce_src/MoveableNode.cpp	/^void Degree4Hyperedge::setScore( int state1, int state2, int state3, int state4, float energy)$/;"	f	class:Degree4Hyperedge
setScore	reduce_src/bkup/MoveableNode.cpp	/^void Degree3Hyperedge::setScore( int state1, int state2, int state3, float energy)$/;"	f	class:Degree3Hyperedge
setScore	reduce_src/bkup/MoveableNode.cpp	/^void Degree4Hyperedge::setScore( int state1, int state2, int state3, int state4, float energy)$/;"	f	class:Degree4Hyperedge
setSecondNodeIndex	reduce_src/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setSecondNodeIndex(int secondNodeIndex) {_secondNodeIndex = secondNodeIndex; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setSecondNodeIndex	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setSecondNodeIndex(int secondNodeIndex) {_secondNodeIndex = secondNodeIndex; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setSecondNodePtr	reduce_src/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setSecondNodePtr(MoveableNode* secondNode) {_secondNode = secondNode; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setSecondNodePtr	reduce_src/bkup/MoveableNode.cpp	/^void   EdgeBetweenMoveableNodes::setSecondNodePtr(MoveableNode* secondNode) {_secondNode = secondNode; return;}$/;"	f	class:EdgeBetweenMoveableNodes
setStateDisablingComplete	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::setStateDisablingComplete()$/;"	f	class:Vertex_ths
setStateDisablingComplete	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::setStateDisablingComplete()$/;"	f	class:Vertex_ths
setStateDisablingCompleteForNow	reduce_src/GraphToHoldScores.cpp	/^void GraphToHoldScores::setStateDisablingCompleteForNow()$/;"	f	class:GraphToHoldScores
setStateDisablingCompleteForNow	reduce_src/bkup/GraphToHoldScores.cpp	/^void GraphToHoldScores::setStateDisablingCompleteForNow()$/;"	f	class:GraphToHoldScores
setTimeLimit	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::setTimeLimit( double time_limit_in_seconds )$/;"	f	class:NodeAndEdgeManager
setTimeLimit	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::setTimeLimit( double time_limit_in_seconds )$/;"	f	class:NodeAndEdgeManager
setVertexOrder	reduce_src/MoveableNode.cpp	/^void Degree3Hyperedge::setVertexOrder( int vert1, int vert2, int vert3)$/;"	f	class:Degree3Hyperedge
setVertexOrder	reduce_src/MoveableNode.cpp	/^void Degree4Hyperedge::setVertexOrder( int vert1, int vert2, int vert3, int vert4 )$/;"	f	class:Degree4Hyperedge
setVertexOrder	reduce_src/bkup/MoveableNode.cpp	/^void Degree3Hyperedge::setVertexOrder( int vert1, int vert2, int vert3)$/;"	f	class:Degree3Hyperedge
setVertexOrder	reduce_src/bkup/MoveableNode.cpp	/^void Degree4Hyperedge::setVertexOrder( int vert1, int vert2, int vert3, int vert4 )$/;"	f	class:Degree4Hyperedge
set_chain_id	reduce_src/PDBrec.h	/^   void set_chain_id(int num)    const {$/;"	f	class:PDBrec
set_chain_id	reduce_src/bkup/PDBrec.h	/^   void set_chain_id(int num)    const { _rep->_r.atom.residue.chainId[1]=num; }$/;"	f	class:PDBrec
set_difference_apl	reduce_src/GraphToHoldScores.cpp	/^void set_difference_apl($/;"	f
set_difference_apl	reduce_src/bkup/GraphToHoldScores.cpp	/^void set_difference_apl($/;"	f
set_index	reduce_src/BumperPoint.h	/^   void set_index(int index){_index=index;}$/;"	f	class:BumperPoint
set_index	reduce_src/PDBrec.h	/^   void set_index(int index){_index=index;}$/;"	f	class:PDBrec
set_index	reduce_src/bkup/BumperPoint.h	/^   void set_index(int index){_index=index;}$/;"	f	class:BumperPoint
set_index	reduce_src/bkup/PDBrec.h	/^   void set_index(int index){_index=index;}$/;"	f	class:PDBrec
set_intersect_apl	reduce_src/GraphToHoldScores.cpp	/^void set_intersect_apl( $/;"	f
set_intersect_apl	reduce_src/bkup/GraphToHoldScores.cpp	/^void set_intersect_apl( $/;"	f
set_merge_apl	reduce_src/GraphToHoldScores.cpp	/^void set_merge_apl($/;"	f
set_merge_apl	reduce_src/bkup/GraphToHoldScores.cpp	/^void set_merge_apl($/;"	f
sheet	libpdb/pdb++.h	/^		Sheet	sheet;$/;"	m	union:PDB::__anon5
shortVersion	reduce_src/bkup/new_reduce.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/bkup/reduce.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/bkup/sym_add.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/bkup/sym_print.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/new_reduce.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/print_neighbors.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/reduce.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/sym_add.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/sym_print.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
shortVersion	reduce_src/test_reduce.cpp	/^static const char *shortVersion    = "reduce.3.14.080821";$/;"	v	file:
siftdown	toolclasses/Vector.cpp	/^void Vector<T>::siftdown(int l, int u, int offset) {$/;"	f	class:Vector
siftdownFlat	toolclasses/DisjointSets.cpp	/^void DisjointSets::siftdownFlat(int vec[], int l, int u) const {$/;"	f	class:DisjointSets
sigatm	libpdb/pdb++.h	/^		Sigatm	sigatm;$/;"	m	union:PDB::__anon5
siguij	libpdb/pdb++.h	/^		Siguij	siguij;$/;"	m	union:PDB::__anon5
singles	reduce_src/CliqueList.h	/^   const std::list<MoverPtr>& singles() { return _singles; }$/;"	f	class:CliqueList
singles	reduce_src/bkup/CliqueList.h	/^   const std::list<MoverPtr>& singles() { return _singles; }$/;"	f	class:CliqueList
singleton	toolclasses/DisjointSets.cpp	/^int DisjointSets::singleton(int x) const {$/;"	f	class:DisjointSets
site	libpdb/pdb++.h	/^		Site	site;$/;"	m	union:PDB::__anon5
sites_frac	reduce_src/bkup/old_neighborList.h	/^	scitbx::af::shared< double3 > sites_frac;$/;"	m	class:NeighborList
sites_frac	reduce_src/old_neighborList.h	/^	scitbx::af::shared< double3 > sites_frac;$/;"	m	class:NeighborList
size	libpdb/pdb++.h	/^		int	size;$/;"	m	struct:PDB::UserGfxFont
size	reduce_src/ElementInfo.h	/^   virtual int size() const { return _index.size(); }$/;"	f	class:StandardElementTable
size	reduce_src/ElementInfo.h	/^virtual int size() const { return 0; }$/;"	f	class:ElementTable
size	reduce_src/ResBlk.h	/^   unsigned long size() const { return _resAtoms.size(); }$/;"	f	class:ResBlk
size	reduce_src/bkup/ElementInfo.h	/^   virtual int size() const { return _index.size(); }$/;"	f	class:StandardElementTable
size	reduce_src/bkup/ElementInfo.h	/^virtual int size() const { return 0; }$/;"	f	class:ElementTable
size	reduce_src/bkup/ResBlk.h	/^   unsigned long size() const { return _resAtoms.size(); }$/;"	f	class:ResBlk
size	reduce_src/bkup/old_neighborList.cpp	/^int NeighborList::size(){return _pair_sym_table.size();}$/;"	f	class:NeighborList
size	reduce_src/old_neighborList.cpp	/^int NeighborList::size(){return _pair_sym_table.size();}$/;"	f	class:NeighborList
size	toolclasses/Dict.h	/^   unsigned long size() const { return _n; } \/\/ num of keys$/;"	f	class:Dict
size	toolclasses/DisjointSets.cpp	/^int DisjointSets::size(int x) {$/;"	f	class:DisjointSets
size	toolclasses/DisjointSets.h	/^   int size() const { return *_size; }$/;"	f	class:DisjointSets
size	toolclasses/List.h	/^   int  size() const { return _num_elem; }$/;"	f	class:List
size	toolclasses/ListIter.h	/^   int size() const { return _list.size(); }$/;"	f	class:ListIter
size	toolclasses/MultiDict.h	/^   unsigned long size() const { return _n; } \/\/ num of keys$/;"	f	class:MultiDict
size	toolclasses/Queue.h	/^   int   size() const { return List<T>::size();  }$/;"	f	class:Queue
size	toolclasses/Stack.h	/^   int   size() const { return List<T>::size();  }$/;"	f	class:Stack
size	toolclasses/VectIter.h	/^   int size() const { return _vec.size(); }$/;"	f	class:VectIter
size	toolclasses/Vector.h	/^   int size() const { return _num_elem; }$/;"	f	class:Vector
sort	toolclasses/List.cpp	/^void List<T>::sort () {$/;"	f	class:List
sort	toolclasses/Seq.cpp	/^Seq<T> sort(const Seq<T>& x) {$/;"	f
sort	toolclasses/Vector.cpp	/^void Vector<T>::sort(int len, int offset) {$/;"	f	class:Vector
sortSingletonsByDescr	reduce_src/CliqueList.cpp	/^void CliqueList::sortSingletonsByDescr() {$/;"	f	class:CliqueList
sortSingletonsByDescr	reduce_src/bkup/CliqueList.cpp	/^void CliqueList::sortSingletonsByDescr() {$/;"	f	class:CliqueList
sort_four	reduce_src/GraphToHoldScores.cpp	/^void sort_four( int a, int b, int c, int d, int & w, int & x, int & y, int & z)$/;"	f
sort_four	reduce_src/bkup/GraphToHoldScores.cpp	/^void sort_four( int a, int b, int c, int d, int & w, int & x, int & y, int & z)$/;"	f
sort_three	reduce_src/GraphToHoldScores.cpp	/^void sort_three(int a, int b, int c, int & x, int & y, int & z)$/;"	f
sort_three	reduce_src/bkup/GraphToHoldScores.cpp	/^void sort_three(int a, int b, int c, int & x, int & y, int & z)$/;"	f
source	libpdb/pdb++.h	/^		Source	source;$/;"	m	union:PDB::__anon5
sourceSerialNum	libpdb/pdb++.h	/^		int	sourceSerialNum;$/;"	m	struct:PDB::Trnsfm
spaceGrp	libpdb/pdb++.h	/^		char	spaceGrp[12];$/;"	m	struct:PDB::Cryst1
spaceGrp	reduce_src/bkup/new_reduce.cpp	/^	char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/bkup/reduce.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/bkup/sym_add.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/bkup/sym_print.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/new_reduce.cpp	/^	char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/print_neighbors.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/sym_add.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/sym_print.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spaceGrp	reduce_src/test_reduce.cpp	/^        char    spaceGrp[12];$/;"	m	struct:Cryst1	file:
spec	libpdb/pdb++.h	/^		char	spec[39];$/;"	m	struct:PDB::UserColor
split	toolclasses/List.cpp	/^void List<T>::split(DblLnkLstNode<T> *x, DblLnkLstNode<T> **y, DblLnkLstNode<T> **z) {$/;"	f	class:List
split	toolclasses/Seq.cpp	/^void split(Seq<T> x, Seq<T>& y, Seq<T>& z) {$/;"	f
sprintf	libpdb/pdb_sprntf.cpp	/^PDB::sprintf(char *outbuf, const char *fmt, ...)$/;"	f	class:PDB
sprsde	libpdb/pdb++.h	/^		Sprsde	sprsde;$/;"	m	union:PDB::__anon5
ssbond	libpdb/pdb++.h	/^		Ssbond	ssbond;$/;"	m	union:PDB::__anon5
sscanf	libpdb/pdb_sscanf.cpp	/^PDB::sscanf(const char *buffer, const char *fmt, ...)$/;"	f	class:PDB
start	toolclasses/Seq.h	/^   Seq_item<T>* start() const { return _item; } \/\/ JSS: iterator that doesn't ref count (I hope) $/;"	f	class:Seq
statesEnabled_	reduce_src/GraphToHoldScores.h	/^	std::vector< bool > statesEnabled_;$/;"	m	class:Vertex_ths
statesEnabled_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< bool > statesEnabled_;$/;"	m	class:Vertex_ths
stdBondLen	reduce_src/bkup/reduce.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/bkup/sym_add.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/bkup/sym_print.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/print_neighbors.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/reduce.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/sym_add.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/sym_print.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdBondLen	reduce_src/test_reduce.cpp	/^void stdBondLen(float dist, PDBrec& ourHydrogen, std::list<PDBrec*>& firstAtoms,$/;"	f
stdFormatString	reduce_src/PDBrec.h	/^   std::string stdFormatString() const { return recName(); };$/;"	f	class:PDBrec
stdFormatString	reduce_src/bkup/PDBrec.h	/^   std::string stdFormatString() const { return recName(); };$/;"	f	class:PDBrec
strandNum	libpdb/pdb++.h	/^		int	strandNum;$/;"	m	struct:PDB::Sheet
strcasecmp	toolclasses/utility.cpp	/^int strcasecmp(const char *buf, const char *pat) {$/;"	f
strncasecmp	toolclasses/utility.cpp	/^int strncasecmp(const char *buf, const char *pat, int sz) {$/;"	f
subsets	toolclasses/DisjointSets.cpp	/^int** DisjointSets::subsets() {$/;"	f	class:DisjointSets
subtractDotsOn	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::subtractDotsOn( DotsForAtom const & other )$/;"	f	class:DotsForAtom
subtractDotsOn	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::subtractDotsOn( DotsForAtom const & other )$/;"	f	class:DotsForAtom
subtype	libpdb/pdb++.h	/^		char	subtype[3];$/;"	m	struct:PDB::User
supersede	libpdb/pdb++.h	/^		PName	supersede[8];$/;"	m	struct:PDB::Sprsde
swap2	toolclasses/utility.h	/^inline void swap2(T& a, T& b) { T temp = a; a = b; b = temp; }$/;"	f
swapInts	toolclasses/DisjointSets.cpp	/^inline void swapInts(int& a, int& b) { int temp = a; a = b; b = temp; }$/;"	f
symdes	libpdb/pdb++.h	/^		Symdes	symdes;$/;"	m	union:PDB::__anon5
symop	libpdb/pdb++.h	/^		Symop	symop;$/;"	m	union:PDB::__anon5
sync	toolclasses/ListIter.h	/^   void sync(const ListIter<T>& li) { _node = li._node; }$/;"	f	class:ListIter
sync	toolclasses/VectIter.h	/^   void sync(const VectIter<T>& vi) { _elem = vi._elem; }$/;"	f	class:VectIter
sys	run_tests.py	/^import sys, os$/;"	i
t	libpdb/pdb++.h	/^		Real	o1, o2, o3, t;$/;"	m	struct:PDB::Origx
t	libpdb/pdb++.h	/^		Real	s1, s2, s3, t;$/;"	m	struct:PDB::Symop
t1	libpdb/pdb++.h	/^		Real	t1, t2, t3;$/;"	m	struct:PDB::Tvect
t2	libpdb/pdb++.h	/^		Real	t1, t2, t3;$/;"	m	struct:PDB::Tvect
t3	libpdb/pdb++.h	/^		Real	t1, t2, t3;$/;"	m	struct:PDB::Tvect
tellD2EdgesToNotScoreDotsScoredOnD3Edge	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::tellD2EdgesToNotScoreDotsScoredOnD3Edge() const$/;"	f	class:DegreeThreeEdge_ths
tellD2EdgesToNotScoreDotsScoredOnD3Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::tellD2EdgesToNotScoreDotsScoredOnD3Edge() const$/;"	f	class:DegreeThreeEdge_ths
tellD3EdgesToNotScoreDotsScoredOnD4Edge	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::tellD3EdgesToNotScoreDotsScoredOnD4Edge() const$/;"	f	class:DegreeFourEdge_ths
tellD3EdgesToNotScoreDotsScoredOnD4Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::tellD3EdgesToNotScoreDotsScoredOnD4Edge() const$/;"	f	class:DegreeFourEdge_ths
tellVerticesToNotScoreDotsScoredOnD2Edge	reduce_src/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::tellVerticesToNotScoreDotsScoredOnD2Edge() const$/;"	f	class:DegreeTwoEdge_ths
tellVerticesToNotScoreDotsScoredOnD2Edge	reduce_src/bkup/GraphToHoldScores.cpp	/^void DegreeTwoEdge_ths::tellVerticesToNotScoreDotsScoredOnD2Edge() const$/;"	f	class:DegreeTwoEdge_ths
tempFactor	libpdb/pdb++.h	/^		Real	occupancy, tempFactor;$/;"	m	struct:PDB::Atom
tempFactor	reduce_src/PDBrec.h	/^   float tempFactor()     const { return _rep->_r.atom.tempFactor;         }$/;"	f	class:PDBrec
tempFactor	reduce_src/PDBrec.h	/^   void tempFactor(float t)        { _rep->_r.atom.tempFactor = t;     }$/;"	f	class:PDBrec
tempFactor	reduce_src/bkup/PDBrec.h	/^   float tempFactor()     const { return _rep->_r.atom.tempFactor;         }$/;"	f	class:PDBrec
tempFactor	reduce_src/bkup/PDBrec.h	/^   void tempFactor(float t)        { _rep->_r.atom.tempFactor = t;     }$/;"	f	class:PDBrec
ter	libpdb/pdb++.h	/^		Ter	ter;$/;"	m	union:PDB::__anon5
terAtomno	reduce_src/PDBrec.h	/^   void terAtomno(int n)           { $/;"	f	class:PDBrec
terAtomno	reduce_src/bkup/PDBrec.h	/^   void terAtomno(int n)           { $/;"	f	class:PDBrec
text	libpdb/pdb++.h	/^		char	text[41];$/;"	m	struct:PDB::Het
text	libpdb/pdb++.h	/^		char	text[57];		\/\/ 27 in version 5$/;"	m	struct:PDB::UserGfxLabel
text	libpdb/pdb++.h	/^		char	text[60];$/;"	m	struct:PDB::Agrdes
text	libpdb/pdb++.h	/^		char	text[67];$/;"	m	struct:PDB::User
theAtom_	reduce_src/GraphToHoldScores.h	/^	AtomDescr theAtom_;$/;"	m	class:DotsForAtom
theAtom_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomDescr theAtom_;$/;"	m	class:DotsForAtom
timestamp	libpdb/pdb++.h	/^		Date	timestamp;$/;"	m	struct:PDB::Header
timestamp	libpdb/pdb++.h	/^		Date	timestamp;$/;"	m	struct:PDB::Obslte
timestamp	libpdb/pdb++.h	/^		Date	timestamp;$/;"	m	struct:PDB::Revdat
timestamp	libpdb/pdb++.h	/^		Date	timestamp;$/;"	m	struct:PDB::Sprsde
tl	toolclasses/Seq.h	/^   Seq tl() const {$/;"	f	class:Seq
toUppercase	toolclasses/utility.cpp	/^toUppercase(const char* a) {$/;"	f
top	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
top	toolclasses/Stack.h	/^   const T& top() const { return List<T>::operator*(); }$/;"	f	class:Stack
total_size	reduce_src/bkup/neighborList.h	/^	int total_size(){$/;"	f	class:NeighborList
total_size	reduce_src/neighborList.h	/^	int total_size(){$/;"	f	class:NeighborList
trackFlipMaxScore	reduce_src/Mover.cpp	/^void Mover::trackFlipMaxScore(int f, double val, bool hasBadBump) {$/;"	f	class:Mover
trackFlipMaxScore	reduce_src/bkup/Mover.cpp	/^void Mover::trackFlipMaxScore(int f, double val, bool hasBadBump) {$/;"	f	class:Mover
trimStr	toolclasses/utility.cpp	/^int trimStr(char *s) {$/;"	f
trnsfm	libpdb/pdb++.h	/^		Trnsfm	trnsfm;$/;"	m	union:PDB::__anon5
turn	libpdb/pdb++.h	/^		Turn	turn;$/;"	m	union:PDB::__anon5
turnOffAllDots	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::turnOffAllDots()$/;"	f	class:DotsForAtom
turnOffAllDots	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::turnOffAllDots()$/;"	f	class:DotsForAtom
turnOnAllDots	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::turnOnAllDots()$/;"	f	class:DotsForAtom
turnOnAllDots	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::turnOnAllDots()$/;"	f	class:DotsForAtom
tvect	libpdb/pdb++.h	/^		Tvect	tvect;$/;"	m	union:PDB::__anon5
type	libpdb/pdb++.cpp	/^PDB::type(RecordType t)$/;"	f	class:PDB
type	libpdb/pdb++.h	/^		char	type;$/;"	m	struct:PDB::Header
type	libpdb/pdb++.h	/^		int	type;$/;"	m	struct:PDB::Helix
type	libpdb/pdb++.h	/^	RecordType	type() const { return rType; }$/;"	f	class:PDB
type	reduce_src/AtomConn.h	/^           int type() const { return _type;  }$/;"	f	class:atomPlacementPlan
type	reduce_src/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
type	reduce_src/FlipMemo.h	/^   virtual Mover::MemoType type() { return Mover::FLIP; }$/;"	f	class:FlipMemo
type	reduce_src/PDBrec.h	/^   PDB::RecordType type() const { return _rep->_r.type(); }$/;"	f	class:PDBrec
type	reduce_src/RotDonor.h	/^   virtual Mover::MemoType type() { return Mover::ROTATE_DONOR; }$/;"	f	class:RotDonor
type	reduce_src/RotMethyl.h	/^   virtual Mover::MemoType type() { return Mover::ROTATE_METHYL; }$/;"	f	class:RotMethyl
type	reduce_src/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
type	reduce_src/bkup/AtomConn.h	/^           int type() const { return _type;  }$/;"	f	class:atomPlacementPlan
type	reduce_src/bkup/FlipMemo.h	/^   int type, anum, c1, c2, c3;$/;"	m	struct:ProtonLoc_t
type	reduce_src/bkup/FlipMemo.h	/^   virtual Mover::MemoType type() { return Mover::FLIP; }$/;"	f	class:FlipMemo
type	reduce_src/bkup/PDBrec.h	/^   PDB::RecordType type() const { return _rep->_r.type(); }$/;"	f	class:PDBrec
type	reduce_src/bkup/RotDonor.h	/^   virtual Mover::MemoType type() { return Mover::ROTATE_DONOR; }$/;"	f	class:RotDonor
type	reduce_src/bkup/RotMethyl.h	/^   virtual Mover::MemoType type() { return Mover::ROTATE_METHYL; }$/;"	f	class:RotMethyl
type	reduce_src/bkup/StdResH.h	/^     int type; const char* elem; const char *hname;$/;"	m	struct:HydrogenPlanTable::addPlan_args
type1position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type1position($/;"	f	class:atomPlacementPlan
type1position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type1position($/;"	f	class:atomPlacementPlan
type2position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type2position($/;"	f	class:atomPlacementPlan
type2position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type2position($/;"	f	class:atomPlacementPlan
type3position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type3position($/;"	f	class:atomPlacementPlan
type3position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type3position($/;"	f	class:atomPlacementPlan
type4position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type4position($/;"	f	class:atomPlacementPlan
type4position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type4position($/;"	f	class:atomPlacementPlan
type5position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type5position($/;"	f	class:atomPlacementPlan
type5position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type5position($/;"	f	class:atomPlacementPlan
type6position	reduce_src/AtomConn.cpp	/^Point3d atomPlacementPlan::type6position($/;"	f	class:atomPlacementPlan
type6position	reduce_src/bkup/AtomConn.cpp	/^Point3d atomPlacementPlan::type6position($/;"	f	class:atomPlacementPlan
u	libpdb/pdb++.h	/^		Real	s1, s2, s3, u;$/;"	m	struct:PDB::Scale
u	libpdb/pdb++.h	/^		int	u[6];$/;"	m	struct:PDB::Anisou
unknown	libpdb/pdb++.h	/^		Unknown	unknown;$/;"	m	union:PDB::__anon5
unknown	libpdb/pdb++.h	/^		char	unknown[33];$/;"	m	struct:PDB::UserGfxBegin
unsupported_width	reduce_src/bkup/hybrid_36_c.c	/^const char* unsupported_width() { return "unsupported width."; }$/;"	f	file:
unsupported_width	reduce_src/hybrid_36_c.c	/^const char* unsupported_width() { return "unsupported width."; }$/;"	f	file:
update	reduce_src/BumperPoint.h	/^      void update(const Point3d& p, int rn, int an, float rad) {$/;"	f	struct:BumperPoint::BumperPointRep
update	reduce_src/PDBrec.h	/^      void update(const PDB& r) {$/;"	f	struct:PDBrec::PDBrecRep
update	reduce_src/bkup/BumperPoint.h	/^      void update(const Point3d& p, int rn, int an, float rad) {$/;"	f	struct:BumperPoint::BumperPointRep
update	reduce_src/bkup/PDBrec.h	/^      void update(const PDB& r) {$/;"	f	struct:PDBrec::PDBrecRep
update	toolclasses/ListIter.h	/^   void update(const T& e) const {$/;"	f	class:NonConstListIter
update	toolclasses/VectIter.h	/^   void update(const T& e) const{    \/\/ data modication$/;"	f	class:NonConstVectIter
update	toolclasses/Vector.cpp	/^void Vector<T>::update(int index, const T& val) {$/;"	f	class:Vector
updateIndsOfDotsOn	reduce_src/GraphToHoldScores.cpp	/^void DotsForAtom::updateIndsOfDotsOn() const$/;"	f	class:DotsForAtom
updateIndsOfDotsOn	reduce_src/bkup/GraphToHoldScores.cpp	/^void DotsForAtom::updateIndsOfDotsOn() const$/;"	f	class:DotsForAtom
user	libpdb/pdb++.h	/^		User	user;$/;"	m	union:PDB::__anon5
userAngle	libpdb/pdb++.h	/^		UserAngle	userAngle;$/;"	m	union:PDB::__anon5
userAtPos	libpdb/pdb++.h	/^		UserAtPos	userAtPos;$/;"	m	union:PDB::__anon5
userBgColor	libpdb/pdb++.h	/^		UserBgColor	userBgColor;$/;"	m	union:PDB::__anon5
userCName	libpdb/pdb++.h	/^		UserCName	userCName;$/;"	m	union:PDB::__anon5
userChain	libpdb/pdb++.h	/^		UserChain	userChain;$/;"	m	union:PDB::__anon5
userColor	libpdb/pdb++.h	/^		UserColor	userColor;$/;"	m	union:PDB::__anon5
userDistance	libpdb/pdb++.h	/^		UserDistance	userDistance;$/;"	m	union:PDB::__anon5
userEndObj	libpdb/pdb++.h	/^		UserEndObj	userEndObj;$/;"	m	union:PDB::__anon5
userEyePos	libpdb/pdb++.h	/^		UserEyePos	userEyePos;$/;"	m	union:PDB::__anon5
userFile	libpdb/pdb++.h	/^		UserFile	userFile;$/;"	m	union:PDB::__anon5
userFocus	libpdb/pdb++.h	/^		UserFocus	userFocus;$/;"	m	union:PDB::__anon5
userGfxBegin	libpdb/pdb++.h	/^		UserGfxBegin	userGfxBegin;$/;"	m	union:PDB::__anon5
userGfxColor	libpdb/pdb++.h	/^		UserGfxColor	userGfxColor;$/;"	m	union:PDB::__anon5
userGfxDraw	libpdb/pdb++.h	/^		UserGfxDraw	userGfxDraw;$/;"	m	union:PDB::__anon5
userGfxFont	libpdb/pdb++.h	/^		UserGfxFont	userGfxFont;$/;"	m	union:PDB::__anon5
userGfxLabel	libpdb/pdb++.h	/^		UserGfxLabel	userGfxLabel;$/;"	m	union:PDB::__anon5
userGfxMarker	libpdb/pdb++.h	/^		UserGfxMarker	userGfxMarker;$/;"	m	union:PDB::__anon5
userGfxMove	libpdb/pdb++.h	/^		UserGfxMove	userGfxMove;$/;"	m	union:PDB::__anon5
userGfxNormal	libpdb/pdb++.h	/^		UserGfxNormal	userGfxNormal;$/;"	m	union:PDB::__anon5
userGfxPoint	libpdb/pdb++.h	/^		UserGfxPoint	userGfxPoint;$/;"	m	union:PDB::__anon5
userGfxTextPos	libpdb/pdb++.h	/^		UserGfxTextPos	userGfxTextPos;$/;"	m	union:PDB::__anon5
userGfxVertex	libpdb/pdb++.h	/^		UserGfxVertex	userGfxVertex;$/;"	m	union:PDB::__anon5
userMark	libpdb/pdb++.h	/^		UserMark	userMark;$/;"	m	union:PDB::__anon5
userMarkname	libpdb/pdb++.h	/^		UserMarkname	userMarkname;$/;"	m	union:PDB::__anon5
userObject	libpdb/pdb++.h	/^		UserObject	userObject;$/;"	m	union:PDB::__anon5
userPdbrun	libpdb/pdb++.h	/^		UserPdbrun	userPdbrun;$/;"	m	union:PDB::__anon5
userRadius	libpdb/pdb++.h	/^		UserRadius	userRadius;$/;"	m	union:PDB::__anon5
userViewport	libpdb/pdb++.h	/^		UserViewport	userViewport;$/;"	m	union:PDB::__anon5
userWindow	libpdb/pdb++.h	/^		UserWindow	userWindow;$/;"	m	union:PDB::__anon5
v	libpdb/pdb++.h	/^		Real	m1, m2, m3, v;$/;"	m	struct:PDB::Mtrix
valid	reduce_src/BumperPoint.h	/^   bool   valid() const { return _rep->_ok; };$/;"	f	class:BumperPoint
valid	reduce_src/Mover.h	/^   bool valid() const { return _ok; }$/;"	f	class:Mover
valid	reduce_src/PDBrec.h	/^   bool valid() const { return _rep->_ok == TRUE;  }$/;"	f	class:PDBrec
valid	reduce_src/ResBlk.h	/^  bool valid(std::list<PDBrec*>& records) const { return (_insertPt != records.end()) && _resAtoms.size() > 0; }$/;"	f	class:ResBlk
valid	reduce_src/bkup/BumperPoint.h	/^   bool   valid() const { return _rep->_ok; };$/;"	f	class:BumperPoint
valid	reduce_src/bkup/Mover.h	/^   bool valid() const { return _ok; }$/;"	f	class:Mover
valid	reduce_src/bkup/PDBrec.h	/^   bool valid() const { return _rep->_ok == TRUE;  }$/;"	f	class:PDBrec
valid	reduce_src/bkup/ResBlk.h	/^  bool valid(std::list<PDBrec*>& records) const { return (_insertPt != records.end()) && _resAtoms.size() > 0; }$/;"	f	class:ResBlk
valid	toolclasses/ListIter.h	/^   bool valid()    const { return _node != NULL; }$/;"	f	class:ListIter
valid	toolclasses/VectIter.h	/^   bool valid() const { return (_elem >= 0)$/;"	f	class:VectIter
validateMemo	reduce_src/Mover.h	/^   void validateMemo()  { if (_adj) { _ok = TRUE; } }$/;"	f	class:Mover
validateMemo	reduce_src/bkup/Mover.h	/^   void validateMemo()  { if (_adj) { _ok = TRUE; } }$/;"	f	class:Mover
value	reduce_src/CTab.h	/^   int value() { return _value; }$/;"	f	class:FileLoc
value	reduce_src/bkup/CTab.h	/^   int value() { return _value; }$/;"	f	class:FileLoc
value	toolclasses/Dict.h	/^       T* value() const { return _value; }$/;"	f	class:DictLink
value	toolclasses/Dict.h	/^   void value(T* vp)      {$/;"	f	class:DictLink
value	toolclasses/Dict.h	/^   void value(const T& v) {$/;"	f	class:DictLink
value	toolclasses/MultiDict.h	/^   Seq<T> value() const { return _value; }$/;"	f	class:MultiLink
value_out_of_range	reduce_src/bkup/hybrid_36_c.c	/^value_out_of_range() { return "value out of range."; }$/;"	f	file:
value_out_of_range	reduce_src/hybrid_36_c.c	/^value_out_of_range() { return "value out of range."; }$/;"	f	file:
vdwGap	reduce_src/Mover.cpp	/^double vdwGap(const PDBrec& a, const Point3d& aloc,$/;"	f
vdwGap	reduce_src/bkup/Mover.cpp	/^double vdwGap(const PDBrec& a, const Point3d& aloc,$/;"	f
vdwRad	reduce_src/BumperPoint.h	/^   float vdwRad() const { return _rep->_radii; };$/;"	f	class:BumperPoint
vdwRad	reduce_src/PDBrec.h	/^   float      vdwRad() const { return _rep->_e.explRad();    }$/;"	f	class:PDBrec
vdwRad	reduce_src/bkup/BumperPoint.h	/^   float vdwRad() const { return _rep->_radii; };$/;"	f	class:BumperPoint
vdwRad	reduce_src/bkup/PDBrec.h	/^   float      vdwRad() const { return _rep->_e.explRad();    }$/;"	f	class:PDBrec
version	libpdb/pdb++.h	/^		int	version;$/;"	m	struct:PDB::UserPdbrun
versionString	reduce_src/bkup/new_reduce.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/bkup/reduce.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/bkup/sym_add.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/bkup/sym_print.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/new_reduce.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/print_neighbors.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/reduce.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/sym_add.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/sym_print.cpp	/^static const char *versionString =$/;"	v	file:
versionString	reduce_src/test_reduce.cpp	/^static const char *versionString =$/;"	v	file:
vertex_indices_	reduce_src/GraphToHoldScores.h	/^	int vertex_indices_[2];$/;"	m	class:DegreeTwoEdge_ths
vertex_indices_	reduce_src/GraphToHoldScores.h	/^	int vertex_indices_[3];$/;"	m	class:DegreeThreeEdge_ths
vertex_indices_	reduce_src/GraphToHoldScores.h	/^	int vertex_indices_[4];$/;"	m	class:DegreeFourEdge_ths
vertex_indices_	reduce_src/bkup/GraphToHoldScores.h	/^	int vertex_indices_[2];$/;"	m	class:DegreeTwoEdge_ths
vertex_indices_	reduce_src/bkup/GraphToHoldScores.h	/^	int vertex_indices_[3];$/;"	m	class:DegreeThreeEdge_ths
vertex_indices_	reduce_src/bkup/GraphToHoldScores.h	/^	int vertex_indices_[4];$/;"	m	class:DegreeFourEdge_ths
vertex_ptrs_	reduce_src/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[2];$/;"	m	class:DegreeTwoEdge_ths
vertex_ptrs_	reduce_src/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[3];$/;"	m	class:DegreeThreeEdge_ths
vertex_ptrs_	reduce_src/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[4];$/;"	m	class:DegreeFourEdge_ths
vertex_ptrs_	reduce_src/bkup/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[2];$/;"	m	class:DegreeTwoEdge_ths
vertex_ptrs_	reduce_src/bkup/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[3];$/;"	m	class:DegreeThreeEdge_ths
vertex_ptrs_	reduce_src/bkup/GraphToHoldScores.h	/^	Vertex_ths* vertex_ptrs_[4];$/;"	m	class:DegreeFourEdge_ths
vertices_	reduce_src/GraphToHoldScores.h	/^	std::vector< Vertex_ths * > vertices_;$/;"	m	class:GraphToHoldScores
vertices_	reduce_src/bkup/GraphToHoldScores.h	/^	std::vector< Vertex_ths * > vertices_;$/;"	m	class:GraphToHoldScores
visableAltConf	reduce_src/Mover.cpp	/^bool visableAltConf(const PDBrec& a, bool onlyA) {$/;"	f
visableAltConf	reduce_src/bkup/Mover.cpp	/^bool visableAltConf(const PDBrec& a, bool onlyA) {$/;"	f
w	reduce_src/PDBrec.h	/^         PDB& w()       { return _rep->_r; } \/\/ writable access$/;"	f	class:PDBrec
w	reduce_src/bkup/PDBrec.h	/^         PDB& w()       { return _rep->_r; } \/\/ writable access$/;"	f	class:PDBrec
warn	toolclasses/utility.cpp	/^void warn(const char *message) {$/;"	f
warn_if_unexpected_md5_hexdigest	libtbx_refresh.py	/^from libtbx.utils import warn_if_unexpected_md5_hexdigest$/;"	i
which	libpdb/pdb++.h	/^		int	which;			\/\/ version 5 -- obsolete$/;"	m	struct:PDB::UserAngle
which	libpdb/pdb++.h	/^		int	which;			\/\/ version 5 -- obsolete$/;"	m	struct:PDB::UserDistance
whichVertex	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::whichVertex( int vertex ) const$/;"	f	class:DegreeFourEdge_ths
whichVertex	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::whichVertex( int vertex ) const$/;"	f	class:DegreeThreeEdge_ths
whichVertex	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::whichVertex( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
whichVertex	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::whichVertex( int vertex ) const$/;"	f	class:DegreeFourEdge_ths
whichVertex	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::whichVertex( int vertex ) const$/;"	f	class:DegreeThreeEdge_ths
whichVertex	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::whichVertex( int vertex_index ) const$/;"	f	class:DegreeTwoEdge_ths
withinCovalentDist	reduce_src/Mover.cpp	/^int withinCovalentDist(std::pair<PDBrec*, Point3d> p, std::pair<PDBrec*, Point3d> q, double offset) {$/;"	f
withinCovalentDist	reduce_src/bkup/Mover.cpp	/^int withinCovalentDist(std::pair<PDBrec*, Point3d> p, std::pair<PDBrec*, Point3d> q, double offset) {$/;"	f
writeOutOptimalNetworkState	reduce_src/MoveableNode.cpp	/^void NodeAndEdgeManager::writeOutOptimalNetworkState()$/;"	f	class:NodeAndEdgeManager
writeOutOptimalNetworkState	reduce_src/bkup/MoveableNode.cpp	/^void NodeAndEdgeManager::writeOutOptimalNetworkState()$/;"	f	class:NodeAndEdgeManager
x	reduce_src/LocBlk.h	/^   Coord x() const { return _rep.x(); }$/;"	f	class:LocBlk
x	reduce_src/PDBrec.h	/^   Coord x() const { return _rep->_r.atom.xyz[0]; }$/;"	f	class:PDBrec
x	reduce_src/PDBrec.h	/^   void x(Coord xval) { _rep->_r.atom.xyz[0] = xval; }$/;"	f	class:PDBrec
x	reduce_src/bkup/LocBlk.h	/^   Coord x() const { return _rep.x(); }$/;"	f	class:LocBlk
x	reduce_src/bkup/PDBrec.h	/^   Coord x() const { return _rep->_r.atom.xyz[0]; }$/;"	f	class:PDBrec
x	reduce_src/bkup/PDBrec.h	/^   void x(Coord xval) { _rep->_r.atom.xyz[0] = xval; }$/;"	f	class:PDBrec
x	toolclasses/Point3d.h	/^   Coord x() const { return _x; } \/\/ get$/;"	f	class:Point3d
x	toolclasses/Point3d.h	/^   Point3d& x(Coord x0) { _x = x0; return *this; } \/\/ set$/;"	f	class:Point3d
xmax	libpdb/pdb++.h	/^		Real	xmin, xmax, ymin, ymax;$/;"	m	struct:PDB::UserViewport
xmin	libpdb/pdb++.h	/^		Real	xmin, xmax, ymin, ymax;$/;"	m	struct:PDB::UserViewport
xyz	libpdb/pdb++.h	/^		Real	xyz[3];			\/\/ version 5 -- obsolete$/;"	m	struct:PDB::UserGfxLabel
xyz	libpdb/pdb++.h	/^		Real	xyz[3];$/;"	m	struct:PDB::Atom
xyz	libpdb/pdb++.h	/^		Real	xyz[3];$/;"	m	struct:PDB::UserEyePos
xyz	libpdb/pdb++.h	/^		Real	xyz[3];$/;"	m	struct:PDB::UserGfxMove
xyz	libpdb/pdb++.h	/^		Real	xyz[3];$/;"	m	struct:PDB::UserGfxNormal
xyz	libpdb/pdb++.h	/^		Real	xyz[3];$/;"	m	struct:PDB::UserGfxTextPos
xyz_	reduce_src/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeFourEdge_ths
xyz_	reduce_src/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeThreeEdge_ths
xyz_	reduce_src/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeTwoEdge_ths
xyz_	reduce_src/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:GraphToHoldScores
xyz_	reduce_src/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:Vertex_ths
xyz_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeFourEdge_ths
xyz_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeThreeEdge_ths
xyz_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:DegreeTwoEdge_ths
xyz_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:GraphToHoldScores
xyz_	reduce_src/bkup/GraphToHoldScores.h	/^	AtomPositions * xyz_;$/;"	m	class:Vertex_ths
y	reduce_src/LocBlk.h	/^   Coord y() const { return _rep.y(); }$/;"	f	class:LocBlk
y	reduce_src/PDBrec.h	/^   Coord y() const { return _rep->_r.atom.xyz[1]; }$/;"	f	class:PDBrec
y	reduce_src/PDBrec.h	/^   void y(Coord yval) { _rep->_r.atom.xyz[1] = yval; }$/;"	f	class:PDBrec
y	reduce_src/bkup/LocBlk.h	/^   Coord y() const { return _rep.y(); }$/;"	f	class:LocBlk
y	reduce_src/bkup/PDBrec.h	/^   Coord y() const { return _rep->_r.atom.xyz[1]; }$/;"	f	class:PDBrec
y	reduce_src/bkup/PDBrec.h	/^   void y(Coord yval) { _rep->_r.atom.xyz[1] = yval; }$/;"	f	class:PDBrec
y	toolclasses/Point3d.h	/^   Coord y() const { return _y; }$/;"	f	class:Point3d
y	toolclasses/Point3d.h	/^   Point3d& y(Coord y0) { _y = y0; return *this; }$/;"	f	class:Point3d
ymax	libpdb/pdb++.h	/^		Real	xmin, xmax, ymin, ymax;$/;"	m	struct:PDB::UserViewport
ymin	libpdb/pdb++.h	/^		Real	xmin, xmax, ymin, ymax;$/;"	m	struct:PDB::UserViewport
yon	libpdb/pdb++.h	/^		Real	left, right, bottom, top, hither, yon;$/;"	m	struct:PDB::UserWindow
z	libpdb/pdb++.h	/^		int	z;$/;"	m	struct:PDB::Cryst1
z	reduce_src/LocBlk.h	/^   Coord z() const { return _rep.z(); }$/;"	f	class:LocBlk
z	reduce_src/PDBrec.h	/^   Coord z() const { return _rep->_r.atom.xyz[2]; }$/;"	f	class:PDBrec
z	reduce_src/PDBrec.h	/^   void z(Coord zval) { _rep->_r.atom.xyz[2] = zval; }$/;"	f	class:PDBrec
z	reduce_src/bkup/LocBlk.h	/^   Coord z() const { return _rep.z(); }$/;"	f	class:LocBlk
z	reduce_src/bkup/PDBrec.h	/^   Coord z() const { return _rep->_r.atom.xyz[2]; }$/;"	f	class:PDBrec
z	reduce_src/bkup/PDBrec.h	/^   void z(Coord zval) { _rep->_r.atom.xyz[2] = zval; }$/;"	f	class:PDBrec
z	reduce_src/bkup/new_reduce.cpp	/^	int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/bkup/reduce.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/bkup/sym_add.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/bkup/sym_print.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/new_reduce.cpp	/^	int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/print_neighbors.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/sym_add.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/sym_print.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	reduce_src/test_reduce.cpp	/^        int     z;$/;"	m	struct:Cryst1	file:
z	toolclasses/Point3d.h	/^   Coord z() const { return _z; }$/;"	f	class:Point3d
z	toolclasses/Point3d.h	/^   Point3d& z(Coord z0) { _z = z0; return *this; }$/;"	f	class:Point3d
~AtomConn	reduce_src/AtomConn.h	/^  virtual ~AtomConn() {}$/;"	f	class:AtomConn
~AtomConn	reduce_src/bkup/AtomConn.h	/^  virtual ~AtomConn() {}$/;"	f	class:AtomConn
~AtomDescr	reduce_src/AtomDescr.h	/^	~AtomDescr() {};$/;"	f	class:AtomDescr
~AtomDescr	reduce_src/bkup/AtomDescr.h	/^	~AtomDescr() {};$/;"	f	class:AtomDescr
~AtomPositions	reduce_src/AtomPositions.h	/^  ~AtomPositions() {$/;"	f	class:AtomPositions
~AtomPositions	reduce_src/bkup/AtomPositions.h	/^  ~AtomPositions() {$/;"	f	class:AtomPositions
~BumperPoint	reduce_src/BumperPoint.h	/^  ~BumperPoint() { delete _rep;}$/;"	f	class:BumperPoint
~BumperPoint	reduce_src/bkup/BumperPoint.h	/^  ~BumperPoint() { delete _rep;}$/;"	f	class:BumperPoint
~CTab	reduce_src/CTab.h	/^	virtual ~CTab() { $/;"	f	class:CTab
~CTab	reduce_src/bkup/CTab.h	/^	virtual ~CTab() { $/;"	f	class:CTab
~CliqueList	reduce_src/CliqueList.h	/^  ~CliqueList() {}$/;"	f	class:CliqueList
~CliqueList	reduce_src/bkup/CliqueList.h	/^  ~CliqueList() {}$/;"	f	class:CliqueList
~Degree3Hyperedge	reduce_src/MoveableNode.cpp	/^Degree3Hyperedge::~Degree3Hyperedge()$/;"	f	class:Degree3Hyperedge
~Degree3Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^Degree3Hyperedge::~Degree3Hyperedge()$/;"	f	class:Degree3Hyperedge
~Degree4Hyperedge	reduce_src/MoveableNode.cpp	/^Degree4Hyperedge::~Degree4Hyperedge()$/;"	f	class:Degree4Hyperedge
~Degree4Hyperedge	reduce_src/bkup/MoveableNode.cpp	/^Degree4Hyperedge::~Degree4Hyperedge()$/;"	f	class:Degree4Hyperedge
~DegreeFourEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::~DegreeFourEdge_ths()$/;"	f	class:DegreeFourEdge_ths
~DegreeFourEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeFourEdge_ths::~DegreeFourEdge_ths()$/;"	f	class:DegreeFourEdge_ths
~DegreeThreeEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::~DegreeThreeEdge_ths()$/;"	f	class:DegreeThreeEdge_ths
~DegreeThreeEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeThreeEdge_ths::~DegreeThreeEdge_ths()$/;"	f	class:DegreeThreeEdge_ths
~DegreeTwoEdge_ths	reduce_src/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::~DegreeTwoEdge_ths()$/;"	f	class:DegreeTwoEdge_ths
~DegreeTwoEdge_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^DegreeTwoEdge_ths::~DegreeTwoEdge_ths()$/;"	f	class:DegreeTwoEdge_ths
~Dict	toolclasses/Dict.cpp	/^Dict<K,T>::~Dict() {$/;"	f	class:Dict
~DictIterator	toolclasses/Dict.h	/^virtual ~DictIterator() {}$/;"	f	class:DictIterator
~DictLink	toolclasses/Dict.h	/^   ~DictLink() { delete _value; delete _next; _next = NULL; }$/;"	f	class:DictLink
~DisjointSets	toolclasses/DisjointSets.cpp	/^DisjointSets::~DisjointSets() {$/;"	f	class:DisjointSets
~DotSph	reduce_src/DotSph.h	/^   ~DotSph() {$/;"	f	class:DotSph
~DotSph	reduce_src/bkup/DotSph.h	/^   ~DotSph() {$/;"	f	class:DotSph
~DotSphManager	reduce_src/DotSph.cpp	/^DotSphManager::~DotSphManager()$/;"	f	class:DotSphManager
~DotSphManager	reduce_src/bkup/DotSph.cpp	/^DotSphManager::~DotSphManager()$/;"	f	class:DotSphManager
~DotSphRep	reduce_src/DotSph.h	/^   ~DotSphRep() { if (_p) delete [] _p; }$/;"	f	class:DotSphRep
~DotSphRep	reduce_src/bkup/DotSph.h	/^   ~DotSphRep() { if (_p) delete [] _p; }$/;"	f	class:DotSphRep
~DotsForAtom	reduce_src/GraphToHoldScores.cpp	/^DotsForAtom::~DotsForAtom()$/;"	f	class:DotsForAtom
~DotsForAtom	reduce_src/bkup/GraphToHoldScores.cpp	/^DotsForAtom::~DotsForAtom()$/;"	f	class:DotsForAtom
~EdgeBetweenMoveableNodes	reduce_src/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::~EdgeBetweenMoveableNodes() { delete _theEdgeScoreMatrix; _theEdgeScoreMatrix = NULL;}$/;"	f	class:EdgeBetweenMoveableNodes
~EdgeBetweenMoveableNodes	reduce_src/bkup/MoveableNode.cpp	/^EdgeBetweenMoveableNodes::~EdgeBetweenMoveableNodes() { delete _theEdgeScoreMatrix; _theEdgeScoreMatrix = NULL;}$/;"	f	class:EdgeBetweenMoveableNodes
~EdgeScoreMatrix	reduce_src/MoveableNode.cpp	/^EdgeScoreMatrix::~EdgeScoreMatrix()$/;"	f	class:EdgeScoreMatrix
~EdgeScoreMatrix	reduce_src/bkup/MoveableNode.cpp	/^EdgeScoreMatrix::~EdgeScoreMatrix()$/;"	f	class:EdgeScoreMatrix
~ElementInfo	reduce_src/ElementInfo.h	/^   virtual ~ElementInfo() { if (--_rep->_count <= 0) delete _rep; }$/;"	f	class:ElementInfo
~ElementInfo	reduce_src/bkup/ElementInfo.h	/^   virtual ~ElementInfo() { if (--_rep->_count <= 0) delete _rep; }$/;"	f	class:ElementInfo
~ElementInfoRep	reduce_src/ElementInfo.cpp	/^ElementInfo::ElementInfoRep::~ElementInfoRep() {$/;"	f	class:ElementInfo::ElementInfoRep
~ElementInfoRep	reduce_src/bkup/ElementInfo.cpp	/^ElementInfo::ElementInfoRep::~ElementInfoRep() {$/;"	f	class:ElementInfo::ElementInfoRep
~ElementTable	reduce_src/ElementInfo.h	/^virtual ~ElementTable() {};$/;"	f	class:ElementTable
~ElementTable	reduce_src/bkup/ElementInfo.h	/^virtual ~ElementTable() {};$/;"	f	class:ElementTable
~FileLoc	reduce_src/CTab.h	/^   virtual ~FileLoc() {}$/;"	f	class:FileLoc
~FileLoc	reduce_src/bkup/CTab.h	/^   virtual ~FileLoc() {}$/;"	f	class:FileLoc
~FlipMemo	reduce_src/FlipMemo.h	/^   virtual ~FlipMemo() {$/;"	f	class:FlipMemo
~FlipMemo	reduce_src/bkup/FlipMemo.h	/^   virtual ~FlipMemo() {$/;"	f	class:FlipMemo
~GraphToHoldScores	reduce_src/GraphToHoldScores.cpp	/^GraphToHoldScores::~GraphToHoldScores()$/;"	f	class:GraphToHoldScores
~GraphToHoldScores	reduce_src/bkup/GraphToHoldScores.cpp	/^GraphToHoldScores::~GraphToHoldScores()$/;"	f	class:GraphToHoldScores
~Hdl	toolclasses/Hdl.h	/^   ~Hdl() { if (_u.only()) delete _p; }$/;"	f	class:Hdl
~HydrogenPlanTable	reduce_src/StdResH.h	/^   ~HydrogenPlanTable() {$/;"	f	class:HydrogenPlanTable
~HydrogenPlanTable	reduce_src/bkup/StdResH.h	/^   ~HydrogenPlanTable() {$/;"	f	class:HydrogenPlanTable
~List	toolclasses/List.h	/^  ~List() { $/;"	f	class:List
~LocBlk	reduce_src/LocBlk.h	/^  ~LocBlk() {}$/;"	f	class:LocBlk
~LocBlk	reduce_src/bkup/LocBlk.h	/^  ~LocBlk() {}$/;"	f	class:LocBlk
~Matrix4d	toolclasses/Point3d.h	/^   ~Matrix4d() { }$/;"	f	class:Matrix4d
~MoveableNode	reduce_src/MoveableNode.cpp	/^MoveableNode::~MoveableNode()$/;"	f	class:MoveableNode
~MoveableNode	reduce_src/bkup/MoveableNode.cpp	/^MoveableNode::~MoveableNode()$/;"	f	class:MoveableNode
~Mover	reduce_src/Mover.h	/^   virtual ~Mover() {$/;"	f	class:Mover
~Mover	reduce_src/bkup/Mover.h	/^   virtual ~Mover() {$/;"	f	class:Mover
~MultiDict	toolclasses/MultiDict.cpp	/^MultiDict<K,T>::~MultiDict() {$/;"	f	class:MultiDict
~MultiDictIterator	toolclasses/MultiDict.h	/^virtual ~MultiDictIterator() {}$/;"	f	class:MultiDictIterator
~MultiLink	toolclasses/MultiDict.h	/^   ~MultiLink() { delete _next; _next = NULL; }$/;"	f	class:MultiLink
~NodeAndEdgeManager	reduce_src/MoveableNode.cpp	/^NodeAndEdgeManager::~NodeAndEdgeManager()$/;"	f	class:NodeAndEdgeManager
~NodeAndEdgeManager	reduce_src/bkup/MoveableNode.cpp	/^NodeAndEdgeManager::~NodeAndEdgeManager()$/;"	f	class:NodeAndEdgeManager
~NodeScoreVector	reduce_src/MoveableNode.cpp	/^NodeScoreVector::~NodeScoreVector() {}$/;"	f	class:NodeScoreVector
~NodeScoreVector	reduce_src/bkup/MoveableNode.cpp	/^NodeScoreVector::~NodeScoreVector() {}$/;"	f	class:NodeScoreVector
~OptimizedNodeStateMatrix	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix::~OptimizedNodeStateMatrix()$/;"	f	class:OptimizedNodeStateMatrix
~OptimizedNodeStateMatrix	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix::~OptimizedNodeStateMatrix()$/;"	f	class:OptimizedNodeStateMatrix
~OptimizedNodeStateMatrix3	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::~OptimizedNodeStateMatrix3()$/;"	f	class:OptimizedNodeStateMatrix3
~OptimizedNodeStateMatrix3	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateMatrix3::~OptimizedNodeStateMatrix3()$/;"	f	class:OptimizedNodeStateMatrix3
~OptimizedNodeStateVector	reduce_src/MoveableNode.cpp	/^OptimizedNodeStateVector::~OptimizedNodeStateVector() {}$/;"	f	class:OptimizedNodeStateVector
~OptimizedNodeStateVector	reduce_src/bkup/MoveableNode.cpp	/^OptimizedNodeStateVector::~OptimizedNodeStateVector() {}$/;"	f	class:OptimizedNodeStateVector
~PDBrec	reduce_src/PDBrec.h	/^  ~PDBrec() {$/;"	f	class:PDBrec
~PDBrec	reduce_src/bkup/PDBrec.h	/^  ~PDBrec() {$/;"	f	class:PDBrec
~Point3d	toolclasses/Point3d.h	/^   ~Point3d() { }$/;"	f	class:Point3d
~QueueOfToBeEliminatedNodes	reduce_src/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes::~QueueOfToBeEliminatedNodes()$/;"	f	class:QueueOfToBeEliminatedNodes
~QueueOfToBeEliminatedNodes	reduce_src/bkup/MoveableNode.cpp	/^QueueOfToBeEliminatedNodes::~QueueOfToBeEliminatedNodes()$/;"	f	class:QueueOfToBeEliminatedNodes
~ResBlk	reduce_src/ResBlk.h	/^  ~ResBlk() {}$/;"	f	class:ResBlk
~ResBlk	reduce_src/bkup/ResBlk.h	/^  ~ResBlk() {}$/;"	f	class:ResBlk
~ResConn	reduce_src/CTab.h	/^	virtual ~ResConn() {$/;"	f	class:ResConn
~ResConn	reduce_src/bkup/CTab.h	/^	virtual ~ResConn() {$/;"	f	class:ResConn
~RotDonor	reduce_src/RotDonor.cpp	/^RotDonor::~RotDonor()$/;"	f	class:RotDonor
~RotDonor	reduce_src/bkup/RotDonor.cpp	/^RotDonor::~RotDonor()$/;"	f	class:RotDonor
~RotMethyl	reduce_src/RotMethyl.h	/^   virtual ~RotMethyl() {$/;"	f	class:RotMethyl
~RotMethyl	reduce_src/bkup/RotMethyl.h	/^   virtual ~RotMethyl() {$/;"	f	class:RotMethyl
~Seq	toolclasses/Seq.h	/^   ~Seq() { destroy(_item); }$/;"	f	class:Seq
~StandardElementTable	reduce_src/ElementInfo.cpp	/^StandardElementTable::~StandardElementTable() {$/;"	f	class:StandardElementTable
~StandardElementTable	reduce_src/bkup/ElementInfo.cpp	/^StandardElementTable::~StandardElementTable() {$/;"	f	class:StandardElementTable
~StdResH	reduce_src/StdResH.h	/^   ~StdResH() {}$/;"	f	class:StdResH
~StdResH	reduce_src/bkup/StdResH.h	/^   ~StdResH() {}$/;"	f	class:StdResH
~StdResXtraInfo	reduce_src/StdResH.h	/^   ~StdResXtraInfo() {}$/;"	f	class:StdResXtraInfo
~StdResXtraInfo	reduce_src/bkup/StdResH.h	/^   ~StdResXtraInfo() {}$/;"	f	class:StdResXtraInfo
~StringRep	toolclasses/Stringclass.h	/^      ~StringRep() { delete[] rep; }$/;"	f	class:Stringclass::StringRep
~Stringclass	toolclasses/Stringclass.h	/^   ~Stringclass() { if (--rep->count <= 0) delete rep; }$/;"	f	class:Stringclass
~UseCount	toolclasses/UseCount.h	/^   ~UseCount() { if (--*_p == 0) delete _p; }$/;"	f	class:UseCount
~Vector	toolclasses/Vector.h	/^  ~Vector() { delete [] _array; _array=NULL; _num_elem=_array_len=0; }$/;"	f	class:Vector
~Vertex_ths	reduce_src/GraphToHoldScores.cpp	/^Vertex_ths::~Vertex_ths()$/;"	f	class:Vertex_ths
~Vertex_ths	reduce_src/bkup/GraphToHoldScores.cpp	/^Vertex_ths::~Vertex_ths()$/;"	f	class:Vertex_ths
~atomPlacementPlan	reduce_src/AtomConn.h	/^   virtual ~atomPlacementPlan() {}$/;"	f	class:atomPlacementPlan
~atomPlacementPlan	reduce_src/bkup/AtomConn.h	/^   virtual ~atomPlacementPlan() {}$/;"	f	class:atomPlacementPlan
